// a parser is a monad
Parsec.then: <A: Type> -> <B: Type> -> Parsec(A) -> Parsec(B) -> Parsec(B)

  <A> <B> (pa) (pb)
  <X> (s1) (empty_value) (empty_error) (eaten_value) (eaten_error)
  pa<X>(s1)
  | (s2) (a) pb<X>(s2)
    | (s3) (b) empty_value(s3)(b);
    | empty_error;
    | (s3) (b) eaten_value(s3)(b);
    | eaten_error;;
  | empty_error;
  | (s2) (a) pb<X>(s2)
    | (s3) (b) eaten_value(s3)(b);
    | eaten_error;
    | (s3) (b) eaten_value(s3)(b);
    | eaten_error;;
  | eaten_error;
