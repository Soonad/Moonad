TA.Thing.is_stunned: TA.Thing -> Bool
  (self)
  let self.buf = TA.Thing.get_buf(self)
  let is_stunned = ((buff) 
    buff<() Bool>
    | #shielded# (buff.dur) (buff.val) Bool.false;
    | #slowed#   (buff.dur) (buff.val) Bool.false;
    | #hasted#   (buff.dur) (buff.val) Bool.false;
    | #silenced# (buff.dur) Bool.false;
    | #rooted#   (buff.dur) Bool.false;
    | #stuned#   (buff.dur) Bool.true;
  ) :: TA.Game.Buff -> Bool
  let found_buf = List.find<TA.Game.Buff>
    | is_stunned;
    | self.buf;
  found_buf<() Bool>
  | #none# Bool.false;
  | #some# (value) Bool.true;

// is_stunned(self: Thing) : Bool 
//   case self |thing 
//   let is_stunned_buff = (buff: Buff) => 
//     case buff 
//     | shielded => false  
//     | slowed   => false  
//     | hasted   => false 
//     | silenced => false  
//     | rooted   => false 
//     | stuned   => true  
//   case find(Buff; is_stunned_buff, self.buf) as res 
//   | none => false 
//   | some => true
