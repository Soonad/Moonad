TA.Thing.benfix_fun: (self: TA.Thing) -> TA.Thing
  (self)
  let self = TA.Thing.set_mov(self)(F64.parse("2"))
  let self = TA.Thing.set_mhp(self)(F64.parse("24"))
  let self.act = TA.Thing.get_act(self)
  let self.dir = TA.Thing.get_dir(self)
  let self.pos = TA.Thing.get_pos(self)

  Bool.if<TA.Thing>(F64.eql(self.act)(F64.0))
  | #BENFIX_IDLE# 
    F64.if<TA.Thing>(TA.Thing.is_walking(self))
    | TA.Thing.animate(self)(F64.1)(BENFIX_WALK_000) 
      | F64.parse("7");
      | F64.parse("14");;
    | TA.Thing.animate(self)(F64.1)(BENFIX_IDLE_000) 
      | F64.parse("12");
      | F64.parse("24");;;
  
  | Bool.if<TA.Thing>(F64.eql(self.act)(F64.1))
  | #BENFIX_DOUBLE_ATTACK# 
    let self = 
      TA.Thing.animate(self)(F64.0)(BENFIX_TRIPLE_ATTACK_1_000)
      | F64.parse("16");
      | F64.parse("32");
  
    let effs0 = 
      List.cons<TA.Game.Effect>
      | TA.Game.Effect.damage(F64.parse("1"));
      | List.nil<TA.Game.Effect>;
     
    let effs1 = 
      List.cons<TA.Game.Effect>
      | TA.Game.Effect.damage(F64.parse("3"));
      | List.nil<TA.Game.Effect>;
    
    let hits0 = 
      List.cons<TA.Game.Hit>
      | TA.Game.Hit.new
        | effs0;
        | TA.Thing.at_dist(self)(F64.parse("30"));
        | self.dir;
        | TA.Game.Hitbox.cbox(F64.parse("20"));;
      | List.nil<TA.Game.Hit>;

    let hits1 = 
      List.cons<TA.Game.Hit>
      | TA.Game.Hit.new
        | effs1;
        | TA.Thing.at_dist(self)(F64.parse("30"));
        | self.dir;
        | TA.Game.Hitbox.cbox(F64.parse("20"));;
      | List.nil<TA.Game.Hit>;

    let self = TA.Thing.cast(self)(F64.parse("14"))(hits0)
    let self = TA.Thing.cast(self)(F64.parse("18"))(hits0)
    let self = TA.Thing.cast(self)(F64.parse("22"))(hits0)
    let self = TA.Thing.cast(self)(F64.parse("28"))(hits1)
    self;

    
    | Bool.if<TA.Thing>(F64.eql(self.act)(F64.2))
    | #BENFIX_SEISMIC_JUMP# 
      let self = 
        TA.Thing.animate(self)(F64.0)(BENFIX_SEISMIC_JUMP_000)
        | F64.parse("10");
        | F64.parse("30");

      let effs0 = 
        List.cons<TA.Game.Effect>
        | TA.Game.Effect.damage(F64.1);
        | List.nil<TA.Game.Effect>;
        
      let effs1 = 
        List.cons<TA.Game.Effect>
        | TA.Game.Effect.damage(F64.parse("3"));
        | List.cons<TA.Game.Effect>
          | TA.Game.Effect.slow(F64.parse("2"))(F64.parse("0.5"));
          | List.nil<TA.Game.Effect>;;
        
      let hits0 = 
        List.cons<TA.Game.Hit>
        | TA.Game.Hit.new
          | effs0;
          | TA.Thing.at_dist(self)(F64.parse("40"));
          | self.dir;
          | TA.Game.Hitbox.cbox(F64.parse("20"));; 
        | List.nil<TA.Game.Hit>;

      let hits1 = 
        List.cons<TA.Game.Hit>
        | TA.Game.Hit.new
          | effs1;
          | TA.Thing.at_dist(self)(F64.parse("30"));
          | self.dir;
          | TA.Game.Hitbox.cbox(F64.parse("40"));; 
        | List.nil<TA.Game.Hit>;

        let self = TA.Thing.cast(self)(F64.parse("20"))(hits0)
        let self = TA.Thing.cast(self)(F64.parse("22"))(hits0)
        let self = TA.Thing.cast(self)(F64.parse("24"))(hits1)
        self;

      | Bool.if<TA.Thing>(F64.eql(self.act)(F64.parse("3")))
      | #BENFIX_STEEL_TORNADO# 
        let self = 
          TA.Thing.animate(self)(F64.0)(BENFIX_STEEL_TORNADO_000)
          | F64.parse("4");
          | F64.parse("12");

        let effs = 
          List.cons<TA.Game.Effect>
          | TA.Game.Effect.damage(F64.1);
          | List.nil<TA.Game.Effect>;
        
        let hits = 
          List.cons<TA.Game.Hit>
          | TA.Game.Hit.new
            | effs;
            | self.pos;
            | self.dir;
            | TA.Game.Hitbox.cbox(F64.parse("40"));;
          | List.nil<TA.Game.Hit>;
        
        let self = TA.Thing.cast(self)(F64.parse("2"))(hits)
        let self = TA.Thing.cast(self)(F64.parse("4"))(hits)
        let self = TA.Thing.cast(self)(F64.parse("6"))(hits)
        let self = TA.Thing.cast(self)(F64.parse("8"))(hits)
        let self = TA.Thing.cast(self)(F64.parse("10"))(hits)
        let self = TA.Thing.cast(self)(F64.parse("11"))(hits)
        self;
        
        | Bool.if<TA.Thing>(F64.eql(self.act)(F64.parse("4")))
        | #BENFIX_GIGA_DASH# 
          let self = 
            TA.Thing.animate(self)(F64.1)(BENFIX_GIGA_DASH_000)
            | F64.parse("22");
            | F64.parse("22");

          let self = 
            TA.Thing.dash(self)(F64.parse("4"))(F64.0)(F64.parse("22"))

          let effs = 
            List.cons<TA.Game.Effect>
            | TA.Game.Effect.damage(F64.parse("2"));
            | List.cons<TA.Game.Effect>
              | TA.Game.Effect.stun(F64.1); 
              | List.nil<TA.Game.Effect>;;
          
          let hits = 
            List.cons<TA.Game.Hit>
            | TA.Game.Hit.new 
              | effs;
              | TA.Thing.at_dist(self)(F64.parse("30"));
              | self.dir;
              | TA.Game.Hitbox.cbox(F64.parse("20"));;
            | List.nil<TA.Game.Hit>;

          let self = TA.Thing.cast(self)(F64.parse("10"))(hits)
          let self = TA.Thing.cast(self)(F64.parse("15"))(hits)
          let self = TA.Thing.cast(self)(F64.parse("20"))(hits)
          self;
        
        | Bool.if<TA.Thing>(F64.eql(self.act)(F64.parse("5")))
        | # BENFIX_DASH# 
          let self = 
            TA.Thing.animate(self)(F64.1)(BENFIX_DASH_000)
            | F64.parse("9");
            | F64.parse("18");

          let self = 
            TA.Thing.dash(self)
            | F64.parse("3");
            | F64.parse("0");
            | F64.parse("18");

          self ;
        
        | # BENFIX_TAUNT# 
          TA.Thing.animate(self)(F64.0)(BENFIX_TAUNT_000)
          | F64.parse("16");
          | F64.parse("32");
        ;;;;;;