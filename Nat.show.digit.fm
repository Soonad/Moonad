Nat.show.digit: Nat -> Nat -> Char
  (n) (base) 
  let m = Nat.mod(n)(base)
  Nat.eql(m)(Nat.0)<() Char> | Char.parse("0"); |
  Nat.eql(m)(Nat.1)<() Char> | Char.parse("1"); |
  Nat.eql(m)(Nat.2)<() Char> | Char.parse("2"); |
  Nat.eql(m)(Nat.3)<() Char> | Char.parse("3"); |
  Nat.eql(m)(Nat.4)<() Char> | Char.parse("4"); |
  Nat.eql(m)(Nat.5)<() Char> | Char.parse("5"); |
  Nat.eql(m)(Nat.6)<() Char> | Char.parse("6"); |
  Nat.eql(m)(Nat.7)<() Char> | Char.parse("7"); |
  Nat.eql(m)(Nat.8)<() Char> | Char.parse("8"); |
  Nat.eql(m)(Nat.9)<() Char> | Char.parse("9"); |
  Nat.eql(m)(Nat.10)<() Char> | Char.parse("a"); |
  Nat.eql(m)(Nat.11)<() Char> | Char.parse("b"); |
  Nat.eql(m)(Nat.12)<() Char> | Char.parse("c"); |
  Nat.eql(m)(Nat.13)<() Char> | Char.parse("d"); |
  Nat.eql(m)(Nat.14)<() Char> | Char.parse("e"); |
  Nat.eql(m)(Nat.15)<() Char> | Char.parse("f"); |
    Char.parse("#");;;;;;;;;;;;;;;;
    // TODO: use absurd to cancel this case
//  Nat.eql(m)(Nat.16)<() Char> | Char.parse("g"); |
//  Nat.eql(m)(Nat.17)<() Char> | Char.parse("h"); |
//  Nat.eql(m)(Nat.18)<() Char> | Char.parse("i"); |
//  Nat.eql(m)(Nat.19)<() Char> | Char.parse("j"); |
//  Nat.eql(m)(Nat.20)<() Char> | Char.parse("k"); |
//  Nat.eql(m)(Nat.21)<() Char> | Char.parse("l"); |
//  Nat.eql(m)(Nat.22)<() Char> | Char.parse("m"); |
//  Nat.eql(m)(Nat.23)<() Char> | Char.parse("n"); |
//  Nat.eql(m)(Nat.24)<() Char> | Char.parse("o"); |
//  Nat.eql(m)(Nat.25)<() Char> | Char.parse("p"); |
//  Nat.eql(m)(Nat.26)<() Char> | Char.parse("q"); |
//  Nat.eql(m)(Nat.27)<() Char> | Char.parse("r"); |
//  Nat.eql(m)(Nat.28)<() Char> | Char.parse("s"); |
//  Nat.eql(m)(Nat.30)<() Char> | Char.parse("t"); |
//  Nat.eql(m)(Nat.31)<() Char> | Char.parse("u"); |
//  Nat.eql(m)(Nat.32)<() Char> | Char.parse("v"); |

