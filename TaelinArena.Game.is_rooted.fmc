// is_rooted(self: Thing) : Bool 
//   case self |thing 
//   let is_rooted_buff = (buff: Buff) => 
//     case buff 
//     | shielded => false  
//     | slowed   => false  
//     | hasted   => false 
//     | silenced => false  
//     | rooted   => true 
//     | stuned   => true  
//   case find(Buff; is_rooted_buff, self.buf) as res 
//   | none => false 
//   | some => true

TaelinArena.Game.is_rooted: (self: TaelinArena.Game.Thing) -> Bool
  (self)
  let self.buf = TaelinArena.Game.get_thing_buf(self)
  let is_rooted_buff = ((buff) 
    buff<() Bool>
    | (buff.dur) (buff.val) Bool.false; //shielded
    | (buff.dur) (buff.val) Bool.false; //slowed
    | (buff.dur) (buff.val) Bool.false; //hasted
    | (buff.dur) Bool.false; //silenced
    | (buff.dur) Bool.true; // rooted
    | (buff.dur) Bool.true; // stuned
  ) :: TaelinArena.Game.Buff -> Bool
  let found_buf = List.seek<TaelinArena.Game.Buff>
    | is_rooted_buff;
    | self.buf;
  found_buf<() Bool>
  | Bool.false; // none
  | (value) Bool.true; // some
 