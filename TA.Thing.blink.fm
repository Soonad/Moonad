// Blinks (teleports) to another position
// - self: thing that will blink
// - at_tik: number of the tik on which the blink happens
// - to_pos: position where the thing will blink to

TA.Thing.blink
  : (self: TA.Thing) ->
    (at_tik: F64)         ->
    (to_pos: F64.V3)      ->
    TA.Thing
  (self) (at_tik) (to_pos)
  let rooted = TA.Thing.is_rooted(self)
  let self.tik = TA.Thing.get_tik(self)
  let self.pos = TA.Thing.get_pos(self)
  rooted<() TA.Thing>
  | self;
  | let new_pos = Bool.if<F64.V3>(F64.eql(self.tik)(at_tik))
    | to_pos;
    | self.pos;
    TA.Thing.set_pos(self)(new_pos); 

// blink(
//   self   : Thing,
//   at_tik : Number,
//   to_pos : V3)
//   case self |thing 
//   let rooted = is_rooted(self)
//   case rooted 
//   | true => self 
//   | false => self <= thing(
//     pos = if tik === at_tik then to_pos else pos)