// Proof that (P => Q) => (¬Q => ¬P)
Contrapositive.value
    : <A: Type> ->
      <B: Type> ->
      (f: A -> B) ->
      (p1: A) ->
      (p2: A) ->
      Not(Equal(B, f(p1), f(p2))) ->
      Not(Equal(A, p1, p2))
    <A, B> (f, p1, p2, ne)
    ((e) ne(Equal.apply_ind<_, _>(p1, p2, f, e)))

// Proof that (P => Q) => (¬Q => ¬P)
Contrapositive.type
    : <A: Type> ->
      <B: Type> ->
      (f: A -> B) ->
      Not(B) ->
      Not(A)
    <A, B> (f, notB)
    ((a) notB(f(a)))

// Test: for (f: Bool -> Bool), f(a) != f(b) => a != b
Contrapositive.test.bool_not: (p: Bool) -> (q: Bool) -> Not(Equal(Bool, Bool.not(p), Bool.not(q))) -> Not(Equal(Bool, p, q))
    (p, q, ne)
    Contrapositive.value<_, _>(Bool.not, p, q, ne)
