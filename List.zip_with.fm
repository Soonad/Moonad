// Given two lists `xs` and `ys`, applies `f(xs[i],ys[i])` for all `i`.
List.zip_with: <A: Type> -> <B: Type> -> <C: Type> -> (A -> B -> C) -> List(A) -> List(B) -> List(C)
  <A> <B> <C> (fn) (as) (bs)
  as<() List(C)>
  | List.nil<C>;
  | (a.head) (a.tail)
    bs<() List(C)>
    | List.nil<C>;
    | (b.head) (b.tail)
      let head = fn(a.head)(b.head)
      let tail = List.zip_with<A><B><C>(fn)(a.tail)(b.tail)
      List.cons<C>(head)(tail);;
