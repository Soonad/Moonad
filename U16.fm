U16.add: U16 -> U16 -> U16 //prim//
  (a) (b)
  get a_val = a
  get b_val = b
  U16.new(Word.add<?zz>(a_val)(b_val))

U16.and: U16 -> U16 -> U16 //prim//
  (a) (b)
  a<() U16> | (a_val)
  b<() U16> | (b_val)
  U16.new(Word.and<Nat.16>(a_val)(b_val));;

U16.div: U16 -> U16 -> U16 //prim//
  (a) (b)
  a<() U16> | (a_val)
  b<() U16> | (b_val)
  U16.new(Word.div<Nat.16>(a_val)(b_val));;

// a == b
U16.eql: U16 -> U16 -> Bool //prim//
  (a) (b)
  a<() Bool> | (a_val)
  b<() Bool> | (b_val)
  Word.eql<Nat.16>(a_val)(b_val);;

U16: Type //prim//
  u16<P: U16 -> Type> ->
  (new: (a: Word(Nat.16)) -> P(U16.new(a))) ->
  P(u16)

// a >= b
U16.gte: U16 -> U16 -> Bool //prim//
  (a) (b)
  a<() Bool> | (a_val)
  b<() Bool> | (b_val)
  Word.gte<Nat.16>(a_val)(b_val);;

// a > b
U16.gtn: U16 -> U16 -> Bool //prim//
  (a) (b)
  a<() Bool> | (a_val)
  b<() Bool> | (b_val)
  Word.gtn<Nat.16>(a_val)(b_val);;

U16.inc: U16 -> U16 //prim//
  (a)
  a<() U16> | (a_val)
  U16.new(Word.inc<Nat.16>(a_val));

// a <= b
U16.lte: U16 -> U16 -> Bool //prim//
  (a) (b)
  a<() Bool> | (a_val)
  b<() Bool> | (b_val)
  Word.lte<Nat.16>(a_val)(b_val);;

// a < b
U16.ltn: U16 -> U16 -> Bool //prim//
  (a) (b)
  a<() Bool> | (a_val)
  b<() Bool> | (b_val)
  Word.ltn<Nat.16>(a_val)(b_val);;

U16.mod: U16 -> U16 -> U16 //prim//
  (a) (b)
  a<() U16> | (a_val)
  b<() U16> | (b_val)
  U16.new(Word.mod<Nat.16>(a_val)(b_val));;

U16.mul: U16 -> U16 -> U16 //prim//
  (a) (b)
  a<() U16> | (a_val)
  b<() U16> | (b_val)
  U16.new(Word.mul<Nat.16>(a_val)(b_val));;

U16.new: Word(Nat.16) -> U16
  (a)
  <> (u16) u16(a)

U16.or: U16 -> U16 -> U16 //prim//
  (a) (b)
  a<() U16> | (a_val)
  b<() U16> | (b_val)
  U16.new(Word.or<Nat.16>(a_val)(b_val));;

U16.parse_hex: String -> U16
  (str) U16.new(Word.from_bits(Nat.16)(Bits.parse_hex(str)))

U16.pow: U16 -> U16 -> U16 //prim//
  (a) (b)
  a<() U16> | (a_val)
  b<() U16> | (b_val)
  U16.new(Word.pow<Nat.16>(a_val)(b_val));;

U16.shl: Nat -> U16 -> U16 //prim//
  (n) (a)
  a<() U16> | (a_val)
  U16.new(Word.shift_left<Nat.16>(n)(a_val));

U16.shr: Nat -> U16 -> U16 //prim//
  (n) (a)
  a<() U16> | (a_val)
  U16.new(Word.shift_right<Nat.16>(n)(a_val));

U16.sub: U16 -> U16 -> U16 //prim//
  (a) (b)
  a<() U16> | (a_val)
  b<() U16> | (b_val)
  U16.new(Word.sub<Nat.16>(a_val)(b_val));;

U16.to_bits: U16 -> Bits
  (a)
  a<() Bits> | (a_val)
  Word.to_bits<Nat.16>(a_val);

U16.to_nat: U16 -> Nat //prim//
  (a)
  a<() Nat> | (a_val)
  Word.to_nat<Nat.16>(a_val);

U16.xor: U16 -> U16 -> U16 //prim//
  (a) (b)
  a<() U16> | (a_val)
  b<() U16> | (b_val)
  U16.new(Word.xor<Nat.16>(a_val)(b_val));;

