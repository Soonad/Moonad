T IO<A: Type>
| IO.end(value: A);
| IO.ask(query: String, param: String, then: String -> IO(A));

IO.prompt(text: String): IO(String)
  use skip = IO.ask<String>("print", text)
  use line = IO.ask<String>("get_line", "")
  IO.end<String>(line)

IO.print(text: String): IO(Unit)
  use skip = IO.ask<Unit>("print", text)
  IO.end<Unit>(Unit.new)

IO.bind<A: Type, B: Type>(a: IO(A), f: A -> IO(B)): IO(B)
  case a:
  | f(a.value);
  | IO.ask<B>(a.query, a.param, (x) IO.bind<A,B>(a.then(x), f));

IO.monad: Monad(IO)
  Monad.new<IO>(IO.bind, IO.end)
