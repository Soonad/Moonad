Comp.stringify: Comp -> Stringifier
  (comp)
  let lit = String.to_stringifier
  let rec = Comp.stringify
  comp<() Stringifier>
  |#var# (term.name)
    lit(term.name);
  |#lam# (term.name) (term.body)
    let lpar = lit("((")
    let name = lit(term.name)
    let rpar = lit(") ")
    let body = rec(term.body)
    let lend = lit(")")
    (x) lpar(name(rpar(body(lend(x)))));
  |#app# (term.func) (term.argm)
    let func = rec(term.func)
    let lpar = lit("(")
    let argm = rec(term.argm)
    let rpar = lit(")")
    (x) func(lpar(argm(rpar(x))));
  |#let# (term.name) (term.expr) (term.body)
    let llet = lit("let ")
    let name = lit(term.name)
    let leql = lit(" = ")
    let expr = rec(term.expr)
    let spac = lit("; ")
    let body = rec(term.body)
    (x) llet(name(leql(expr(spac(body(x))))));
  |#tru#
    let lval = lit("true")
    (x) lval(x);
  |#fal#
    let lval = lit("false")
    (x) lval(x);
