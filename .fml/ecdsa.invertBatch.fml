ecdsa.invertBatch: List(Nat) -> Nat -> List(Nat)
  (nums) (modulo) ecdsa.invertBatch1.tco(nums)(modulo)(Nat.1)([Nat;])([Nat;])<(x) List(Nat)>((acc) (p) p<(x) List(Nat)>((scratch) (rest) let acc = ecdsa.invert(acc)(modulo); ecdsa.invertBatch2.tco(rest)(modulo)(acc)(scratch)([Nat;])))

