UFind.union: UFind -> Bits -> Bits -> UFind
  (uf) (path1) (path2) UFind.find<UFind>(uf)(path1)((uf) (root_path1) (rank1) UFind.find<UFind>(uf)(path2)((uf) (root_path2) (rank2) Bits.eql(root_path1)(root_path2)<() UFind>(uf)(Nat.cmp(rank1)(rank2)<() UFind>(let uf = Map.set<UNode>(root_path1)(UNode.link(root_path2))(uf); uf)(let uf = Map.set<UNode>(root_path1)(UNode.link(root_path2))(uf); let uf = Map.set<UNode>(root_path2)(UNode.root(Nat.succ(rank2)))(uf); uf)(let uf = Map.set<UNode>(root_path1)(UNode.root(rank2))(uf); let uf = Map.set<UNode>(root_path2)(UNode.link(root_path1))(uf); uf))))

