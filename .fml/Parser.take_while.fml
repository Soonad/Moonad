Parser.take_while: (f: Char -> Bool) -> Parser(String)
  (f) (s1) s1<(self) Parser.Reply(String)>((pos) (str) (errs) String.span(f)(str)<(self) Parser.Reply(String)>((took) (rest) def len = String.length(took); Parser.Reply.val<String>(Parser.State.make(Nat.add(pos)(len))(rest)(errs))(took)))

