Arelin.Game.use_shields: (buff: Arelin.Game.Buff) -> (acc: Pair(F64)(List(Arelin.Game.Buff))) -> Pair(F64)(List(Arelin.Game.Buff))
  (buff) (acc) let curr_dmg = Pair.fst<F64><List(Arelin.Game.Buff)>(acc); let curr_buf = Pair.snd<F64><List(Arelin.Game.Buff)>(acc); buff<(self) Pair(F64)(List(Arelin.Game.Buff))>((buff.dur) (buff.val) F64.eql(curr_dmg)(F64.0)<(self) Pair(F64)(List(Arelin.Game.Buff))>(acc)(F64.compare_numbers(curr_dmg)(buff.val)<(x6) Pair(F64)(List(Arelin.Game.Buff))>(let remaining_shield = F64.sub(buff.val)(curr_dmg); let remaining_buf = List.cons<Arelin.Game.Buff>(Arelin.Game.Buff.shielded(buff.dur)(remaining_shield))(curr_buf); Pair.new<F64><List(Arelin.Game.Buff)>(F64.0)(remaining_buf))(Pair.new<F64><List(Arelin.Game.Buff)>(F64.0)(curr_buf))(let remaining_dmg = F64.sub(curr_dmg)(buff.val); Pair.new<F64><List(Arelin.Game.Buff)>(remaining_dmg)(curr_buf))))((buff.dur) (buff.val) Pair.new<F64><List(Arelin.Game.Buff)>(curr_dmg)(List.cons<Arelin.Game.Buff>(buff)(curr_buf)))((buff.dur) (buff.val) Pair.new<F64><List(Arelin.Game.Buff)>(curr_dmg)(List.cons<Arelin.Game.Buff>(buff)(curr_buf)))((buff.dur) Pair.new<F64><List(Arelin.Game.Buff)>(curr_dmg)(List.cons<Arelin.Game.Buff>(buff)(curr_buf)))((buff.dur) Pair.new<F64><List(Arelin.Game.Buff)>(curr_dmg)(List.cons<Arelin.Game.Buff>(buff)(curr_buf)))((buff.dur) Pair.new<F64><List(Arelin.Game.Buff)>(curr_dmg)(List.cons<Arelin.Game.Buff>(buff)(curr_buf)))

