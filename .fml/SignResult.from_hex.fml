SignResult.from_hex: (str: String) -> Maybe(SignResult)
  (str) Maybe.bind<Pair(String)(String)><SignResult>(String.take_n(2)(str))((pair) pair<(x) Maybe(SignResult)>((str) (check1) Maybe.bind<Pair(String)(String)><SignResult>(String.take_n(2)(str))((pair) pair<(x) Maybe(SignResult)>((length) (str) Maybe.bind<Nat><SignResult>(ecdsa.parse_byte(length))((length) Maybe.bind<Pair(String)(String)><SignResult>(String.take_n(2)(str))((pair) pair<(x) Maybe(SignResult)>((check2) (str) Bool.orVar(3)(String.eql(check1)("30"))(Nat.eql(length)(Nat.sub(String.length(str))(4)))(String.eql(check2)("02"))<(self.self) Maybe(SignResult)>(Maybe.none<SignResult>)(Maybe.bind<Pair(String)(String)><SignResult>(String.take_n(2)(str))((pair) pair<(x) Maybe(SignResult)>((rLen) (str) Maybe.bind<Nat><SignResult>(ecdsa.parse_byte(rLen))((rLen) Maybe.bind<Pair(String)(String)><SignResult>(String.take_n(rLen)(str))((pair) pair<(x) Maybe(SignResult)>((r) (str) Maybe.bind<Nat><SignResult>(Nat.parse_hex_safe(r))((r) Maybe.bind<Pair(String)(String)><SignResult>(String.take_n(2)(str))((pair) pair<(x) Maybe(SignResult)>((check3) (str) String.eql(check3)("02")<(self.self) Maybe(SignResult)>(Maybe.none<SignResult>)(Maybe.bind<Pair(String)(String)><SignResult>(String.take_n(2)(str))((pair) pair<(x) Maybe(SignResult)>((sLen) (str) Maybe.bind<Nat><SignResult>(ecdsa.parse_byte(sLen))((sLen) Maybe.bind<Pair(String)(String)><SignResult>(String.take_n(sLen)(str))((pair) pair<(x) Maybe(SignResult)>((s) (str) Maybe.bind<Nat><SignResult>(Nat.parse_hex_safe(s))((s) Maybe.some<SignResult>(SignResult.new(r)(s)))))))))))))))))))))))))

