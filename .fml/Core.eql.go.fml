Core.eql.go: Core -> Core -> Core.Defs -> Set -> Nat -> Bool
  (a) (b) (defs) (eql) (dep) let a = Core.reduce(a)(defs); let b = Core.reduce(b)(defs); let x = Core.to_uid(a); let y = Core.to_uid(b); let h = Bits.concat(x)(y); Bool.or(Bits.eql(x)(y))(Set.get(h)(eql))<() Unit -> Bool>(() Bool.true)(() let eql = Set.set(h)(eql); a<() Bool>(() () () Bool.false)((a.name) Bool.false)(Bool.false)((a.eras) (a.self) (a.name) (a.bind) (a.body) b<() Bool>(() () () Bool.false)(() Bool.false)(Bool.false)((b.eras) (b.self) (b.name) (b.bind) (b.body) let s_vari = Core.var(String.nil)(dep)(Bool.false); let n_vari = Core.var(String.nil)(Nat.succ(dep))(Bool.false); let a_body = a.body(s_vari)(n_vari); let b_body = b.body(s_vari)(n_vari); let e_eras = Bool.eql(a.eras)(b.eras); let e_self = String.eql(a.self)(b.self); let e_bind = Core.eql.go(a.bind)(b.bind)(defs)(eql)(dep); let e_body = Core.eql.go(a_body)(b_body)(defs)(eql)(dep); Bool.and(e_eras)(Bool.and(e_self)(Bool.and(e_bind)(e_body))))(() () () Bool.false)(() () () Bool.false)(() () () Bool.false)(() () () Bool.false))((a.eras) (a.name) (a.body) b<() Bool>(() () () Bool.false)(() Bool.false)(Bool.false)(() () () () () Bool.false)((b.eras) (b.name) (b.body) let n_vari = Core.var(String.nil)(dep)(Bool.false); let a_body = a.body(n_vari); let b_body = b.body(n_vari); let e_eras = Bool.eql(a.eras)(b.eras); let e_body = Core.eql.go(a_body)(b_body)(defs)(eql)(dep); Bool.and(e_eras)(e_body))(() () () Bool.false)(() () () Bool.false)(() () () Bool.false))((a.eras) (a.func) (a.argm) b<() Bool>(() () () Bool.false)(() Bool.false)(Bool.false)(() () () () () Bool.false)(() () () Bool.false)((b.eras) (b.func) (b.argm) let e_eras = Bool.eql(a.eras)(b.eras); let e_func = Core.eql.go(a.func)(b.func)(defs)(eql)(dep); let e_argm = Core.eql.go(a.argm)(b.argm)(defs)(eql)(dep); Bool.and(e_eras)(Bool.and(e_func)(e_argm)))(() () () Bool.false)(() () () Bool.false))((a.name) (a.expr) (a.body) b<() Bool>(() () () Bool.false)(() Bool.false)(Bool.false)(() () () () () Bool.false)(() () () Bool.false)(() () () Bool.false)((b.name) (b.expr) (b.body) let n_vari = Core.var(String.nil)(dep)(Bool.false); let a_body = a.body(n_vari); let b_body = b.body(n_vari); let e_expr = Core.eql.go(a.expr)(b.expr)(defs)(eql)(dep); let e_body = Core.eql.go(a_body)(b_body)(defs)(eql)(dep); Bool.eql(e_expr)(e_body))(() () () Bool.false))((a.done) (a.expr) (a.type) b<() Bool>(() () () Bool.false)(() Bool.false)(Bool.false)(() () () () () Bool.false)(() () () Bool.false)(() () () Bool.false)(() () () Bool.false)((b.done) (b.expr) (b.type) let e_expr = Core.eql.go(a.expr)(b.expr)(defs)(eql)(dep); e_expr)))(Unit.new)

