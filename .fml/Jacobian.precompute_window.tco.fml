Jacobian.precompute_window.tco: Jacobian -> Nat -> Concat(Jacobian) -> Nat -> Jacobian -> Nat -> Nat -> Concat(Jacobian)
  (p) (windows) (points) (window) (base) (size) (i) Bool.if<Unit -> Concat(Jacobian)>(Nat.ltn(window)(windows))(() Bool.if<Concat(Jacobian)>(Nat.ltn(i)(size))(let base = Jacobian.add(base)(p); let points = Concat.push<Jacobian>(base)(points); Jacobian.precompute_window.tco(p)(windows)(points)(window)(base)(size)(Nat.succ(i)))(let p = Jacobian.double(base); Jacobian.precompute_window.tco(p)(windows)(points)(Nat.succ(window))(Jacobian.0)(size)(Nat.0)))(() points)(Unit.new)

