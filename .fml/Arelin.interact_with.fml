Arelin.interact_with: (this: Arelin.Thing) -> (that: Arelin.Thing) -> Arelin.Thing
  (this) (that) let this.pos = Arelin.Thing.get_pos(this); let this.dir = Arelin.Thing.get_dir(this); let this.box = Arelin.Thing.get_box(this); let this.buf = Arelin.Thing.get_buf(this); let this.sid = Arelin.Thing.get_sid(this); let that.pos = Arelin.Thing.get_pos(that); let that.dir = Arelin.Thing.get_dir(that); let that.box = Arelin.Thing.get_box(that); let that.hit = Arelin.Thing.get_hit(that); let that.sid = Arelin.Thing.get_sid(this); let this = let apply_hit = ((hit) (this) hit<(hit.self) Arelin.Thing>((hit.eff) (hit.pos) (hit.dir) (hit.box) let out_vec = this; out_vec<(out_vec.self) Arelin.Thing>((out_vec.fun) (out_vec.pid) (out_vec.mid) (out_vec.act) (out_vec.sid) (out_vec.stt) (out_vec.nam) (out_vec.lit) (out_vec.tik) (out_vec.pos) (out_vec.mov) (out_vec.bst) (out_vec.pad) (out_vec.dir) (out_vec.trg) (out_vec.vel) (out_vec.box) (out_vec.wei) (out_vec.mhp) (out_vec.dmg) (out_vec.knk) (out_vec.buf) (out_vec.chi) (out_vec.hit) (out_vec.rst) (out_vec.die) this))) :: Arelin.Game.Hit -> Arelin.Thing -> Arelin.Thing; List.fold<Arelin.Game.Hit><Arelin.Thing>(this)(apply_hit)(that.hit); this

