Exports.TA: Exports
  Exports.add<<A: Type> -> List(A)>(List.nil)(Exports.add<<A: Type> -> (head: A) -> (tail: List(A)) -> List(A)>(List.cons)(Exports.add<F64.V3 -> F64.V3 -> List(F64.V3) -> List(F64.Segment)>(F64.V3.polygon_to_segments)(Exports.add<F64.V3 -> F64.V3 -> F64.V3 -> F64.V3>(F64.V3.look_at)(Exports.add<TA.Game.PlayerId -> TA.Game.Game -> F64.V3>(TA.Game.get_position_by_pid)(Exports.add<(TA.Thing -> TA.Thing) -> TA.Game.Game -> TA.Game.Game>(TA.Game.map_stage)(Exports.add<TA.Game.PlayerId -> TA.Game.Input -> TA.Game.Command>(TA.Game.Command.new)(Exports.add<F64.V3 -> TA.Game.Input>(TA.Game.Input.sdir)(Exports.add<F64.V3 -> TA.Game.Input>(TA.Game.Input.key0)(Exports.add<F64.V3 -> TA.Game.Input>(TA.Game.Input.key1)(Exports.add<F64.V3 -> TA.Game.Input>(TA.Game.Input.key2)(Exports.add<F64.V3 -> TA.Game.Input>(TA.Game.Input.key3)(Exports.add<F64.V3 -> TA.Game.Input>(TA.Game.Input.key4)(Exports.add<F64.V3 -> TA.Game.Input>(TA.Game.Input.key5)(Exports.add<TA.Game.Command -> TA.Game.Game -> TA.Game.Game>(TA.exec_command)(Exports.add<TA.Game.TxFunction -> TA.Game.PlayerId -> TA.Game.ModelId -> TA.Game.ActionId -> TA.Game.SideId -> Map(F64) -> String -> List(TA.Game.Light) -> F64 -> F64.V3 -> F64 -> F64 -> F64.V3 -> F64.V3 -> F64.V3 -> F64.V3 -> TA.Game.Hitbox -> F64 -> F64 -> F64 -> F64.V3 -> List(TA.Game.Buff) -> List(TA.Thing) -> List(TA.Game.Hit) -> Bool -> Bool -> TA.Thing>(TA.Thing.new)(Exports.add<(thi: TA.Thing) -> (new_fun: TA.Game.TxFunction) -> TA.Thing>(TA.Thing.set_fun)(Exports.add<(thi: TA.Thing) -> (new_sid: TA.Game.SideId) -> TA.Thing>(TA.Thing.set_sid)(Exports.add<(thi: TA.Thing) -> (new_pid: TA.Game.PlayerId) -> TA.Thing>(TA.Thing.set_pid)(Exports.add<(thi: TA.Thing) -> (new_pos: F64.V3) -> TA.Thing>(TA.Thing.set_pos)(Exports.add<(thi: TA.Thing) -> (new_nam: String) -> TA.Thing>(TA.Thing.set_nam)(Exports.add<List(TA.Thing) -> TA.Game.Game>(TA.Game.Game.new)(Exports.add<TA.Game.Game -> TA.Game.Game>(TA.exec_turn)(Exports.add<TA.Game.PlayerId -> TA.Game.Game -> F64.V3>(TA.Game.get_position_by_pid)(Exports.add<(self: TA.Thing) -> TA.Thing>(TA.Thing.bleskape_fun)(Exports.add<TA.Thing -> TA.Thing>(TA.Thing.dilma_fun)(Exports.add<TA.Thing -> TA.Thing>(TA.Thing.dilma.stocking_wind_fun)(Exports.add<TA.Thing -> TA.Thing>(TA.Thing.dilma.confusion_fun)(Exports.add<TA.Game.TxFunction>(TA.Thing.dorime.blessing_fun)(Exports.add<TA.Game.TxFunction>(TA.Thing.dorime.gods_chamber_fun)(Exports.add<TA.Game.TxFunction>(TA.Thing.dorime.holy_flame_fun)(Exports.add<TA.Game.TxFunction>(TA.Thing.dorime.leptospirose_puddle_pot_fun)(Exports.add<TA.Game.TxFunction>(TA.Thing.dorime.leptospirose_puddle_fun)(Exports.add<TA.Game.TxFunction>(TA.Thing.dorime_fun)(Exports.add<(thi: TA.Thing) -> TA.Game.TxFunction>(TA.Thing.get_fun)(Exports.add<TA.Game.TxFunction>(TA.Thing.poste_fun)(Exports.add<TA.Game.TxFunction>(TA.Thing.puddledmg_fun)(Exports.add<TA.Game.TxFunction>(TA.Thing.puddleheal_fun)(Exports.add<TA.Game.TxFunction>(TA.Thing.punchingbag_fun)(Exports.add<(thi: TA.Thing) -> (new_fun: TA.Game.TxFunction) -> TA.Thing>(TA.Thing.set_fun)(Exports.add<TA.Game.TxFunction>(TA.Thing.wall_fun)(Exports.new)))))))))))))))))))))))))))))))))))))))))

