Jacobian.to_point.aux: (p: Jacobian) -> (invz: Nat) -> Point
  (p) (invz) p<(self) Point>((p.x) (p.y) (p.z) let invz2 = Nat.square(invz); let x = ecdsa.mod(Nat.mul(p.x)(invz2)); let y = ecdsa.mod(Nat.mulVar(3)(p.y)(invz2)(invz)); Point.new(x)(y))

