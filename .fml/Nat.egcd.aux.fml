Nat.egcd.aux: (a: Nat) -> (b: Nat) -> (x: Int) -> (y: Int) -> (u: Int) -> (v: Int) -> Pair(Nat)(Pair(Int)(Int))
  (a) (b) (x) (y) (u) (v) a<(a.self) Pair(Nat)(Pair(Int)(Int))>(Pair.new<Nat><Pair(Int)(Int)>(b)(Pair.new<Int><Int>(x)(y)))((a.pred) let q = Nat.div(b)(a); let r = Nat.mod(b)(a); let m = Int.sub(x)(Int.mul(u)(Int.fromNat(q))); let n = Int.sub(y)(Int.mul(v)(Int.fromNat(q))); Nat.egcd.aux(r)(a)(u)(v)(m)(n))

