Core.reduce: Core -> Core.Defs -> Core
  (term) (defs) term<() Core>((indx) (name) (flip) Core.var(indx)(name)(flip))((name) Core.Defs.get_term(defs)(name)<() Core>(Core.ref(name))((term) Core.reduce(term)(defs)))(Core.typ)((eras) (self) (name) (bind) (body) Core.all(eras)(self)(name)(bind)(body))((eras) (name) (body) eras<() Core>(Core.reduce(body(Core.ref("-")))(defs))(Core.lam(eras)(name)(body)))((eras) (func) (argm) eras<() Core>(Core.reduce(func)(defs))(Core.reduce(func)(defs)<() Core -> Core>((findx) (fname) (fflip) Core.app(eras)(Core.var(findx)(fname)(fflip)))((fname) Core.app(eras)(Core.ref(fname)))(Core.app(eras)(Core.typ))((feras) (fself) (fname) (fbind) (fbody) Core.app(eras)(Core.all(feras)(fself)(fname)(fbind)(fbody)))((feras) (fname) (fbody) (term.argm) Core.reduce(fbody(term.argm))(defs))((feras) (ffunc) (fargm) Core.app(eras)(Core.app(feras)(ffunc)(fargm)))((fname) (fexpr) (fbody) Core.app(eras)(Core.let(fname)(fexpr)(fbody)))((fdone) (fexpr) (ftype) Core.app(eras)(Core.ann(fdone)(fexpr)(ftype)))(argm)))((name) (expr) (body) Core.reduce(body(expr))(defs))((done) (expr) (type) Core.reduce(expr)(defs))

