Arelin.Thing.update_buff_dur: (self: Arelin.Thing) -> Arelin.Thing
  (self) let self.buf = Arelin.Thing.get_buf(self); let fn = ((buff) (acc) buff<(buff.self) List(Arelin.Game.Buff)>((buff.dur) (buff.val) F64.eql(buff.dur)(F64.0)<(self.self) List(Arelin.Game.Buff)>(acc)(List.cons<Arelin.Game.Buff>(Arelin.Game.Buff.shielded(F64.sub(buff.dur)(F64.1))(buff.val))(acc)))((buff.dur) (buff.val) F64.eql(buff.dur)(F64.0)<(self.self) List(Arelin.Game.Buff)>(acc)(List.cons<Arelin.Game.Buff>(Arelin.Game.Buff.slowed(F64.sub(buff.dur)(F64.1))(buff.val))(acc)))((buff.dur) (buff.val) F64.eql(buff.dur)(F64.0)<(self.self) List(Arelin.Game.Buff)>(acc)(List.cons<Arelin.Game.Buff>(Arelin.Game.Buff.hasted(F64.sub(buff.dur)(F64.1))(buff.val))(acc)))((buff.dur) F64.eql(buff.dur)(F64.0)<(self.self) List(Arelin.Game.Buff)>(acc)(List.cons<Arelin.Game.Buff>(Arelin.Game.Buff.silenced(F64.sub(buff.dur)(F64.1)))(acc)))((buff.dur) F64.eql(buff.dur)(F64.0)<(self.self) List(Arelin.Game.Buff)>(acc)(List.cons<Arelin.Game.Buff>(Arelin.Game.Buff.rooted(F64.sub(buff.dur)(F64.1)))(acc)))((buff.dur) F64.eql(buff.dur)(F64.0)<(self.self) List(Arelin.Game.Buff)>(acc)(List.cons<Arelin.Game.Buff>(Arelin.Game.Buff.stunned(F64.sub(buff.dur)(F64.1)))(acc)))) :: Arelin.Game.Buff -> List(Arelin.Game.Buff) -> List(Arelin.Game.Buff); let new_buf = List.fold<Arelin.Game.Buff><List(Arelin.Game.Buff)>([Arelin.Game.Buff;])(fn)(self.buf); Arelin.Thing.set_buf(self)(new_buf)

