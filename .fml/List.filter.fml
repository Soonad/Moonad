List.filter: <A: Type> -> (A -> Bool) -> List(A) -> List(A)
  <A> (cond) (list) list<(self) List(A)>([A;])((list.head) (list.tail) cond(list.head)<(self) (x: List(A)) -> List(A)>((t) t)((t) List.cons<A>(list.head)(t))(List.filter<A>(cond)(list.tail)))

