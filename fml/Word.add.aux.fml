Word.add.aux: <size: Nat> -> Word(size) -> Word(size) -> Bool -> Word(size)
  <size> (a) (b) (c) a<(a.size) () Word(a.size) -> Word(a.size)>((b) Word.nil)(<a.size> (a.pred) (b) b<(b.size) () Word(Nat.pred(b.size)) -> Word(b.size)>((a.pred) Word.nil)(<b.size> (b.pred) (a.pred) c<() Unit -> Word(Nat.succ(b.size))>(() Word.1<b.size>(Word.add.aux<b.size>(a.pred)(b.pred)(Bool.false)))(() Word.0<b.size>(Word.add.aux<b.size>(a.pred)(b.pred)(Bool.false)))(Unit.new))(<b.size> (b.pred) (a.pred) c<() Unit -> Word(Nat.succ(b.size))>(() Word.0<b.size>(Word.add.aux<b.size>(a.pred)(b.pred)(Bool.true)))(() Word.1<b.size>(Word.add.aux<b.size>(a.pred)(b.pred)(Bool.false)))(Unit.new))(a.pred))(<a.size> (a.pred) (b) b<(b.size) () Word(Nat.pred(b.size)) -> Word(b.size)>((a.pred) Word.nil)(<b.size> (b.pred) (a.pred) c<() Unit -> Word(Nat.succ(b.size))>(() Word.0<b.size>(Word.add.aux<b.size>(a.pred)(b.pred)(Bool.true)))(() Word.1<b.size>(Word.add.aux<b.size>(a.pred)(b.pred)(Bool.false)))(Unit.new))(<b.size> (b.pred) (a.pred) c<() Unit -> Word(Nat.succ(b.size))>(() Word.1<b.size>(Word.add.aux<b.size>(a.pred)(b.pred)(Bool.true)))(() Word.0<b.size>(Word.add.aux<b.size>(a.pred)(b.pred)(Bool.true)))(Unit.new))(a.pred))(b)

