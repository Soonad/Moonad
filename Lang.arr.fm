Lang.arr: (Core.Ctx -> Core) -> Parsec(Core.Ctx -> Core)
  def C = Core.Ctx -> Core
  (bind)
  Parsec.then<Unit  ><C>(Lang.space)        |
  Parsec.then<String><C>(Lang.symbol("->")) |
  Parsec.bind<C     ><C>(Lang.trm)          | (body)
  Parsec.pure<C>
  | (ctx)
    let tbind = bind(ctx)
    let tbody = ((s) (x) body(Core.Ctx.ext("")(x)(Core.Ctx.ext("")(s)(ctx))))
              :: Core -> Core -> Core
    Core.all(Bool.false)("")("")(tbind)(tbody);;;;
