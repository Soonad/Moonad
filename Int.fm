// An integer is a pair of nats quotiented by `(suc x, suc y) ~ (x, y)`
Int: Type
  int<P: Int -> Type> ->
  (new: (x: Nat) -> (y: Nat) -> P(Int.new(x, y))) ->
  P(int)

Int.new(x: Nat, y: Nat): Int
  <P> (new)
  case x:
  | new(Nat.zero, y);
  | case y:
    | new(Nat.succ(x.pred), Nat.zero);
    | Int.new(Nat.sub(x.pred, y.pred), Nat.sub(y.pred, x.pred))<P>(new);
    : P(Int.new(Nat.succ(x.pred), y.self));;
  : P(Int.new(x.self, y));

Int.fromNat(n: Nat): Int
  Int.new(n, 0)

// true is negative, false is positive
Int.toNat(a: Int): Pair(Bool, Nat)
  case a:
  | case a.y:
    | Pair.new<,>(Bool.false, a.x);
    | Pair.new<,>(Bool.true, a.y);;

Int.0: Int
  Int.fromNat(0)

Int.1: Int
  Int.fromNat(1)

Int.add(a: Int, b: Int): Int
  case a:
  | case b:
    | Int.new(Nat.add(a.x, b.x), Nat.add(a.y, b.y));;

Int.neg(a: Int): Int
  case a:
  | Int.new(a.y, a.x);

Int.sub(a: Int, b: Int): Int
  Int.add(a, Int.neg(b))

Int.mul(a: Int, b: Int): Int
  case a:
  | case b:
    | Int.new(Nat.add(Nat.mul(a.x, b.x), Nat.mul(a.y, b.y)), Nat.add(Nat.mul(a.x, b.y), Nat.mul(a.y, b.x)));;

Int.div_Nat(a: Int, n: Nat): Int
  case a:
  | Int.new(Nat.div(a.x, n), Nat.div(a.y, n));

Int.mod_Nat(a: Int, n: Nat): Nat
  case a:
  | let b = Nat.mod(a.y, n)
    let sum = Nat.add(a.x, Nat.sub(n, b))
    Nat.mod(sum, n);

Int.cmp(a: Int, b: Int): Cmp
  case a:
  | case b:
    | Nat.cmp(Nat.add(a.x, b.y), Nat.add(b.x, a.y));;

Int.parse_decimal(str: String): Int
  case str:
  | Int.0;
  | U16.eql(str.head, Char.parse("-"))<() Int>
    | Int.new(0, Nat.parse_decimal(str.tail));
    | Int.new(Nat.parse_decimal(String.cons(str.head, str.tail)), 0);;

Int.parse_hex(str: String): Int.parse_hex_safe(str)<() Type> | Unit; | () Int;
  case Int.parse_hex_safe(str) as m:
  | Unit.new;
  | m.value;
  : m.self<() Type> | Unit; | () Int;;

Int.parse_hex_safe(str: String): Maybe(Int)
  case str:
  | Maybe.none<>;
  | case U16.eql(str.head, Char.parse("-")):
    | use b = Maybe.bind<,>(Nat.parse_hex_safe(str.tail))
      Maybe.some<>(Int.new(0, b));
    | use a = Maybe.bind<,>(Nat.parse_hex_safe(String.cons(str.head, str.tail)))
      Maybe.some<>(Int.new(a, 0));;

Int.to_string_decimal(a: Int): String
  case a:
  | case a.y:
    | Nat.to_string_decimal(a.x);
    | String.cons(Char.parse("-"), Nat.to_string_decimal(a.y));;
