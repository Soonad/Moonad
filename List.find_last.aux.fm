List.find_last.aux: <A: Type> -> List(A) -> (A -> Nat -> Bool) -> Nat -> Maybe(Pair(A)(Nat)) -> Maybe(Pair(A)(Nat))
  <A> (list) (cond) (indx) (res)
  case list:
  | res;
  | (head) (tail)
    let res =
      case cond(head)(indx):
      | Maybe.some<>(Pair.new<><>(head)(indx));
      | res;
    List.find_last.aux<>(tail)(cond)(Nat.succ(indx))(res);
