// Receives a hex char (0-9, a-f, A-F) and returns its value as a Nat.
Char.hex_value: Char -> Maybe(Nat)
  (chr)
  // if ('0' <= chr <= '9') return to_nat(chr - '0');
  case Bool.and(U16.gte(chr)('0'))(U16.lte(chr)('9')):
  | Maybe.some<Nat>(U16.to_nat(U16.sub(chr)('0')));
  // if ('a' <= chr < 'f') return to_nat(chr - 'a') + 10;
  | case Bool.and(U16.gte(chr)('a'))(U16.lte(chr)('f')):
    | Maybe.some<Nat>(Nat.add(U16.to_nat(U16.sub(chr)('a')))(Nat.10));
    // if ('A' <= chr < 'F') return to_nat(chr - 'a') + 10;
    // else return 0;
    | case Bool.and(U16.gte(chr)('A'))(U16.lte(chr)('F')):
      | Maybe.some<Nat>(Nat.add(U16.to_nat(U16.sub(chr)('A')))(Nat.10));
      | Maybe.none<Nat>;
    ;
  ;
