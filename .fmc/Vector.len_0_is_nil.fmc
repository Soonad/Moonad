Vector.len_0_is_nil: Π(vec:((Vector Nat) Nat.zero)) (((Equal (:Π(:Nat) * λx ((Vector Nat) x) Nat.zero)) vec) <Vector.nil Nat>)
  λvec (((<vec λvec.len λvec.self Π(e:(((Equal Nat) vec.len) Nat.zero)) $x0=((<<<<Equal.rewrite Nat> vec.len> Nat.zero> :Π(:Nat) * λx ((Vector Nat) x)> e) vec.self);$x1=((<<<<Equal.rewrite Nat> vec.len> Nat.zero> :Π(:Nat) * λx ((Vector Nat) Nat.zero)> e) <Vector.nil Nat>);(((Equal (:Π(:Nat) * λx ((Vector Nat) x) Nat.zero)) x0) x1)> λe <<Equal.to ((Vector Nat) Nat.zero)> ((<<<<Equal.rewrite Nat> Nat.zero> Nat.zero> :Π(:Nat) * λx ((Vector Nat) Nat.zero)> e) <Vector.nil Nat>)>) Λvec.len λvec.head λvec.tail λe ((Empty.absurd ((Nat.succ_isnt_zero vec.len) e)) $x0=((<<<<Equal.rewrite Nat> (Nat.succ vec.len)> Nat.zero> :Π(:Nat) * λx ((Vector Nat) x)> e) ((<<Vector.ext Nat> vec.len> vec.head) vec.tail));$x1=((<<<<Equal.rewrite Nat> (Nat.succ vec.len)> Nat.zero> :Π(:Nat) * λx ((Vector Nat) Nat.zero)> e) <Vector.nil Nat>);(((Equal (:Π(:Nat) * λx ((Vector Nat) x) Nat.zero)) x0) x1))) <<Equal.to Nat> Nat.zero>)

