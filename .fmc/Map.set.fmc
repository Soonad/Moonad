Map.set: ∀(A:*) Π(:Bits) Π(:A) Π(:(Map A)) (Map A)
  ΛA λbits λval λmap (((<bits λ (Map A)> ((<map λ (Map A)> (((<Map.tie A> (<Maybe.some A> val)) <Map.new A>) <Map.new A>)) λmap.val λmap.lft λmap.rgt (((<Map.tie A> (<Maybe.some A> val)) map.lft) map.rgt))) λbits.pred ((<map λ (Map A)> (((<Map.tie A> <Maybe.none A>) (((<Map.set A> bits.pred) val) <Map.new A>)) <Map.new A>)) λmap.val λmap.lft λmap.rgt (((<Map.tie A> map.val) (((<Map.set A> bits.pred) val) map.lft)) map.rgt))) λbits.pred ((<map λ (Map A)> (((<Map.tie A> <Maybe.none A>) <Map.new A>) (((<Map.set A> bits.pred) val) <Map.new A>))) λmap.val λmap.lft λmap.rgt (((<Map.tie A> map.val) map.lft) (((<Map.set A> bits.pred) val) map.rgt))))

