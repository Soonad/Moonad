Parsec.tokens: ∀(S:*) ∀(E:*) Π(:String) (((Parsec S) E) String)
  ΛS ΛE λstr ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error (<s1 λ X> λinput λindex λerror λstate $len=(String.length str);((<((String.take_n len) input) λ X> $unex=(<Maybe.some Parsec.Error.Item> Parsec.Error.Item.end_of_input);$expe=(<List.single Parsec.Error.Item> (Parsec.Error.Item.label (String.quote str)));((empty_error s1) (((<Parsec.Error.make_trivial E> Nat.zero) unex) expe))) λp (<p λ X> λtook λrest $s2=((((<<Parsec.State.make S> E> rest) ((Nat.add index) len)) error) state);((<((String.eql str) took) λ X> ((<str λ X> ((empty_value s2) str)) λ λ ((eaten_value s2) str))) $expe_label=(Parsec.Error.Item.label (String.quote str));$unex=((<took λ (Maybe Parsec.Error.Item)> <Maybe.none Parsec.Error.Item>) λ λ (<Maybe.some Parsec.Error.Item> (Parsec.Error.Item.tokens took)));$expe=(<List.single Parsec.Error.Item> expe_label);((empty_error s1) (((<Parsec.Error.make_trivial E> index) unex) expe))))))

