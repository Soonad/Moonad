Lang.pip: Π(:Π(:Core.Ctx) Core) (Parser Π(:Core.Ctx) Core)
  $C=Π(:Core.Ctx) Core;λfunc ((<<Parser.then Unit> C> Lang.space) ((<<Parser.then String> C> (Lang.symbol ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) String.nil))) ((<<Parser.bind C> C> Lang.trm) λargm ((<<Parser.then Unit> C> Lang.space) ((<<Parser.then String> C> (Parser.tokens ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) String.nil))) (<Parser.pure C> λctx (((Core.app Bool.false) (func ctx)) (argm ctx))))))))

