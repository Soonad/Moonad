TA.Thing.update_buff_dur: Π(self:TA.Thing) TA.Thing
  λself @self.buf=(TA.Thing.get_buf self);@fn=:Π(:TA.Game.Buff) Π(:(List TA.Game.Buff)) (List TA.Game.Buff) λbuff λacc ((((((<buff λ (List TA.Game.Buff)> λbuff.dur λbuff.val (((<Bool.if (List TA.Game.Buff)> ((F64.eql buff.dur) F64.0)) acc) ((<List.cons TA.Game.Buff> ((TA.Game.Buff.shielded ((F64.sub buff.dur) F64.1)) buff.val)) acc))) λbuff.dur λbuff.val (((<Bool.if (List TA.Game.Buff)> ((F64.eql buff.dur) F64.0)) acc) ((<List.cons TA.Game.Buff> ((TA.Game.Buff.slowed ((F64.sub buff.dur) F64.1)) buff.val)) acc))) λbuff.dur λbuff.val (((<Bool.if (List TA.Game.Buff)> ((F64.eql buff.dur) F64.0)) acc) ((<List.cons TA.Game.Buff> ((TA.Game.Buff.hasted ((F64.sub buff.dur) F64.1)) buff.val)) acc))) λbuff.dur (((<Bool.if (List TA.Game.Buff)> ((F64.eql buff.dur) F64.0)) acc) ((<List.cons TA.Game.Buff> (TA.Game.Buff.silenced ((F64.sub buff.dur) F64.1))) acc))) λbuff.dur (((<Bool.if (List TA.Game.Buff)> ((F64.eql buff.dur) F64.0)) acc) ((<List.cons TA.Game.Buff> (TA.Game.Buff.rooted ((F64.sub buff.dur) F64.1))) acc))) λbuff.dur (((<Bool.if (List TA.Game.Buff)> ((F64.eql buff.dur) F64.0)) acc) ((<List.cons TA.Game.Buff> (TA.Game.Buff.stuned ((F64.sub buff.dur) F64.1))) acc)));@new_buf=(((<<List.fold TA.Game.Buff> (List TA.Game.Buff)> <List.nil TA.Game.Buff>) fn) self.buf);((TA.Thing.set_buf self) new_buf)

