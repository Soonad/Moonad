Parser.take_while1: Π(lbl:String) Π(f:Π(:Char) Bool) (Parser String)
  λlbl λf λs1 (<s1 λself (Parser.Reply String)> λpos λstr λerrs (<((String.span f) str) λself (Parser.Reply String)> λtook λrest @len=(String.length took);@s2=(((Parser.State.make ((Nat.add pos) len)) rest) errs);@l=(<List.pure Parser.Item> (Parser.Item.label lbl));((<str λstr.self (Parser.Reply String)> ((<Parser.Reply.err String> s2) (((Parser.Error.new pos) (<Maybe.some Parser.Item> Parser.Item.eof)) l))) λstr.head λstr.tail ((<len λself.self (Parser.Reply String)> @unx=(<Maybe.some Parser.Item> (Parser.Item.tokens (String.pure str.head)));((<Parser.Reply.err String> s2) (((Parser.Error.new pos) unx) l))) λself.pred ((<Parser.Reply.val String> s2) took)))))

