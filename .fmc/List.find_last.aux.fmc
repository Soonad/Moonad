List.find_last.aux: ∀(A:*) Π(:(List A)) Π(:Π(:A) Π(:Nat) Bool) Π(:Nat) Π(:(Maybe ((Pair A) Nat))) (Maybe ((Pair A) Nat))
  ΛA λlist λcond λindx λres ((<list λself (Maybe ((Pair A) Nat))> res) λhead λtail $res=((<((cond head) indx) λself (Maybe ((Pair A) Nat))> (<Maybe.some ((Pair A) Nat)> ((<<Pair.new A> Nat> head) indx))) res);((((<List.find_last.aux A> tail) cond) (Nat.succ indx)) res))

