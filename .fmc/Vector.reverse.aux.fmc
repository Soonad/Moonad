Vector.reverse.aux: ∀(A:*) ∀(n:Nat) ∀(m:Nat) Π(:((Vector A) n)) Π(:((Vector A) m)) ((Vector A) ((Nat.add n) m))
  ΛA Λn Λm λxs λys ((<xs λn λ ((Vector A) ((Nat.add n) m))> ys) Λn.pred λhead λtail @ys=((<<Vector.ext A> m> head) ys);@eq=((Nat.add_x_succ_y n.pred) m);@res=((<<<Vector.reverse.aux A> n.pred> (Nat.succ m)> tail) ys);((<<<<Equal.rewrite Nat> ((Nat.add n.pred) (Nat.succ m))> ((Nat.add (Nat.succ n.pred)) m)> λx ((Vector A) x)> eq) res))

