Acc: ∀(A:*) ∀(B:*) ∀(stop:∀(:A) Bool) ∀(a:A) *
  λA λB λstop λa ((<(stop a) λ *> B) ∀(a:A) ((((Acc A) B) stop) a))

Acc.foldl: Π(A:*) Π(B:*) ∀(stop:∀(:A) Bool) ∀(acc:∀(:B) ∀(:A) B) ∀(b:B) ∀(a:A) ((((Acc A) B) stop) a)
  ΛA ΛB λstop λacc λb λa (((<(stop a) λb ∀(:(((Equal Bool) b) (stop a))) ((((Acc A) B) stop) a)> λeq ((<<<<Equal.rewrite Bool> Bool.true> (stop a)> λX ((<X λ *> B) ∀(a:A) ((((Acc A) B) stop) a))> eq) b)) λeq ((<<<<Equal.rewrite Bool> Bool.false> (stop a)> λX ((<X λ *> B) ∀(a:A) ((((Acc A) B) stop) a))> eq) λc ((((<<Acc.foldl A> B> stop) acc) ((acc b) a)) c))) <<Equal.to Bool> (stop a)>)

Bit.0: Bit
  ΛP λo λi o

Bit.1: Bit
  ΛP λo λi i

Bit: *
  Πbit(P:∀(:Bit) *) ∀(:(P Bit.0)) ∀(:(P Bit.1)) (P bit)

Bits.0: ∀(bs:Bits) Bits
  λbs ΛP λbe λb0 λb1 (b0 bs)

Bits.1: ∀(bs:Bits) Bits
  λbs ΛP λbe λb0 λb1 (b1 bs)

Bits.concat: ∀(:Bits) ∀(:Bits) Bits
  λa λb (((<a λ Bits> b) λa.pred (Bits.0 ((Bits.concat a.pred) b))) λa.pred (Bits.1 ((Bits.concat a.pred) b)))

Bits.eql: ∀(:Bits) ∀(:Bits) Bool
  λbs1 (((<bs1 λ ∀(:Bits) Bool> λbs2 (((<bs2 λ Bool> Bool.true) λ Bool.false) λ Bool.false)) λbs1.pred λbs2 (((<bs2 λ Bool> Bool.false) λbs2.pred ((Bits.eql bs1.pred) bs2.pred)) λ Bool.false)) λbs1.pred λbs2 (((<bs2 λ Bool> Bool.false) λ Bool.false) λbs2.pred ((Bits.eql bs1.pred) bs2.pred)))

Bits: *
  Πbits(P:∀(:Bits) *) ∀(be:(P Bits.nil)) ∀(b0:∀(pred:Bits) (P (Bits.0 pred))) ∀(b1:∀(pred:Bits) (P (Bits.1 pred))) (P bits)

Bits.from_string: ∀(:String) Bits
  λstr ((<str λ Bits> Bits.nil) λstr.head λstr.tail (((<((U16.eql str.head) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) String.nil))) λ ∀(:Unit) Bits> λ (Bits.1 (Bits.from_string str.tail))) λ (Bits.0 (Bits.from_string str.tail))) Unit.new))

Bits.inc: ∀(:Bits) Bits
  λbits (((<bits λ Bits> Bits.nil) λbits.pred (Bits.1 bits.pred)) λbits.pred (Bits.0 (Bits.inc bits.pred)))

Bits.nil: Bits
  ΛP λbe λb0 λb1 be

Bits.parse_hex: ∀(:String) Bits
  λstr ((Bits.parse_hex.go str) Bits.nil)

Bits.parse_hex.go: ∀(:String) ∀(:Bits) Bits
  λstr λres ((<str λ Bits> res) λstr.head λstr.tail ((<(Char.hex_value str.head) λ Bits> res) λvalue $b0000=(Bits.0 (Bits.0 (Bits.0 (Bits.0 Bits.nil))));$bhead=(((<Nat.apply Bits> value) Bits.inc) b0000);((Bits.parse_hex.go str.tail) ((Bits.concat bhead) res))))

Bits.reverse: ∀(:Bits) Bits
  λas ((Bits.reverse.go as) Bits.nil)

Bits.reverse.go: ∀(:Bits) ∀(:Bits) Bits
  λas λres (((<as λ Bits> res) λas.pred ((Bits.reverse.go as.pred) (Bits.0 res))) λas.pred ((Bits.reverse.go as.pred) (Bits.1 res)))

Bool.and: ∀(:Bool) ∀(:Bool) Bool
  λa λb ((<a λ Bool> ((<b λ Bool> Bool.true) Bool.false)) ((<b λ Bool> Bool.false) Bool.false))

Bool.andVar: ∀(n:Nat) (((Variadic Bool) Bool) n)
  ((<<Variadic.foldr Bool> Bool> Bool.and) Bool.true)

Bool.elim: ∀(b:Bool) Π(P:∀(:Bool) *) ∀(:(P Bool.true)) ∀(:(P Bool.false)) (P b)
  λb ΛP λt λf ((<b P> t) f)

Bool.eql: ∀(:Bool) ∀(:Bool) Bool
  λa λb ((<a λ Bool> ((<b λ Bool> Bool.true) Bool.false)) ((<b λx Bool> Bool.false) Bool.true))

Bool.false: Bool
  ΛP λt λf f

Bool.false_isnt_true: (Not (((Equal Bool) Bool.false) Bool.true))
  λe ((<<<<Equal.rewrite Bool> Bool.false> Bool.true> λb ((<b λ *> Empty) Unit)> e) Unit.new)

Bool: *
  Πbool(P:∀(:Bool) *) ∀(true:(P Bool.true)) ∀(false:(P Bool.false)) (P bool)

Bool.if: Π(A:*) ∀(x:Bool) ∀(ct:A) ∀(cf:A) A
  ΛA λx λct λcf ((<((Bool.eql x) Bool.false) λ A> cf) ct)

Bool.not: ∀(:Bool) Bool
  λa ((<a λ Bool> Bool.false) Bool.true)

Bool.notf: ∀(:Bool) Bool
  λa ΛP λt λf ((<a λself (P (Bool.notf self))> f) t)

Bool.or: ∀(:Bool) ∀(:Bool) Bool
  λa λb ((<a λ Bool> ((<b λ Bool> Bool.true) Bool.true)) ((<b λ Bool> Bool.true) Bool.false))

Bool.orVar: ∀(n:Nat) (((Variadic Bool) Bool) n)
  ((<<Variadic.foldr Bool> Bool> Bool.or) Bool.false)

Bool.test.different_elem: ∀(a:Bool) ((Subset Bool) λb (Not (((Equal Bool) a) b)))
  λa ((<a λself ((Subset Bool) λb (Not (((Equal Bool) self) b)))> <(<<Subset.new Bool> λb (Not (((Equal Bool) Bool.true) b))> Bool.false) Bool.true_isnt_false>) <(<<Subset.new Bool> λb (Not (((Equal Bool) Bool.false) b))> Bool.true) Bool.false_isnt_true>)

Bool.true: Bool
  ΛP λt λf t

Bool.true_isnt_false: (Not (((Equal Bool) Bool.true) Bool.false))
  λe ((<<<<Equal.rewrite Bool> Bool.true> Bool.false> λb ((<b λ *> Unit) Empty)> e) Unit.new)

Char: *
  U16

Char.hex_value: ∀(:Char) (Maybe Nat)
  λchr ((<((Bool.and ((U16.gte chr) ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0))) ((U16.lte chr) ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1))) λ (Maybe Nat)> (<Maybe.some Nat> (U16.to_nat ((U16.sub chr) ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0))))) ((<((Bool.and ((U16.gte chr) ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1))) ((U16.lte chr) ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0))) λ (Maybe Nat)> (<Maybe.some Nat> ((Nat.add (U16.to_nat ((U16.sub chr) ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)))) Nat.10))) ((<((Bool.and ((U16.gte chr) ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1))) ((U16.lte chr) ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0))) λ (Maybe Nat)> (<Maybe.some Nat> ((Nat.add (U16.to_nat ((U16.sub chr) ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)))) Nat.10))) <Maybe.none Nat>)))

Char.new: ∀(:Bit) ∀(:Bit) ∀(:Bit) ∀(:Bit) ∀(:Bit) ∀(:Bit) ∀(:Bit) ∀(:Bit) ∀(:Bit) ∀(:Bit) ∀(:Bit) ∀(:Bit) ∀(:Bit) ∀(:Bit) ∀(:Bit) ∀(:Bit) Char
  λb0 λb1 λb2 λb3 λb4 λb5 λb6 λb7 λb8 λb9 λbA λbB λbC λbD λbE λbF $kF=((<b0 λ ∀(:(Word Nat.0)) (Word Nat.1)> <Word.0 Nat.0>) <Word.1 Nat.0>);$kE=((<b1 λ ∀(:(Word Nat.1)) (Word Nat.2)> <Word.0 Nat.1>) <Word.1 Nat.1>);$kD=((<b2 λ ∀(:(Word Nat.2)) (Word Nat.3)> <Word.0 Nat.2>) <Word.1 Nat.2>);$kC=((<b3 λ ∀(:(Word Nat.3)) (Word Nat.4)> <Word.0 Nat.3>) <Word.1 Nat.3>);$kB=((<b4 λ ∀(:(Word Nat.4)) (Word Nat.5)> <Word.0 Nat.4>) <Word.1 Nat.4>);$kA=((<b5 λ ∀(:(Word Nat.5)) (Word Nat.6)> <Word.0 Nat.5>) <Word.1 Nat.5>);$k9=((<b6 λ ∀(:(Word Nat.6)) (Word Nat.7)> <Word.0 Nat.6>) <Word.1 Nat.6>);$k8=((<b7 λ ∀(:(Word Nat.7)) (Word Nat.8)> <Word.0 Nat.7>) <Word.1 Nat.7>);$k7=((<b8 λ ∀(:(Word Nat.8)) (Word Nat.9)> <Word.0 Nat.8>) <Word.1 Nat.8>);$k6=((<b9 λ ∀(:(Word Nat.9)) (Word Nat.10)> <Word.0 Nat.9>) <Word.1 Nat.9>);$k5=((<bA λ ∀(:(Word Nat.10)) (Word Nat.11)> <Word.0 Nat.10>) <Word.1 Nat.10>);$k4=((<bB λ ∀(:(Word Nat.11)) (Word Nat.12)> <Word.0 Nat.11>) <Word.1 Nat.11>);$k3=((<bC λ ∀(:(Word Nat.12)) (Word Nat.13)> <Word.0 Nat.12>) <Word.1 Nat.12>);$k2=((<bD λ ∀(:(Word Nat.13)) (Word Nat.14)> <Word.0 Nat.13>) <Word.1 Nat.13>);$k1=((<bE λ ∀(:(Word Nat.14)) (Word Nat.15)> <Word.0 Nat.14>) <Word.1 Nat.14>);$k0=((<bF λ ∀(:(Word Nat.15)) (Word Nat.16)> <Word.0 Nat.15>) <Word.1 Nat.15>);$k_=Word.nil;(U16.new (k0 (k1 (k2 (k3 (k4 (k5 (k6 (k7 (k8 (k9 (kA (kB (kC (kD (kE (kF k_)))))))))))))))))

Char.newline: Char
  ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)

Char.parse: ∀(str:String) (Char.parse.type str)
  λstr ((<str λstr (Char.parse.type str)> Unit.new) λstr.head λstr.tail str.head)

Char.parse.type: ∀(:String) *
  λstr ((<str λ *> Unit) λstr.head λstr.tail Char)

Char.quote: Char
  ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)

Char.tab: Char
  ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)

Cmp.eql: Cmp
  ΛP λltn λeql λgtn eql

Cmp: *
  Πcmp(P:∀(:Cmp) *) ∀(:(P Cmp.ltn)) ∀(:(P Cmp.eql)) ∀(:(P Cmp.gtn)) (P cmp)

Cmp.gtn: Cmp
  ΛP λltn λeql λgtn gtn

Cmp.ltn: Cmp
  ΛP λltn λeql λgtn ltn

Comp.app: ∀(:Comp) ∀(:Comp) Comp
  λfunc λargm Λ λ λ λapp λ λ λ ((app func) argm)

Comp.fal: Comp
  Λ λ λ λ λ λ λfal fal

Comp: *
  Πcomp(P:∀(:Comp) *) ∀(var:∀(name:String) (P (Comp.var name))) ∀(lam:∀(name:String) ∀(body:Comp) (P ((Comp.lam name) body))) ∀(app:∀(func:Comp) ∀(argm:Comp) (P ((Comp.app func) argm))) ∀(let:∀(name:String) ∀(expr:Comp) ∀(body:Comp) (P (((Comp.let name) expr) body))) ∀(tru:(P Comp.tru)) ∀(fal:(P Comp.fal)) (P comp)

Comp.lam: ∀(:String) ∀(:Comp) Comp
  λname λbody Λ λ λlam λ λ λ λ ((lam name) body)

Comp.let: ∀(:String) ∀(:Comp) ∀(:Comp) Comp
  λname λexpr λbody Λ λ λ λ λLet λ λ (((Let name) expr) body)

Comp.stringify: ∀(:Comp) Stringifier
  λcomp $lit=String.to_stringifier;$rec=Comp.stringify;((((((<comp λ Stringifier> λterm.name (lit term.name)) λterm.name λterm.body $lpar=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil)));$name=(lit term.name);$rpar=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)));$body=(rec term.body);$lend=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil));λx (lpar (name (rpar (body (lend x)))))) λterm.func λterm.argm $func=(rec term.func);$lpar=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil));$argm=(rec term.argm);$rpar=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil));λx (func (lpar (argm (rpar x))))) λterm.name λterm.expr λterm.body $llet=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))));$name=(lit term.name);$leql=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil))));$expr=(rec term.expr);$spac=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)));$body=(rec term.body);λx (llet (name (leql (expr (spac (body x))))))) $lval=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) String.nil)))));λx (lval x)) $lval=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) String.nil))))));λx (lval x))

Comp.tru: Comp
  Λ λ λ λ λ λtru λ tru

Comp.var: ∀(:String) Comp
  λname ΛP λvar λ λ λ λ λ (var name)

Concat: ∀(A:*) *
  λA ∀(:(List A)) (List A)

Concat.push: Π(A:*) ∀(:A) ∀(:(Concat A)) (Concat A)
  ΛA λval λcon λx (con ((<List.cons A> val) x))

Concat.to_list: Π(A:*) ∀(xs:(Concat A)) (List A)
  ΛA λxs (xs <List.nil A>)

Core.Bind: *
  ∀(:(List ((Pair String) Core))) Core

Core.Comp.check: ∀(:Core) ∀(:Core) ∀(:Core.Defs) ∀(:Nat) (Maybe ((Pair Comp) Core))
  λterm λtype λdefs λctx $Par=((Pair Comp) Core);$par=<<Pair.new Comp> Core>;$bnd=<<Maybe.bind Par> Par>;$err=<Maybe.none Par>;$ret=<Maybe.some Par>;$Ret=(Maybe Par);$cmp=<<Pair.fst Comp> Core>;$typ=<<Pair.snd Comp> Core>;$con=String.concat;((((((((<term λ Ret> λ λ λ ((((Core.Comp.check term) type) defs) ctx)) λ ((((Core.Comp.check term) type) defs) ctx)) ((((Core.Comp.check term) type) defs) ctx)) λ λ λ λ λ ((((Core.Comp.check term) type) defs) ctx)) λterm.eras λterm.name λterm.body $typv=((Core.reduce type) defs);((<(Core.if_all typv) λ Ret> err) λgot (<got Ret> λtypv.eras λtypv.self λtypv.name λtypv.bind λtypv.body $self_var=(((Core.ann Bool.true) term) type);$name_var=(((Core.ann Bool.true) (((Core.var term.name) (Nat.succ ctx)) Bool.false)) typv.bind);$body_typ=((typv.body self_var) name_var);$body_ctx=(Nat.succ ctx);((bnd ((((Core.Comp.check (term.body name_var)) body_typ) defs) body_ctx)) λbody_res $comp=((Comp.lam term.name) (cmp body_res));(ret ((par comp) type)))))) λ λ λ ((((Core.Comp.check term) type) defs) ctx)) λterm.name λterm.expr λterm.body ((bnd (((Core.Comp.infer term.expr) defs) ctx)) λexpr_res $expr_var=(((Core.ann Bool.true) term.expr) (typ expr_res));$body_ctx=(Nat.succ ctx);((bnd ((((Core.Comp.check (term.body expr_var)) type) defs) (Nat.succ ctx))) λbody_res $comp=(((Comp.let term.name) (cmp expr_res)) (cmp body_res));$type=(typ body_res);(ret ((par comp) type))))) λ λ λ ((((Core.Comp.check term) type) defs) ctx))

Core.Comp.infer: ∀(:Core) ∀(:Core.Defs) ∀(:Nat) (Maybe ((Pair Comp) Core))
  λterm λdefs λctx $Par=((Pair Comp) Core);$par=<<Pair.new Comp> Core>;$bnd=<<Maybe.bind Par> Par>;$err=<Maybe.none Par>;$ret=<Maybe.some Par>;$Ret=(Maybe Par);$cmp=<<Pair.fst Comp> Core>;$typ=<<Pair.snd Comp> Core>;((((((((<term λ Ret> λterm.name λterm.indx λterm.flip $comp=(Comp.var term.name);$type=(((Core.var term.name) term.indx) term.flip);(ret ((par comp) type))) λterm.name ((<((Core.Defs.get_type defs) term.name) λ Ret> err) λtype $comp=(Comp.var term.name);(ret ((par comp) type)))) $comp=Comp.fal;$type=Core.typ;(ret ((par comp) type))) λterm.eras λterm.self λterm.name λterm.bind λterm.body $comp=Comp.fal;$type=Core.typ;(ret ((par comp) type))) λterm.eras λterm.name λterm.body err) λterm.eras λterm.func λterm.argm ((bnd (((Core.Comp.infer term.func) defs) ctx)) λfunc_res $func_typ=((Core.reduce (typ func_res)) defs);((<(Core.if_all func_typ) λ Ret> err) λgot (<got Ret> λfunc_typ.eras λfunc_typ.self λfunc_typ.name λfunc_typ.bind λfunc_typ.body $self_var=(((Core.ann Bool.true) term.func) func_typ);$name_var=(((Core.ann Bool.true) term.argm) func_typ.bind);((bnd ((((Core.Comp.check term.argm) func_typ.bind) defs) ctx)) λargm_res $term_typ=((func_typ.body self_var) name_var);$comp=((Comp.app (cmp func_res)) (cmp argm_res));$type=term_typ;(ret ((par comp) type))))))) λterm.name λterm.expr λterm.body ((bnd (((Core.Comp.infer term.expr) defs) ctx)) λexpr_res $expr_var=(((Core.ann Bool.true) term.expr) (typ expr_res));((bnd (((Core.Comp.infer (term.body expr_var)) defs) (Nat.succ ctx))) λbody_res $comp=(((Comp.let term.name) (cmp expr_res)) (cmp body_res));$type=(typ body_res);(ret ((par comp) type))))) λterm.done λterm.expr λterm.type ((((Core.Comp.check term.expr) term.type) defs) ctx))

Core.Ctx.ext: ∀(:String) ∀(:Core) ∀(:Core.Ctx) Core.Ctx
  λstr λtrm (<List.cons ((Pair String) Core)> ((<<Pair.new String> Core> str) trm))

Core.Ctx: *
  (List ((Pair String) Core))

Core.Ctx.nil: Core.Ctx
  <List.nil ((Pair String) Core)>

Core.Def: *
  ((Pair Core) Core)

Core.Defs: *
  (Map Core.Def)

Core.Defs.get: ∀(:Core.Defs) ∀(:String) (Maybe Core.Def)
  λdefs λname ((<Map.get Core.Def> (String.to_bits name)) defs)

Core.Defs.get_term: ∀(:Core.Defs) ∀(:String) (Maybe Core)
  λdefs λname ((<<Maybe.map Core.Def> Core> <<Pair.snd Core> Core>) ((Core.Defs.get defs) name))

Core.Defs.get_type: ∀(:Core.Defs) ∀(:String) (Maybe Core)
  λdefs λname ((<<Maybe.map Core.Def> Core> <<Pair.fst Core> Core>) ((Core.Defs.get defs) name))

Core.Defs.new: (Map ((Pair Core) Core))
  <Map.new ((Pair Core) Core)>

Core.Defs.set: ∀(:String) ∀(:Core.Def) ∀(:Core.Defs) Core.Defs
  λname λval λdefs $key=(String.to_bits name);(((<Map.set Core.Def> key) val) defs)

Core.Defs.term: ∀(:Core.Defs) ∀(:String) Core
  λdefs λname ((<((Core.Defs.get_term defs) name) λ Core> (Core.ref ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))))))))))))) λterm term)

Core.Defs.type: ∀(:Core.Defs) ∀(:String) Core
  λdefs λname ((<((Core.Defs.get_type defs) name) λ Core> (Core.ref ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))))))))))))) λtype type)

Core.Read.Reply: ∀(A:*) *
  λA (Maybe ((Pair A) String))

Core.Read.all: (Core.Read Core.Bind)
  ((<<Core.Read.seek Text> Core.Bind> Core.Read.nam) λself ((<<Core.Read.bind Bool> Core.Bind> ((Core.Read.one ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) String.nil))) λeras ((<<Core.Read.seek Text> Core.Bind> Core.Read.nam) λname ((<<Core.Read.seek Unit> Core.Bind> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) String.nil))) λskip ((<<Core.Read.bind Core.Bind> Core.Bind> Core.Read.trm) λbind ((<<Core.Read.seek Bool> Core.Bind> ((Core.Read.one ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))) λskip ((<<Core.Read.seek Unit> Core.Bind> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil)))) λskip ((<<Core.Read.bind Core.Bind> Core.Bind> Core.Read.trm) λbody (<Core.Read.done Core.Bind> λctx (((((Core.all eras) self) name) (bind ctx)) λs λx (body (((Core.Ctx.ext name) x) (((Core.Ctx.ext self) s) ctx)))))))))))))

Core.Read.ann: ∀(:Core.Bind) (Core.Read Core.Bind)
  λexpr ((<<Core.Read.seek Unit> Core.Bind> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) String.nil)))) λskip ((<<Core.Read.bind Core.Bind> Core.Bind> Core.Read.trm) λtype (<Core.Read.done Core.Bind> λctx (((Core.ann Bool.false) (expr ctx)) (type ctx)))))

Core.Read.app: ∀(:Core.Bind) (Core.Read Core.Bind)
  λfunc ((<<Core.Read.bind Bool> Core.Bind> ((Core.Read.one ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) String.nil))) λeras ((<<Core.Read.bind Core.Bind> Core.Bind> Core.Read.trm) λargm ((<<Core.Read.seek Bool> Core.Bind> ((Core.Read.one ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))) λskip (<Core.Read.done Core.Bind> λctx (((Core.app eras) (func ctx)) (argm ctx))))))

Core.Read.arr: ∀(:Core.Bind) (Core.Read Core.Bind)
  λbind ((<<Core.Read.seek Unit> Core.Bind> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil)))) λskip ((<<Core.Read.bind Core.Bind> Core.Bind> Core.Read.trm) λbody (<Core.Read.done Core.Bind> λctx (((((Core.all Bool.false) String.nil) String.nil) (bind ctx)) λs λx (body (((Core.Ctx.ext String.nil) x) (((Core.Ctx.ext String.nil) s) ctx)))))))

Core.Read.bind: Π(A:*) Π(B:*) ∀(:(Core.Read A)) ∀(:∀(:A) (Core.Read B)) (Core.Read B)
  ΛA ΛB λra λrb λcode ((<(ra code) λ (Core.Read.Reply B)> <Core.Read.fail B>) λgot (<got λ (Core.Read.Reply B)> rb))

Core.Read.def: (Core.Read ((Pair String) Core.Def))
  ((<<Core.Read.seek Text> ((Pair String) Core.Def)> Core.Read.nam) λname ((<<Core.Read.seek Unit> ((Pair String) Core.Def)> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) String.nil))) λskip ((<<Core.Read.seek Core.Bind> ((Pair String) Core.Def)> Core.Read.trm) λtype ((<<Core.Read.seek Core.Bind> ((Pair String) Core.Def)> Core.Read.trm) λterm $term=(term Core.Ctx.nil);$type=(type Core.Ctx.nil);$pair=((<<Pair.new Core> Core> type) term);$pair=((<<Pair.new String> Core.Def> name) pair);(<Core.Read.done ((Pair String) Core.Def)> pair)))))

Core.Read.defs: (Core.Read Core.Defs)
  (Core.Read.defs.go Core.Defs.new)

Core.Read.defs.go: ∀(:Core.Defs) (Core.Read Core.Defs)
  λdefs λcode ((<(Core.Read.def code) λ (Core.Read.Reply Core.Defs)> ((<Core.Read.done Core.Defs> defs) code)) λgot (<got λ (Core.Read.Reply Core.Defs)> λpair λcode (<pair λ (Core.Read.Reply Core.Defs)> λname λdef $defs=(((Core.Defs.set name) def) defs);((Core.Read.defs.go defs) code))))

Core.Read.done: Π(A:*) ∀(:A) ∀(:String) (Core.Read.Reply A)
  ΛA λx λcode (<Maybe.some ((Pair A) String)> ((<<Pair.new A> String> x) code))

Core.Read.fail: Π(A:*) (Core.Read.Reply A)
  ΛA <Maybe.none ((Pair A) String)>

Core.Read.first_of: Π(A:*) ∀(:(List (Core.Read A))) (Core.Read A)
  ΛA λreads λcode ((<reads λ (Core.Read.Reply A)> <Core.Read.fail A>) λreads.head λreads.tail ((<(reads.head code) λ (Core.Read.Reply A)> ((<Core.Read.first_of A> reads.tail) code)) <Maybe.some ((Pair A) String)>))

Core.Read: ∀(:*) *
  λA ∀(:String) (Core.Read.Reply A)

Core.Read.fst: ∀(:(List String)) (Core.Read Nat)
  λtxts $reads=((<<List.imap String> (Core.Read Nat)> λi λstr ((<<Core.Read.bind Unit> Nat> (Core.Read.txt str)) λ (<Core.Read.done Nat> i))) txts);(<Core.Read.first_of Nat> reads)

Core.Read.is_name: ∀(:Char) Bool
  λchr ((Set.get (U16.to_bits chr)) Core.Read.is_name.set)

Core.Read.is_name.set: (Map Unit)
  (String.to_set ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

Core.Read.is_space: ∀(:Char) Bool
  λchr ((Bool.or ((U16.eql chr) ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0))) ((U16.eql chr) Char.newline))

Core.Read.lam: (Core.Read Core.Bind)
  ((<<Core.Read.seek Bool> Core.Bind> ((Core.Read.one ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) String.nil))) λeras ((<<Core.Read.seek Text> Core.Bind> Core.Read.nam) λname ((<<Core.Read.seek Bool> Core.Bind> ((Core.Read.one ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))) λskip ((<<Core.Read.bind Core.Bind> Core.Bind> Core.Read.trm) λbody (<Core.Read.done Core.Bind> λctx (((Core.lam eras) name) λx (body (((Core.Ctx.ext name) x) ctx))))))))

Core.Read.let: (Core.Read Core.Bind)
  ((<<Core.Read.seek Unit> Core.Bind> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))) λeras ((<<Core.Read.seek Text> Core.Bind> Core.Read.wrd) λname ((<<Core.Read.seek Unit> Core.Bind> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1)) String.nil))) λskip ((<<Core.Read.bind Core.Bind> Core.Bind> Core.Read.trm) λexpr ((<<Core.Read.seek Bool> Core.Bind> (Core.Read.opt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) String.nil))) λskip ((<<Core.Read.bind Core.Bind> Core.Bind> Core.Read.trm) λbody (<Core.Read.done Core.Bind> λctx (((Core.let name) (expr ctx)) λx (body (((Core.Ctx.ext name) x) ctx))))))))))

Core.Read.nam: (Core.Read String)
  λcode ((<code λ (Core.Read.Reply String)> ((<Core.Read.done String> String.nil) String.nil)) λcode.head λcode.tail ((<(Core.Read.is_name code.head) λ (Core.Read.Reply String)> ((<(Core.Read.nam code.tail) λ (Core.Read.Reply String)> <Core.Read.fail String>) λgot (<got λ (Core.Read.Reply String)> λstr (<Core.Read.done String> ((String.cons code.head) str))))) ((<Core.Read.done String> String.nil) code)))

Core.Read.next: ∀(:String) String
  λstr $str=((String.drop_while Core.Read.is_space) str);((<str λ String> String.nil) λstr.head λstr.tail ((<((U16.eql ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) str.head) λ String> (Core.Read.next (String.tail ((String.drop_until (U16.eql Char.newline)) str.tail)))) ((<((U16.eql ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) str.head) λ String> (Core.Read.next (String.tail ((String.drop_until (U16.eql ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1))) str.tail)))) str)))

Core.Read.one: ∀(:String) ∀(:String) (Core.Read Bool)
  λchr0 λchr1 $list=((<List.cons String> chr0) ((<List.cons String> chr1) <List.nil String>));((<<Core.Read.bind Nat> Bool> (Core.Read.fst list)) λidx (<Core.Read.done Bool> (Bool.not (Nat.is_zero idx))))

Core.Read.opt: ∀(:String) (Core.Read Bool)
  λstr λcode ((<((Core.Read.txt str) code) λ (Core.Read.Reply Bool)> ((<Core.Read.done Bool> Bool.false) code)) λgot (<got λ (Core.Read.Reply Bool)> λ λcode ((<Core.Read.done Bool> Bool.true) code)))

Core.Read.par: (Core.Read Core.Bind)
  ((<<Core.Read.seek Unit> Core.Bind> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil))) λskip ((<<Core.Read.bind Core.Bind> Core.Bind> Core.Read.trm) λterm ((<<Core.Read.seek Unit> Core.Bind> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil))) λskip (<Core.Read.done Core.Bind> term))))

Core.Read.pip: ∀(:Core.Bind) (Core.Read Core.Bind)
  λfunc ((<<Core.Read.seek Unit> Core.Bind> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) String.nil))) λeras ((<<Core.Read.bind Core.Bind> Core.Bind> Core.Read.trm) λargm ((<<Core.Read.seek Unit> Core.Bind> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) String.nil))) λskip (<Core.Read.done Core.Bind> λctx (((Core.app Bool.false) (func ctx)) (argm ctx))))))

Core.Read.seek: Π(A:*) Π(B:*) ∀(:(Core.Read A)) ∀(:∀(:A) (Core.Read B)) (Core.Read B)
  ΛA ΛB λra λrb λcode (((<<Core.Read.bind A> B> ra) rb) (Core.Read.next code))

Core.Read.trm.base: (Core.Read Core.Bind)
  $nil=<List.nil (Core.Read Core.Bind)>;$ext=<List.cons (Core.Read Core.Bind)>;$bases=((ext Core.Read.all) ((ext Core.Read.lam) ((ext Core.Read.let) ((ext Core.Read.par) ((ext Core.Read.typ) ((ext Core.Read.var) nil))))));(<Core.Read.first_of Core.Bind> bases)

Core.Read.trm: (Core.Read Core.Bind)
  ((<<Core.Read.seek Core.Bind> Core.Bind> Core.Read.trm.base) Core.Read.trm.post)

Core.Read.trm.post: ∀(:Core.Bind) (Core.Read Core.Bind)
  λbase λcode $nil=<List.nil (Core.Read Core.Bind)>;$ext=<List.cons (Core.Read Core.Bind)>;$posts=((ext (Core.Read.app base)) ((ext (Core.Read.pip base)) ((ext (Core.Read.arr base)) ((ext (Core.Read.ann base)) nil))));((<((<Core.Read.first_of Core.Bind> posts) code) λ (Core.Read.Reply Core.Bind)> ((<Core.Read.done Core.Bind> base) code)) λgot (<got λ (Core.Read.Reply Core.Bind)> λpost λcode ((Core.Read.trm.post post) code)))

Core.Read.txt: ∀(:String) (Core.Read Unit)
  λstr λcode ((<str λ (Core.Read.Reply Unit)> ((<Core.Read.done Unit> Unit.new) code)) λstr.head λstr.tail ((<code λ (Core.Read.Reply Unit)> <Core.Read.fail Unit>) λcode.head λcode.tail ((<((U16.eql str.head) code.head) λ (Core.Read.Reply Unit)> ((Core.Read.txt str.tail) code.tail)) <Core.Read.fail Unit>)))

Core.Read.typ: (Core.Read Core.Bind)
  ((<<Core.Read.seek Unit> Core.Bind> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) String.nil)))))) λskip (<Core.Read.done Core.Bind> λctx Core.typ))

Core.Read.var: (Core.Read Core.Bind)
  ((<<Core.Read.seek Text> Core.Bind> Core.Read.nam) λname (<Core.Read.done Core.Bind> λctx $find_var=:∀(:((Pair String) Core)) Bool λvar (<var λ Bool> λvar_name λ ((String.eql name) var_name));$found_var=((<List.find ((Pair String) Core)> find_var) ctx);((<found_var λ Core> (Core.ref name)) λvar (<var λ Core> λname λterm term))))

Core.Read.wrd: (Core.Read String)
  ((<<Core.Read.bind String> String> Core.Read.nam) λnam λcode ((<(String.is_empty nam) λ (Core.Read.Reply String)> <Core.Read.fail String>) ((<Core.Read.done String> nam) code)))

Core.all.Tuple: *
  Π(P:*) ∀(all:∀(eras:Bool) ∀(self:String) ∀(name:String) ∀(bind:Core) ∀(body:∀(:Core) ∀(:Core) Core) P) P

Core.all: ∀(:Bool) ∀(:String) ∀(:String) ∀(:Core) ∀(:∀(:Core) ∀(:Core) Core) Core
  λeras λself λname λbind λbody Λ λ λ λ λall λ λ λ λ (((((all eras) self) name) bind) body)

Core.ann: ∀(:Bool) ∀(:Core) ∀(:Core) Core
  λdone λexpr λtype Λ λ λ λ λ λ λ λ λann (((ann done) expr) type)

Core.app: ∀(:Bool) ∀(:Core) ∀(:Core) Core
  λeras λfunc λargm Λ λ λ λ λ λ λapp λ λ (((app eras) func) argm)

Core.eql: ∀(:Core) ∀(:Core) ∀(:Core.Defs) Bool
  λa λb λdefs (((((Core.eql.go a) b) defs) Set.new) Nat.zero)

Core.eql.go: ∀(:Core) ∀(:Core) ∀(:Core.Defs) ∀(:Set) ∀(:Nat) Bool
  λa λb λdefs λeql λdep $a=((Core.reduce a) defs);$b=((Core.reduce b) defs);$x=(Core.to_uid a);$y=(Core.to_uid b);$h=((Bits.concat x) y);(((<((Bool.or ((Bits.eql x) y)) ((Set.get h) eql)) λ ∀(:Unit) Bool> λ Bool.true) λ $eql=((Set.set h) eql);((((((((<a λ Bool> λ λ λ Bool.false) λa.name Bool.false) Bool.false) λa.eras λa.self λa.name λa.bind λa.body ((((((((<b λ Bool> λ λ λ Bool.false) λ Bool.false) Bool.false) λb.eras λb.self λb.name λb.bind λb.body $s_vari=(((Core.var String.nil) dep) Bool.false);$n_vari=(((Core.var String.nil) (Nat.succ dep)) Bool.false);$a_body=((a.body s_vari) n_vari);$b_body=((b.body s_vari) n_vari);$e_eras=((Bool.eql a.eras) b.eras);$e_self=((String.eql a.self) b.self);$e_bind=(((((Core.eql.go a.bind) b.bind) defs) eql) dep);$e_body=(((((Core.eql.go a_body) b_body) defs) eql) dep);((Bool.and e_eras) ((Bool.and e_self) ((Bool.and e_bind) e_body)))) λ λ λ Bool.false) λ λ λ Bool.false) λ λ λ Bool.false) λ λ λ Bool.false)) λa.eras λa.name λa.body ((((((((<b λ Bool> λ λ λ Bool.false) λ Bool.false) Bool.false) λ λ λ λ λ Bool.false) λb.eras λb.name λb.body $n_vari=(((Core.var String.nil) dep) Bool.false);$a_body=(a.body n_vari);$b_body=(b.body n_vari);$e_eras=((Bool.eql a.eras) b.eras);$e_body=(((((Core.eql.go a_body) b_body) defs) eql) dep);((Bool.and e_eras) e_body)) λ λ λ Bool.false) λ λ λ Bool.false) λ λ λ Bool.false)) λa.eras λa.func λa.argm ((((((((<b λ Bool> λ λ λ Bool.false) λ Bool.false) Bool.false) λ λ λ λ λ Bool.false) λ λ λ Bool.false) λb.eras λb.func λb.argm $e_eras=((Bool.eql a.eras) b.eras);$e_func=(((((Core.eql.go a.func) b.func) defs) eql) dep);$e_argm=(((((Core.eql.go a.argm) b.argm) defs) eql) dep);((Bool.and e_eras) ((Bool.and e_func) e_argm))) λ λ λ Bool.false) λ λ λ Bool.false)) λa.name λa.expr λa.body ((((((((<b λ Bool> λ λ λ Bool.false) λ Bool.false) Bool.false) λ λ λ λ λ Bool.false) λ λ λ Bool.false) λ λ λ Bool.false) λb.name λb.expr λb.body $n_vari=(((Core.var String.nil) dep) Bool.false);$a_body=(a.body n_vari);$b_body=(b.body n_vari);$e_expr=(((((Core.eql.go a.expr) b.expr) defs) eql) dep);$e_body=(((((Core.eql.go a_body) b_body) defs) eql) dep);((Bool.eql e_expr) e_body)) λ λ λ Bool.false)) λa.done λa.expr λa.type ((((((((<b λ Bool> λ λ λ Bool.false) λ Bool.false) Bool.false) λ λ λ λ λ Bool.false) λ λ λ Bool.false) λ λ λ Bool.false) λ λ λ Bool.false) λb.done λb.expr λb.type $e_expr=(((((Core.eql.go a.expr) b.expr) defs) eql) dep);e_expr))) Unit.new)

Core: *
  Πcore(P:∀(:Core) *) ∀(var:∀(name:String) ∀(indx:Nat) ∀(flip:Bool) (P (((Core.var name) indx) flip))) ∀(ref:∀(name:String) (P (Core.ref name))) ∀(typ:(P Core.typ)) ∀(all:∀(eras:Bool) ∀(self:String) ∀(name:String) ∀(bind:Core) ∀(body:∀(:Core) ∀(:Core) Core) (P (((((Core.all eras) self) name) bind) body))) ∀(lam:∀(eras:Bool) ∀(name:String) ∀(body:∀(:Core) Core) (P (((Core.lam eras) name) body))) ∀(app:∀(eras:Bool) ∀(func:Core) ∀(argm:Core) (P (((Core.app eras) func) argm))) ∀(let:∀(name:String) ∀(expr:Core) ∀(body:∀(:Core) Core) (P (((Core.let name) expr) body))) ∀(ann:∀(done:Bool) ∀(expr:Core) ∀(type:Core) (P (((Core.ann done) expr) type))) (P core)

Core.if_all: ∀(:Core) (Maybe Core.all.Tuple)
  λterm ((((((((<term λ (Maybe Core.all.Tuple)> λ λ λ <Maybe.none Core.all.Tuple>) λ <Maybe.none Core.all.Tuple>) <Maybe.none Core.all.Tuple>) λeras λname λself λbind λbody (<Maybe.some Core.all.Tuple> ΛP λfunc (((((func eras) name) self) bind) body))) λ λ λ <Maybe.none Core.all.Tuple>) λ λ λ <Maybe.none Core.all.Tuple>) λ λ λ <Maybe.none Core.all.Tuple>) λ λ λ <Maybe.none Core.all.Tuple>)

Core.is_all: ∀(:Core) Bool
  λterm ((((((((<term λ Bool> λname λindx λflip Bool.false) λname Bool.false) Bool.false) λeras λself λname λbind λbody Bool.true) λeras λname λbody Bool.false) λeras λfunc λargm Bool.false) λname λexpr λbody Bool.false) λdone λexpr λtype Bool.false)

Core.is_lam: ∀(:Core) Bool
  λterm ((((((((<term λ Bool> λname λindx λflip Bool.false) λname Bool.false) Bool.false) λeras λself λname λbind λbody Bool.false) λeras λname λbody Bool.true) λeras λfunc λargm Bool.false) λname λexpr λbody Bool.false) λdone λexpr λtype Bool.false)

Core.lam: ∀(:Bool) ∀(:String) ∀(:∀(:Core) Core) Core
  λeras λname λbody Λ λ λ λ λ λlam λ λ λ (((lam eras) name) body)

Core.let: ∀(:String) ∀(:Core) ∀(:∀(:Core) Core) Core
  λname λexpr λbody Λ λ λ λ λ λ λ λLet λ (((Let name) expr) body)

Core.normalize: ∀(:Core) ∀(:Core.Defs) Core
  λterm λdefs ((((((((<((Core.reduce term) defs) λ Core> λname λindx ((Core.var name) indx)) λname (Core.ref name)) Core.typ) λeras λself λname λbind λbody $bind=((Core.normalize bind) defs);$body=:∀(:Core) ∀(:Core) Core λs λx ((Core.normalize ((body s) x)) defs);(((((Core.all eras) self) name) bind) body)) λeras λname λbody $body=:∀(:Core) Core λx ((Core.normalize (body x)) defs);(((Core.lam eras) name) body)) λeras λfunc λargm $func=((Core.normalize func) defs);$argm=((Core.normalize argm) defs);(((Core.app eras) func) argm)) λname λexpr λbody ((Core.normalize (body expr)) defs)) λdone λexpr λtype ((Core.normalize expr) defs))

Core.parse: ∀(:String) Core
  λcode ((<(Core.Read.trm code) λ Core> (Core.ref ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))))))))) λgot (<got λ Core> λterm λ (term Core.Ctx.nil)))

Core.parse_defs: ∀(:String) Core.Defs
  λcode ((<(Core.Read.defs code) λ Core.Defs> Core.Defs.new) λgot (<got λ Core.Defs> λdefs λ defs))

Core.reduce: ∀(:Core) ∀(:Core.Defs) Core
  λterm λdefs ((((((((<term λ Core> λindx λname λflip (((Core.var indx) name) flip)) λname ((<((Core.Defs.get_term defs) name) λ Core> (Core.ref name)) λterm ((Core.reduce term) defs))) Core.typ) λeras λself λname λbind λbody (((((Core.all eras) self) name) bind) body)) λeras λname λbody ((<eras λ Core> ((Core.reduce (body (Core.ref ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) String.nil)))) defs)) (((Core.lam eras) name) body))) λeras λfunc λargm ((<eras λ Core> ((Core.reduce func) defs)) (((((((((<((Core.reduce func) defs) λ ∀(:Core) Core> λfindx λfname λfflip ((Core.app eras) (((Core.var findx) fname) fflip))) λfname ((Core.app eras) (Core.ref fname))) ((Core.app eras) Core.typ)) λferas λfself λfname λfbind λfbody ((Core.app eras) (((((Core.all feras) fself) fname) fbind) fbody))) λferas λfname λfbody λterm.argm ((Core.reduce (fbody term.argm)) defs)) λferas λffunc λfargm ((Core.app eras) (((Core.app feras) ffunc) fargm))) λfname λfexpr λfbody ((Core.app eras) (((Core.let fname) fexpr) fbody))) λfdone λfexpr λftype ((Core.app eras) (((Core.ann fdone) fexpr) ftype))) argm))) λname λexpr λbody ((Core.reduce (body expr)) defs)) λdone λexpr λtype ((Core.reduce expr) defs))

Core.ref: ∀(:String) Core
  λname Λ λ λref λ λ λ λ λ λ (ref name)

Core.stringify: ∀(:Core) String
  λterm ((Core.stringify.go term) String.nil)

Core.stringify.go: ∀(:Core) Stringifier
  λterm $lit=String.to_stringifier;((((((((<term λ Stringifier> λname λindx λflip λx ((lit name) x)) λname λx ((lit name) x)) λx ((lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) String.nil))))) x)) λeras λself λname λbind λbody λx $svar=(((Core.var self) Nat.zero) Bool.false);$nvar=(((Core.var name) Nat.zero) Bool.false);$body=((body svar) nvar);$self=(lit self);$lpar=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil));$name=(lit name);$colo=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)));$bind=(Core.stringify.go bind);$rpar=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil))))));$body=(Core.stringify.go body);(self (lpar (name (colo (bind (rpar (body x)))))))) λeras λname λbody λx $nvar=(((Core.var name) Nat.zero) Bool.false);$body=(body nvar);$lpar=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil));$name=(lit name);$rpar=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil));$spac=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil));$body=(Core.stringify.go body);(lpar (name (rpar (spac (body x)))))) λeras λfunc λargm λx $wrap=((Bool.or (Core.is_lam func)) (Core.is_all func));$inif=((<wrap λ Stringifier> (lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil))) (lit String.nil));$func=(Core.stringify.go func);$endf=((<wrap λ Stringifier> (lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil))) (lit String.nil));$lpar=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil));$argm=(Core.stringify.go argm);$rpar=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil));(inif (func (endf (lpar (argm (rpar x))))))) λname λexpr λbody λx $nvar=(((Core.var name) Nat.zero) Bool.false);$body=(body nvar);$lets=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))));$name=(lit name);$eqls=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil))));$expr=(Core.stringify.go expr);$spac=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)));$body=(Core.stringify.go body);(lets (name (eqls (expr (spac (body x))))))) λdone λexpr λtype λx $expr=(Core.stringify.go expr);$colo=(lit ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))));$type=(Core.stringify.go type);(expr (colo (type x))))

Core.to_bits: ∀(:Core) Bits
  λterm ((((Core.to_bits.go term) Nat.0) Bool.false) Bits.nil)

Core.to_bits.go: ∀(:Core) ∀(:Nat) ∀(:Bool) ∀(:Bits) Bits
  λterm λdep λhash ((((((((<term λ ∀(:Bits) Bits> λname λindx λflip λx $indx=((<flip λ Bits> (Nat.to_bits ((Nat.sub indx) (Nat.succ dep)))) (Nat.to_bits indx));(Bits.0 (Bits.0 (Bits.0 (Bits.0 ((Bits.concat indx) x)))))) λname λx (Bits.0 (Bits.0 (Bits.1 ((Bits.concat (String.to_bits name)) x))))) λx (Bits.0 (Bits.1 (Bits.0 x)))) λeras λself λname λbind λbody λx $bind=(((Core.to_bits.go bind) dep) hash);$body=(((Core.to_bits.go $svar=(((Core.var String.nil) dep) hash);$nvar=(((Core.var String.nil) (Nat.succ dep)) hash);((body svar) nvar)) (Nat.succ (Nat.succ dep))) hash);(Bits.0 (Bits.1 (Bits.1 (bind (body x)))))) λeras λname λbody λx $nvar=(((Core.var String.nil) dep) hash);$body=(((Core.to_bits.go (body nvar)) (Nat.succ dep)) hash);(Bits.1 (Bits.0 (Bits.0 (body x))))) λeras λfunc λargm λx $func=(((Core.to_bits.go func) dep) hash);$argm=(((Core.to_bits.go argm) dep) hash);(Bits.1 (Bits.0 (Bits.1 (func (argm x)))))) λname λexpr λbody λx $nvar=(((Core.var String.nil) dep) hash);$expr=(((Core.to_bits.go expr) dep) hash);$body=(((Core.to_bits.go (body nvar)) (Nat.succ dep)) hash);(Bits.1 (Bits.1 (Bits.0 (expr (body x)))))) λdone λexpr λtype λx ((<hash λ Bits> ((((Core.to_bits.go expr) dep) hash) x)) $expr=(((Core.to_bits.go expr) dep) hash);$type=(((Core.to_bits.go type) dep) hash);(Bits.1 (Bits.1 (Bits.1 (expr (type x)))))))

Core.to_uid: ∀(:Core) Bits
  λterm ((((Core.to_bits.go term) Nat.0) Bool.true) Bits.nil)

Core.typ: Core
  Λ λ λ λtyp λ λ λ λ λ typ

Core.typecheck: ∀(:Core) ∀(:Core) ∀(:Core.Defs) ∀(:Nat) ((Either String) Core)
  λterm λtype λdefs λctx $bnd=<<<Either.bind Text> Core> Core>;$err=<<Either.left Text> Core>;$ret=<<Either.right Text> Core>;$Ret=((Either Text) Core);((((((((<term λ Ret> λ λ λ ((((Core.typecomp term) type) defs) ctx)) λ ((((Core.typecomp term) type) defs) ctx)) ((((Core.typecomp term) type) defs) ctx)) λ λ λ λ λ ((((Core.typecomp term) type) defs) ctx)) λterm.eras λterm.name λterm.body $typv=((Core.reduce type) defs);((<(Core.if_all typv) λ Ret> (err ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))))))))))))))))))))))))))) λgot (<got Ret> λtypv.eras λtypv.self λtypv.name λtypv.bind λtypv.body $self_var=(((Core.ann Bool.true) term) type);$name_var=(((Core.ann Bool.true) (((Core.var term.name) (Nat.succ ctx)) Bool.false)) typv.bind);$body_typ=((typv.body self_var) name_var);$body_ctx=(Nat.succ ctx);((bnd ((((Core.typecheck (term.body name_var)) body_typ) defs) body_ctx)) λ_ (ret type))))) λ λ λ ((((Core.typecomp term) type) defs) ctx)) λterm.name λterm.expr λterm.body ((bnd (((Core.typeinfer term.expr) defs) ctx)) λexpr_typ $expr_var=(((Core.ann Bool.true) term.expr) expr_typ);$body_ctx=(Nat.succ ctx);((((Core.typecheck (term.body expr_var)) type) defs) body_ctx))) λ λ λ ((((Core.typecomp term) type) defs) ctx))

Core.typecomp: ∀(:Core) ∀(:Core) ∀(:Core.Defs) ∀(:Nat) ((Either String) Core)
  λterm λtype λdefs λctx $bnd=<<<Either.bind Text> Core> Core>;$err=<<Either.left Text> Core>;$ret=<<Either.right Text> Core>;$Ret=((Either Text) Core);((bnd (((Core.typeinfer term) defs) ctx)) λinfr ((<(((Core.eql type) infr) defs) λ ((Either Text) Core)> (ret type)) $type_str=(Core.stringify ((Core.normalize type) Core.Defs.new));$infr_str=(Core.stringify ((Core.normalize infr) Core.Defs.new));$erro_str=((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))))))))))))))));$erro_str=((String.concat erro_str) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) String.nil))))))))))))))))))))));$erro_str=((String.concat erro_str) infr_str);$erro_str=((String.concat erro_str) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))))))))));$erro_str=((String.concat erro_str) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) String.nil))))))))))))))))))))));$erro_str=((String.concat erro_str) type_str);$erro_str=((String.concat erro_str) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))))))))));(err erro_str)))

Core.typeinfer: ∀(:Core) ∀(:Core.Defs) ∀(:Nat) ((Either Text) Core)
  λterm λdefs λctx $bnd=<<<Either.bind Text> Core> Core>;$err=<<Either.left Text> Core>;$ret=<<Either.right Text> Core>;$Ret=((Either Text) Core);((((((((<term λ Ret> λterm.name λterm.indx λterm.flip (ret (((Core.var term.name) term.indx) term.flip))) λterm.name ((<((Core.Defs.get_type defs) term.name) λ Ret> (err ((String.concat ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))) term.name))) λtype (ret type))) (ret Core.typ)) λterm.eras λterm.self λterm.name λterm.bind λterm.body $self_var=(((Core.ann Bool.true) (((Core.var term.self) ctx) Bool.false)) term);$name_var=(((Core.ann Bool.true) (((Core.var term.name) (Nat.succ ctx)) Bool.false)) term.bind);$body_ctx=(Nat.succ ctx);$body_ctx=(Nat.succ ctx);$term_body=((term.body self_var) name_var);((bnd ((((Core.typecheck term.bind) Core.typ) defs) ctx)) λbind_typ ((bnd ((((Core.typecheck term_body) Core.typ) defs) ctx)) λbody_typ (ret Core.typ)))) λterm.eras λterm.name λterm.body (err ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))))))))))))))))))) λterm.eras λterm.func λterm.argm ((bnd (((Core.typeinfer term.func) defs) ctx)) λfunc_typ $func_typ=((Core.reduce func_typ) defs);((<(Core.if_all func_typ) λ Ret> (err ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))))))))))))))))))))))))))) λgot (<got Ret> λfunc_typ.eras λfunc_typ.self λfunc_typ.name λfunc_typ.bind λfunc_typ.body $self_var=(((Core.ann Bool.true) term.func) func_typ);$name_var=(((Core.ann Bool.true) term.argm) func_typ.bind);((bnd ((((Core.typecheck term.argm) func_typ.bind) defs) ctx)) λbind_typ $term_typ=((func_typ.body self_var) name_var);(ret term_typ)))))) λterm.name λterm.expr λterm.body ((bnd (((Core.typeinfer term.expr) defs) ctx)) λexpr_typ $expr_var=(((Core.ann Bool.true) term.expr) expr_typ);$body_ctx=(Nat.succ ctx);((bnd (((Core.typeinfer (term.body expr_var)) defs) body_ctx)) λbody_typ (ret body_typ)))) λterm.done λterm.expr λterm.type ((<term.done λ Ret> (ret term.type)) (((Core.typeinfer term.expr) defs) ctx)))

Core.var: ∀(:String) ∀(:Nat) ∀(:Bool) Core
  λname λindx λflip Λ λvar λ λ λ λ λ λ λ (((var name) indx) flip)

Debug.log: Π(A:*) ∀(s:String) ∀(x:∀(:Unit) A) A
  ΛA λs λx (x Unit.new)

CURVE.a: Nat
  Nat.0

CURVE.b: Nat
  Nat.7

CURVE.P: Nat
  (Nat.parse_hex ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

CURVE.n: Nat
  (Nat.parse_hex ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

CURVE.h: Nat
  (Nat.parse_hex ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) String.nil))

CURVE.Gx: Nat
  (Nat.parse_hex ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

CURVE.Gy: Nat
  (Nat.parse_hex ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

CURVE.beta: Nat
  (Nat.parse_hex ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

ecdsa.mod: ∀(:Nat) Nat
  λa ((Nat.mod a) CURVE.P)

ecdsa.negate: ∀(:Nat) Nat
  λa $a=(ecdsa.mod a);((<((Nat.eql a) Nat.0) λ Nat> Nat.0) ((Nat.sub CURVE.P) a))

ecdsa.sub: ∀(:Nat) ∀(:Nat) Nat
  λa λb (ecdsa.mod ((Nat.add a) (ecdsa.negate b)))

ecdsa.P_DIV4_1: Nat
  ((Nat.div ((Nat.add CURVE.P) Nat.1)) Nat.4)

ecdsa.weistrass: ∀(:Nat) Nat
  λx (ecdsa.mod ((Nat.add ((Nat.add ((((Nat.mulVar Nat.3) x) x) x)) ((Nat.mul CURVE.a) x))) CURVE.b))

ecdsa.PRIME_SIZE: Nat
  (Nat.parse_decimal ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) String.nil))))

ecdsa.USE_ENDOMORPHISM: Bool
  ((Nat.eql CURVE.a) Nat.0)

Nat.odd: ∀(:Nat) Bool
  λn ((Nat.eql ((Nat.mod n) Nat.2)) Nat.1)

Nat.egcd: ∀(:Nat) ∀(:Nat) ((Pair Nat) ((Pair Int) Int))
  λa λb ((((((Nat.egcd_aux.tco a) b) Int.0) Int.1) Int.1) Int.0)

Nat.egcd_aux.tco: ∀(:Nat) ∀(:Nat) ∀(:Int) ∀(:Int) ∀(:Int) ∀(:Int) ((Pair Nat) ((Pair Int) Int))
  λa λb λx λy λu λv (((<a λ ∀(:Unit) ((Pair Nat) ((Pair Int) Int))> λ ((<<Pair.new Nat> ((Pair Int) Int)> b) ((<<Pair.new Int> Int> x) y))) λpred λ $q=((Nat.div b) a);$r=((Nat.mod b) a);$m=((Int.sub x) ((Int.mul u) (Int.fromNat q)));$n=((Int.sub y) ((Int.mul v) (Int.fromNat q)));((((((Nat.egcd_aux.tco r) a) u) v) m) n)) Unit.new)

ecdsa.invert: ∀(:Nat) ∀(:Nat) (Maybe Nat)
  λnumber λmodulo ((<((Nat.eql number) Nat.0) λ (Maybe Nat)> <Maybe.none Nat>) (<((Nat.egcd ((Nat.mod number) modulo)) modulo) λ (Maybe Nat)> λgcd λp ((<((Nat.eql gcd) Nat.1) λ (Maybe Nat)> (<p λ (Maybe Nat)> λx λy (<Maybe.some Nat> ((Int.mod_Nat x) modulo)))) <Maybe.none Nat>)))

ecdsa.invertUnsafe: ∀(:Nat) ∀(:Nat) Nat
  λnumber λmodulo ((<Maybe.extract Nat> ((ecdsa.invert number) modulo)) Nat.1)

ecdsa.split_scalar: ∀(:Nat) ((Pair Int) Int)
  λk $k=(Int.fromNat k);$a1=(Int.parse_hex ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) String.nil)))))))))))))))))))))))))))))))));$b1=(Int.parse_hex ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) String.nil)))))))))))))))))))))))))))))))));$a2=(Int.parse_hex ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil))))))))))))))))))))))))))))))))));$b2=(Int.parse_hex ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) String.nil)))))))))))))))))))))))))))))))));$c1=((Int.div_Nat ((Int.mul b2) k)) CURVE.n);$c2=((Int.div_Nat ((Int.mul b1) k)) CURVE.n);$k1=((Int.sub ((Int.sub k) ((Int.mul c1) a1))) ((Int.mul c2) a2));$k2=((Int.sub ((Int.mul c1) b1)) ((Int.mul c2) b2));((<<Pair.new Int> Int> k1) k2)

Point: *
  ((Pair Nat) Nat)

Point.new: ∀(:Nat) ∀(:Nat) Point
  λx λy ((<<Pair.new Nat> Nat> x) y)

Jacobian: *
  Πjacobian(P:∀(:Jacobian) *) ∀(new:∀(x:Nat) ∀(y:Nat) ∀(z:Nat) (P (((Jacobian.new x) y) z))) (P jacobian)

Jacobian.new: ∀(:Nat) ∀(:Nat) ∀(:Nat) Jacobian
  λx λy λz ΛP λpoint (((point x) y) z)

Jacobian.0: Jacobian
  (((Jacobian.new Nat.0) Nat.0) Nat.1)

Jacobian.base: Jacobian
  (((Jacobian.new CURVE.Gx) CURVE.Gy) Nat.1)

Jacobian.equal: ∀(:Jacobian) ∀(:Jacobian) Bool
  λa λb (<a λ Bool> λa.x λa.y λa.z (<b λ Bool> λb.x λb.y λb.z $a.z2=(ecdsa.mod ((Nat.mul a.z) a.z));$a.z3=(ecdsa.mod ((Nat.mul a.z) a.z2));$b.z2=(ecdsa.mod ((Nat.mul b.z) b.z));$b.z3=(ecdsa.mod ((Nat.mul b.z) b.z2));$eq1=((Nat.eql (ecdsa.mod ((Nat.mul a.x) b.z2))) (ecdsa.mod ((Nat.mul b.x) a.z2)));$eq2=((Nat.eql (ecdsa.mod ((Nat.mul a.y) b.z3))) (ecdsa.mod ((Nat.mul b.y) a.z3)));((Bool.and eq1) eq2)))

Jacobian.from_point: ∀(:Point) Jacobian
  λp (<p λ Jacobian> λp.x λp.y (((Jacobian.new p.x) p.y) Nat.1))

Jacobian.to_point: ∀(:Jacobian) Point
  λp (<p λ Point> λp.x λp.y λp.z $invz=((ecdsa.invertUnsafe p.z) CURVE.P);$invz2=(Nat.square invz);$x=(ecdsa.mod ((Nat.mul p.x) invz2));$y=(ecdsa.mod ((((Nat.mulVar Nat.3) p.y) invz2) invz));((Point.new x) y))

Jacobian.negate: ∀(:Jacobian) Jacobian
  λp (<p λ Jacobian> λp.x λp.y λp.z (((Jacobian.new p.x) (ecdsa.negate p.y)) p.z))

Jacobian.double: ∀(:Jacobian) Jacobian
  λp (<p λ Jacobian> λp.x λp.y λp.z $A=(Nat.square p.x);$B=(Nat.square p.y);$C=(Nat.square B);$D=((Nat.mul Nat.2) ((ecdsa.sub (Nat.square ((Nat.add p.x) B))) ((Nat.add A) C)));$E=((Nat.mul Nat.3) A);$F=(Nat.square E);$F=(Nat.square E);$x=((ecdsa.sub F) ((Nat.mul Nat.2) D));$y=((ecdsa.sub ((Nat.mul E) ((ecdsa.sub D) x))) ((Nat.mul Nat.8) C));$z=(ecdsa.mod ((((Nat.mulVar Nat.3) Nat.2) p.y) p.z));(((Jacobian.new x) y) z))

Jacobian.add: ∀(:Jacobian) ∀(:Jacobian) Jacobian
  λp λq (<p λ Jacobian> λp.x λp.y λp.z ((<((Bool.or ((Nat.eql p.x) Nat.0)) ((Nat.eql p.y) Nat.0)) λ Jacobian> q) (<q λ Jacobian> λq.x λq.y λq.z ((<((Bool.or ((Nat.eql q.x) Nat.0)) ((Nat.eql q.y) Nat.0)) λ Jacobian> p) $p.z2=(Nat.square p.z);$q.z2=(Nat.square q.z);$U1=((Nat.mul p.x) q.z2);$U2=((Nat.mul q.x) p.z2);$S1=((((Nat.mulVar Nat.3) p.y) q.z) q.z2);$S2=((((Nat.mulVar Nat.3) q.y) p.z) p.z2);$H=((ecdsa.sub U2) U1);$r=((ecdsa.sub S2) S1);((<((Nat.eql H) Nat.0) λ Jacobian> ((<((Nat.eql r) Nat.0) λ Jacobian> (Jacobian.double p)) Jacobian.0)) $HH=(ecdsa.mod (Nat.square H));$HHH=(ecdsa.mod ((Nat.mul H) HH));$V=((Nat.mul U1) HH);$x=((ecdsa.sub ((ecdsa.sub (Nat.square r)) HHH)) ((Nat.mul Nat.2) V));$y=((ecdsa.sub ((Nat.mul r) ((ecdsa.sub V) x))) ((Nat.mul S1) HHH));$z=(ecdsa.mod ((((Nat.mulVar Nat.3) p.z) q.z) H));(((Jacobian.new x) y) z))))))

Jacobian.mul_unsafe: ∀(:Jacobian) ∀(:Nat) (Maybe Jacobian)
  λd λscalar $n=((Nat.mod scalar) CURVE.n);$res=(<(ecdsa.split_scalar n) λ Jacobian> λk1 λk2 (<(Int.toNat k1) λ Jacobian> λk1neg λk1 (<(Int.toNat k2) λ Jacobian> λk2neg λk2 (<(((((Jacobian.mul_unsafe_aux.tco d) Jacobian.0) Jacobian.0) k1) k2) λ Jacobian> λk1p λk2p $k1p=((<k1neg λ Jacobian> (Jacobian.negate k1p)) k1p);$k2p=((<k2neg λ Jacobian> (Jacobian.negate k2p)) k2p);$k2p=(<k2p λ Jacobian> λk2p.x λk2p.y λk2p.z (((Jacobian.new (ecdsa.mod ((Nat.mul k2p.x) CURVE.beta))) k2p.y) k2p.z));((Jacobian.add k1p) k2p)))));((<n λ (Maybe Jacobian)> <Maybe.none Jacobian>) λ (<Maybe.some Jacobian> res))

Jacobian.mul_unsafe_aux.tco: ∀(:Jacobian) ∀(:Jacobian) ∀(:Jacobian) ∀(:Nat) ∀(:Nat) ((Pair Jacobian) Jacobian)
  λd λk1p λk2p λk1 λk2 (((<((Bool.or ((Nat.gtn k1) Nat.0)) ((Nat.gtn k2) Nat.0)) λ ∀(:Unit) ((Pair Jacobian) Jacobian)> λ $k1p=((<(Nat.odd k1) λ Jacobian> ((Jacobian.add k1p) d)) k1p);$k2p=((<(Nat.odd k2) λ Jacobian> ((Jacobian.add k2p) d)) k2p);$d=(Jacobian.double d);$k1=((Nat.div k1) Nat.2);$k2=((Nat.div k2) Nat.2);(((((Jacobian.mul_unsafe_aux.tco d) k1p) k2p) k1) k2)) λ ((<<Pair.new Jacobian> Jacobian> k1p) k2p)) Unit.new)

Point.mul_unsafe: ∀(:Point) ∀(:Nat) (Maybe Point)
  λp λn ((<<Maybe.map Jacobian> Point> Jacobian.to_point) ((Jacobian.mul_unsafe (Jacobian.from_point p)) n))

Either.bind: Π(A:*) Π(B:*) Π(C:*) ∀(:((Either A) B)) ∀(:∀(:B) ((Either A) C)) ((Either A) C)
  ΛA ΛB ΛC λe λf ((<e λ ((Either A) C)> λval (<<Either.left A> C> val)) λval (f val))

Either: ∀(A:*) ∀(B:*) *
  λA λB Πeither(P:∀(:((Either A) B)) *) ∀(left:∀(x:A) (P (<<Either.left A> B> x))) ∀(right:∀(x:B) (P (<<Either.right A> B> x))) (P either)

Either.left: Π(A:*) Π(B:*) ∀(x:A) ((Either A) B)
  ΛA ΛB λx ΛP λleft λright (left x)

Either.right: Π(A:*) Π(B:*) ∀(x:B) ((Either A) B)
  ΛA ΛB λx ΛP λleft λright (right x)

Empty.absurd: ∀(x:Empty) ∀(P:*) P
  λx λP <x λ P>

Empty: *
  Πempty(P:∀(:Empty) *) (P empty)

Equal.apply: Π(A:*) Π(B:∀(:A) *) ∀(a:A) ∀(b:A) ∀(f:∀(x:A) (B x)) ∀(e:(((Equal A) a) b)) (((Equal (B a)) (f a)) ((<<<<Equal.rewrite A> b> a> B> (<<<Equal.mirror A> a> b> e)) (f b)))
  ΛA ΛB λa λb λf λe (<e λe.b λe (((Equal (B a)) (f a)) ((<<<<Equal.rewrite A> e.b> a> B> (<<<Equal.mirror A> a> e.b> e)) (f e.b)))> <<Equal.to (B a)> (f a)>)

Equal.apply_ind: Π(A:*) Π(B:*) ∀(a:A) ∀(b:A) ∀(f:∀(x:A) B) ∀(e:(((Equal A) a) b)) (((Equal B) (f a)) (f b))
  ΛA ΛB λa λb λf λe (<e λe.b λe (((Equal B) (f a)) (f e.b))> <<Equal.to B> (f a)>)

Equal.chain: Π(A:*) Π(a:A) Π(b:A) Π(c:A) ∀(d:(((Equal A) a) b)) ∀(e:(((Equal A) b) c)) (((Equal A) a) c)
  ΛA Λa Λb Λc λd λe (<e λe.b λc (((Equal A) a) e.b)> d)

Equal: ∀(A:*) ∀(:A) ∀(:A) *
  λA λa λb Πequal(P:∀(b:A) ∀(:(((Equal A) a) b)) *) ∀(to:((P a) <<Equal.to A> a>)) ((P b) equal)

Equal.mirror: Π(A:*) Π(a:A) Π(b:A) ∀(e:(((Equal A) a) b)) (((Equal A) b) a)
  ΛA Λa Λb λe (<e λb λ (((Equal A) b) a)> <<Equal.to A> a>)

Equal.rewrite: Π(A:*) Π(a:A) Π(b:A) Π(P:∀(:A) *) ∀(e:(((Equal A) a) b)) ∀(x:(P a)) (P b)
  ΛA Λa Λb ΛP λe λx (<e λb λa (P b)> x)

Equal.to: Π(A:*) Π(a:A) (((Equal A) a) a)
  ΛA Λa ΛP λto to

Example.nat: Nat
  ((Nat.mul Nat.10) Nat.10)

Example.tco: Nat
  $n10=Nat.10;$n100=((Nat.mul n10) n10);$n1k=((Nat.mul n10) n100);$n10k=((Nat.mul n10) n1k);$n100k=((Nat.mul n10) n10k);$n1m=((Nat.mul n10) n100k);$n10m=((Nat.mul n10) n1m);(Nat.sum n10m)

Example.u32_add: U32
  $num=(U32.inc (U32.inc U32.0));((U32.add num) num)

Exports.add: Π(A:*) ∀(x:A) ∀(xs:Exports) Exports
  ΛA λx λxs ΛP λnew λadd ((<add A> x) ((<xs P> new) add))

Exports.example: Exports
  ((<Exports.add Bool> Bool.true) ((<Exports.add Bool> Bool.false) ((<Exports.add ∀(:Bool) Bool> Bool.not) ((<Exports.add ∀(:Bool) ∀(:Bool) Bool> Bool.and) ((<Exports.add ∀(:Bool) ∀(:Bool) Bool> Bool.or) Exports.new)))))

Exports: *
  Π(P:*) ∀(new:P) ∀(add:Π(A:*) ∀(x:A) ∀(xs:P) P) P

Exports.new: Exports
  ΛP λnew λadd new

F64.0: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64.1: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64.160: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64.180: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64.2: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64.256: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64.3: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64.4: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64.5: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64.6: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64.Boundary: *
  Πboundary(P:∀(:F64.Boundary) *) ∀(new:∀(pts:(List F64.V3)) (P (F64.Boundary.new pts))) (P boundary)

F64.Boundary.new: ∀(:(List F64.V3)) F64.Boundary
  λpts ΛP λnew (new pts)

F64.Circle: *
  Πcircle(P:∀(:F64.Circle) *) ∀(new:∀(pos:F64.V3) ∀(rad:F64) (P ((F64.Circle.new pos) rad))) (P circle)

F64.Circle.new: ∀(:F64.V3) ∀(:F64) F64.Circle
  λpos λrad ΛP λnew ((new pos) rad)

F64.Line: *
  Πline(P:∀(:F64.Line) *) ∀(new:∀(pos:F64.V3) ∀(dir:F64.V3) (P ((F64.Line.new pos) dir))) (P line)

F64.Line.new: ∀(:F64.V3) ∀(:F64.V3) F64.Line
  λpos λdir ΛP λnew ((new pos) dir)

F64.Segment: *
  Πsegment(P:∀(:F64.Segment) *) ∀(new:∀(a:F64.V3) ∀(b:F64.V3) (P ((F64.Segment.new a) b))) (P segment)

F64.Segment.new: ∀(:F64.V3) ∀(:F64.V3) F64.Segment
  λa λb ΛP λnew ((new a) b)

F64.V3.add: ∀(:F64.V3) ∀(:F64.V3) F64.V3
  λa λb (<a λ F64.V3> λa.x λa.y λa.z (<b λ F64.V3> λb.x λb.y λb.z $c.x=((F64.add a.x) a.x);$c.y=((F64.add a.y) b.y);$c.z=((F64.add a.z) b.z);(((F64.V3.new c.x) c.y) c.z)))

F64.V3.circle_boundary_intersects: ∀(:F64.Circle) ∀(:F64.Boundary) F64
  λc λb (<c λ F64> λc.pos λc.rad (<b λ F64> λpts ((<pts λ F64> F64.0) λh0 λt0 ((<t0 λ F64> F64.0) λh1 λt1 $p0=h0;$p1=h1;$sg=((F64.Segment.new p0) p1);$cd=((F64.V3.point_segment_sqrdist c.pos) sg);$test=((F64.ltn cd) ((F64.mul cd) cd));((<test λ F64> F64.1) $boun=(F64.Boundary.new ((<List.cons F64.V3> h1) t1));((F64.V3.circle_boundary_intersects c) boun))))))

F64.V3.circle_line_intersection: ∀(:F64.Circle) ∀(:F64.Line) (Maybe ((Pair F64.V3) F64.V3))
  λc λl (<c λ (Maybe ((Pair F64.V3) F64.V3))> λc.pos λc.rad (<l λ (Maybe ((Pair F64.V3) F64.V3))> λl.pos λl.dir (<c.pos λ (Maybe ((Pair F64.V3) F64.V3))> λcx λcy λcz (<l.pos λ (Maybe ((Pair F64.V3) F64.V3))> λl.pos.x λl.pos.y λl.pos.z (<l.dir λ (Maybe ((Pair F64.V3) F64.V3))> λdx λdy λdz $x1=((F64.sub l.pos.x) cx);$y1=((F64.sub l.pos.y) cy);$x2=((F64.sub ((F64.add l.pos.x) dx)) cx);$y2=((F64.sub ((F64.add l.pos.y) dy)) cy);$dd=((F64.sub ((F64.mul x1) y2)) ((F64.mul x2) y1));$de=((F64.sub ((F64.mul c.rad) c.rad)) ((F64.mul dd) dd));((<((F64.lte de) F64.0) λ (Maybe ((Pair F64.V3) F64.V3))> <Maybe.none ((Pair F64.V3) F64.V3)>) $sx=(((<F64.if F64> (F64.from_bool ((F64.ltn dy) F64.0))) ((F64.sub F64.0) dx)) dx);$sy=(((<F64.if F64> (F64.from_bool ((F64.ltn dy) F64.0))) ((F64.sub F64.0) dy)) dy);$px=((F64.mul sx) (F64.sqrt de));$py=((F64.mul sy) (F64.sqrt de));$qx=((F64.mul dd) dy);$qy=((F64.mul ((F64.sub F64.0) dd)) dx);$ax=((F64.sub qx) px);$ay=((F64.sub qy) py);$bx=((F64.add qx) px);$by=((F64.add qy) py);$ux=((F64.add ax) cx);$uy=((F64.add ay) cy);$vx=((F64.add bx) cx);$vy=((F64.add by) cy);$fst_v=(((F64.V3.new ux) uy) F64.0);$snd_v=(((F64.V3.new vx) vy) F64.0);(<Maybe.some ((Pair F64.V3) F64.V3)> ((<<Pair.new F64.V3> F64.V3> fst_v) snd_v))))))))

F64.V3.circle_to_circle_hit_dist: ∀(:F64.Circle) ∀(:F64.V3) ∀(:F64.Circle) (Maybe F64)
  λa λd λb (<a λ (Maybe F64)> λa.pos λa.rad (<b λ (Maybe F64)> λb.pos λb.rad $r=a.rad;$c=((F64.Circle.new b.pos) ((F64.add a.rad) b.rad));$l=((F64.Line.new a.pos) (F64.V3.norm d));$p=((F64.V3.circle_line_intersection c) l);((<p λ (Maybe F64)> <Maybe.none F64>) λsome_pair (<some_pair λ (Maybe F64)> λfst λsnd $d0=((F64.V3.sqr_dist a.pos) fst);$d1=((F64.V3.sqr_dist a.pos) snd);$hp=(((<F64.if F64.V3> (F64.from_bool ((F64.ltn d0) d1))) fst) snd);$dt=((F64.V3.dot d) ((F64.V3.sub hp) a.pos));$ds=((F64.V3.sqr_dist hp) a.pos);$cmp_res=(F64.from_bool ((F64.gtn dt) F64.0));(((<F64.if (Maybe F64)> cmp_res) (<Maybe.some F64> (F64.sqrt ds))) <Maybe.none F64>)))))

F64.V3.dist: ∀(:F64.V3) ∀(:F64.V3) F64
  λa λb (F64.sqrt ((F64.V3.sqr_dist a) b))

F64.V3.dot: ∀(:F64.V3) ∀(:F64.V3) F64
  λa λb (<a λ F64> λa.x λa.y λa.z (<b λ F64> λb.x λb.y λb.z $res=F64.0;$res=((F64.add res) ((F64.mul a.x) b.x));$res=((F64.add res) ((F64.mul a.y) b.y));$res=((F64.add res) ((F64.mul a.z) b.z));res))

F64.V3.eql: ∀(:F64.V3) ∀(:F64.V3) Bool
  λa λb (<a λ Bool> λa.x λa.y λa.z (<b λ Bool> λb.x λb.y λb.z $same_x=((F64.eql a.x) b.x);$same_y=((F64.eql a.y) b.y);$same_z=((F64.eql a.z) b.z);((Bool.and same_x) ((Bool.and same_y) same_z))))

F64.V3: *
  Πv3(P:∀(:F64.V3) *) ∀(new:∀(x:F64) ∀(y:F64) ∀(z:F64) (P (((F64.V3.new x) y) z))) (P v3)

F64.V3.get_x: ∀(:F64.V3) F64
  λv (<v λ F64> λv.x λv.y λv.z v.x)

F64.V3.get_y: ∀(:F64.V3) F64
  λv (<v λ F64> λv.x λv.y λv.z v.y)

F64.V3.get_z: ∀(:F64.V3) F64
  λv (<v λ F64> λv.x λv.y λv.z v.z)

F64.V3.len: ∀(:F64.V3) F64
  λv (<v λ F64> λv.x λv.y λv.z $sqr=F64.0;$sqr=((F64.add sqr) ((F64.mul v.x) v.x));$sqr=((F64.add sqr) ((F64.mul v.y) v.y));$sqr=((F64.add sqr) ((F64.mul v.z) v.z));$expo=((F64.div F64.1) ((F64.add F64.1) F64.1));$sqr=((F64.pow sqr) expo);sqr)

F64.V3.look_at: ∀(:F64.V3) ∀(:F64.V3) ∀(:F64.V3) F64.V3
  λa λb λc (<a λ F64.V3> λa.x λa.y λa.z (<b λ F64.V3> λa.x λa.y λa.z (<c λ F64.V3> λa.x λa.y λa.z $a_eql_b=((F64.V3.eql a) b);$diff=((F64.V3.sub b) a);$normdiff=(F64.V3.norm diff);((<a_eql_b λ F64.V3> normdiff) c))))

F64.V3.ltn: ∀(:F64.V3) ∀(:F64.V3) Bool
  λa λb $len_a=(F64.V3.len a);$len_b=(F64.V3.len b);(((<Bool.if Bool> ((F64.ltn len_a) len_b)) Bool.true) Bool.false)

F64.V3.map: ∀(:∀(:F64) F64) ∀(:F64.V3) F64.V3
  λfn λv (<v λ F64.V3> λv.x λv.y λv.z (((F64.V3.new (fn v.x)) (fn v.y)) (fn v.z)))

F64.V3.map_x: ∀(:∀(:F64) F64) ∀(:F64.V3) F64.V3
  λfn λv (<v λ F64.V3> λv.x λv.y λv.z (((F64.V3.new (fn v.x)) v.y) v.z))

F64.V3.map_y: ∀(:∀(:F64) F64) ∀(:F64.V3) F64.V3
  λfn λv (<v λ F64.V3> λv.x λv.y λv.z (((F64.V3.new v.x) (fn v.y)) v.z))

F64.V3.map_z: ∀(:∀(:F64) F64) ∀(:F64.V3) F64.V3
  λfn λv (<v λ F64.V3> λv.x λv.y λv.z (((F64.V3.new v.x) v.y) (fn v.z)))

F64.V3.mul: ∀(:F64.V3) ∀(:F64.V3) F64.V3
  λa λb (<a λ F64.V3> λa.x λa.y λa.z (<b λ F64.V3> λb.x λb.y λb.z $c.x=((F64.mul a.x) a.x);$c.y=((F64.mul a.y) b.y);$c.z=((F64.mul a.z) b.z);(((F64.V3.new c.x) c.y) c.z)))

F64.V3.new: ∀(:F64) ∀(:F64) ∀(:F64) F64.V3
  λx λy λz ΛP λnew (((new x) y) z)

F64.V3.norm: ∀(:F64.V3) F64.V3
  λv (<v λ F64.V3> λv.x λv.y λv.z $len=(F64.V3.len v);$new_x=((F64.div v.x) len);$new_y=((F64.div v.y) len);$new_z=((F64.div v.z) len);(((F64.V3.new new_x) new_y) new_z))

F64.V3.point_segment_dist: ∀(:F64.V3) ∀(:F64.Segment) F64
  λp λs (F64.sqrt ((F64.V3.point_segment_sqrdist p) s))

F64.V3.point_segment_sqrdist: ∀(:F64.V3) ∀(:F64.Segment) F64
  λp λs (<p λ F64> λp.x λp.y λp.z (<s λ F64> λa λb (<a λ F64> λa.x λa.y λa.z (<b λ F64> λb.x λb.y λb.z $ab_x_diff_sqrd=((F64.pow ((F64.sub a.x) b.x)) F64.2);$ab_y_diff_sqrd=((F64.pow ((F64.sub a.y) b.y)) F64.2);$pa_x_diff=((F64.sub p.x) a.x);$pa_y_diff=((F64.sub p.y) a.y);$ba_x_diff=((F64.sub b.x) a.x);$ba_y_diff=((F64.sub b.y) a.y);$l=((F64.add ab_x_diff_sqrd) ab_y_diff_sqrd);$t=((F64.add ((F64.mul pa_x_diff) ba_x_diff)) ((F64.mul pa_y_diff) ba_y_diff));$t=((F64.div t) l);$t=((F64.max F64.0) ((F64.min F64.1) t));$d=F64.0;$t_times_ba_x_diff=((F64.mul t) ba_x_diff);$t_times_ba_y_diff=((F64.mul t) ba_y_diff);$k=((F64.pow ((F64.sub p.x) ((F64.add a.x) t_times_ba_x_diff))) F64.2);$d=((F64.add d) k);$k=((F64.pow ((F64.sub p.y) ((F64.add a.y) t_times_ba_y_diff))) F64.2);$d=((F64.add d) k);d))))

F64.V3.polygon_to_segments.cons: ∀(:F64.V3) ∀(:F64.V3) ∀(:F64.V3) ∀(:∀(:(Maybe F64.V3)) ∀(:(Maybe F64.V3)) (List F64.Segment)) ∀(:(Maybe F64.V3)) ∀(:(Maybe F64.V3)) (List F64.Segment)
  λpos λdir λpt_b λsegs λpt_a λpt_0 ((<pt_a λ (List F64.Segment)> ((segs (<Maybe.some F64.V3> pt_b)) (<Maybe.some F64.V3> pt_b))) λpt_a.value $pt_0=((<pt_0 λ (Maybe F64.V3)> (<Maybe.some F64.V3> pt_b)) λpt_0.value pt_0);$p0=(((F64.V3.polygon_to_segments.transform pos) dir) pt_a.value);$p1=(((F64.V3.polygon_to_segments.transform pos) dir) pt_b);$sg=((F64.Segment.new p0) p1);((<List.cons F64.Segment> sg) ((segs (<Maybe.some F64.V3> pt_b)) pt_0)))

F64.V3.polygon_to_segments: ∀(:F64.V3) ∀(:F64.V3) ∀(:(List F64.V3)) (List F64.Segment)
  λpos λdir λpts (((((<<List.fold F64.V3> ∀(:(Maybe F64.V3)) ∀(:(Maybe F64.V3)) (List F64.Segment)> ((F64.V3.polygon_to_segments.nil pos) dir)) ((F64.V3.polygon_to_segments.cons pos) dir)) pts) <Maybe.none F64.V3>) <Maybe.none F64.V3>)

F64.V3.polygon_to_segments.nil: ∀(:F64.V3) ∀(:F64.V3) ∀(:(Maybe F64.V3)) ∀(:(Maybe F64.V3)) (List F64.Segment)
  λpos λdir λpt_a λpt_0 ((<pt_0 λ (List F64.Segment)> <List.nil F64.Segment>) λpt_0.value ((<pt_a λ (List F64.Segment)> <List.nil F64.Segment>) λpt_a.value $p0=(((F64.V3.polygon_to_segments.transform pos) dir) pt_a.value);$p1=(((F64.V3.polygon_to_segments.transform pos) dir) pt_0.value);$sg=((F64.Segment.new p0) p1);((<List.cons F64.Segment> sg) <List.nil F64.Segment>)))

F64.V3.polygon_to_segments.transform: ∀(:F64.V3) ∀(:F64.V3) ∀(:F64.V3) F64.V3
  λpos λdir λpnt (<pnt λ F64.V3> λpnt.x λpnt.y λpnt.z (<dir λ F64.V3> λdir.x λdir.y λdir.z $a=((F64.atan dir.y) dir.x);$pnt_x_times_cos_a=((F64.mul pnt.x) (F64.cos a));$pnt_y_times_sin_a=((F64.mul pnt.y) (F64.sin a));$pnt_x_times_sin_a=((F64.mul pnt.x) (F64.sin a));$pnt_y_times_cos_a=((F64.mul pnt.y) (F64.cos a));$x=((F64.sub pnt_x_times_cos_a) pnt_y_times_sin_a);$y=((F64.add pnt_x_times_sin_a) pnt_y_times_cos_a);((F64.V3.add pos) (((F64.V3.new x) y) pnt.z))))

F64.V3.rot_90: ∀(:F64.V3) F64.V3
  λv (<v λ F64.V3> λv.x λv.y λv.z (((F64.V3.new v.y) ((F64.sub F64.0) v.x)) v.z))

F64.V3.rotate: ∀(:F64) ∀(:F64.V3) ∀(:F64.V3) F64.V3
  λa λv λp (<v λ F64.V3> λv.x λv.y λv.z (<p λ F64.V3> λp.x λp.y λp.z $rad=((F64.mul a) ((F64.div F64.pi) F64.180));$sin=(F64.sin rad);$cos=(F64.cos rad);$x_diff=((F64.sub v.x) p.x);$y_diff=((F64.sub v.y) p.y);$x_diff_times_cos=((F64.mul x_diff) cos);$x_diff_times_sin=((F64.mul x_diff) sin);$y_diff_times_cos=((F64.mul y_diff) cos);$y_diff_times_sin=((F64.mul y_diff) sin);$new_x=((F64.sub ((F64.add p.x) x_diff_times_cos)) y_diff_times_sin);$new_y=((F64.add ((F64.add p.y) x_diff_times_sin)) y_diff_times_cos);(((F64.V3.new new_x) new_y) v.z)))

F64.V3.scale: ∀(:F64) ∀(:F64.V3) F64.V3
  λk λv (<v λ F64.V3> λv.x λv.y λv.z $new_x=((F64.mul k) v.x);$new_y=((F64.mul k) v.y);$new_z=((F64.mul k) v.z);(((F64.V3.new new_x) new_y) new_z))

F64.V3.sqr_dist: ∀(:F64.V3) ∀(:F64.V3) F64
  λa λb (<a λ F64> λa.x λa.y λa.z (<b λ F64> λb.x λb.y λb.z $two=((F64.add F64.1) F64.1);$x_diff=((F64.pow ((F64.sub a.x) b.x)) two);$y_diff=((F64.pow ((F64.sub a.y) b.y)) two);$z_diff=((F64.pow ((F64.sub a.z) b.z)) two);((F64.add x_diff) ((F64.add y_diff) z_diff))))

F64.V3.sub: ∀(:F64.V3) ∀(:F64.V3) F64.V3
  λa λb (<a λ F64.V3> λa.x λa.y λa.z (<b λ F64.V3> λb.x λb.y λb.z $c.x=((F64.sub a.x) a.x);$c.y=((F64.sub a.y) b.y);$c.z=((F64.sub a.z) b.z);(((F64.V3.new c.x) c.y) c.z)))

F64._1: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64._160: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64._256: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64.acos: ∀(:F64) F64
  F64.acos

F64.add: ∀(:F64) ∀(:F64) F64
  F64.add

F64.asin: ∀(:F64) F64
  F64.asin

F64.atan: ∀(:F64) ∀(:F64) F64
  F64.atan

F64.cmp: ∀(:F64) ∀(:F64) Cmp
  λa λb (<a λ Cmp> λa.word (<b λ Cmp> λb.word ((<((F64.eql a) b) λ Cmp> Cmp.eql) ((<((<Word.ltn Nat.64> a.word) b.word) λ Cmp> Cmp.ltn) Cmp.gtn))))

F64.cos: ∀(:F64) F64
  F64.cos

F64.div: ∀(:F64) ∀(:F64) F64
  F64.div

F64.eql: ∀(:F64) ∀(:F64) Bool
  λx λy (<x λ Bool> λx.word (<y λ Bool> λy.word ((<Word.eql Nat.64> x.word) y.word)))

F64.exp: ∀(:F64) ∀(:F64) F64
  F64.exp

F64.floor: ∀(:F64) F64
  λx $ltn_zero=(((<F64.if F64> (F64.from_bool ((F64.ltn x) F64.0))) F64.1) F64.0);((F64.sub ((F64.sub x) ((F64.mod x) F64.1))) ltn_zero)

F64: *
  Πf64(P:∀(:F64) *) ∀(new:∀(a:(Word Nat.64)) (P (F64.new a))) (P f64)

F64.from_bool: ∀(:Bool) F64
  λb ((<b λ F64> F64.1) F64.0)

F64.gte: ∀(:F64) ∀(:F64) Bool
  λa λb (((<((F64.cmp a) b) λ Bool> Bool.false) Bool.true) Bool.true)

F64.gtn: ∀(:F64) ∀(:F64) Bool
  λa λb (((<((F64.cmp a) b) λ Bool> Bool.false) Bool.false) Bool.true)

F64.if: Π(A:*) ∀(x:F64) ∀(ct:A) ∀(cf:A) A
  ΛA λx λct λcf $bool=((F64.eql x) F64.0);((<bool λ A> cf) ct)

F64.is_between: ∀(:F64) ∀(:F64) ∀(:F64) Bool
  λa λb λx $a_eql_x=((F64.eql a) x);$a_ltn_x=((F64.ltn a) x);$x_ltn_b=((F64.ltn x) b);((Bool.or a_eql_x) ((Bool.and a_ltn_x) x_ltn_b))

F64.log: ∀(:F64) F64
  F64.log

F64.lte: ∀(:F64) ∀(:F64) Bool
  λa λb (((<((F64.cmp a) b) λ Bool> Bool.true) Bool.true) Bool.false)

F64.ltn: ∀(:F64) ∀(:F64) Bool
  λa λb (((<((F64.cmp a) b) λ Bool> Bool.true) Bool.false) Bool.false)

F64.max: ∀(:F64) ∀(:F64) F64
  F64.max

F64.min: ∀(:F64) ∀(:F64) F64
  F64.min

F64.mod: ∀(:F64) ∀(:F64) F64
  F64.mod

F64.mul: ∀(:F64) ∀(:F64) F64
  F64.mul

F64.new: ∀(:(Word Nat.64)) F64
  λa Λ λf64 (f64 a)

F64.parse_binary: ∀(:String) F64
  λstr (F64.new ((Word.from_bits Nat.64) (Bits.from_string str)))

F64.pi: F64
  (F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

F64.pow: ∀(:F64) ∀(:F64) F64
  F64.pow

F64.sin: ∀(:F64) F64
  F64.sin

F64.sqrt: ∀(:F64) F64
  λn ((F64.pow n) ((F64.div F64.1) F64.2))

F64.sub: ∀(:F64) ∀(:F64) F64
  F64.sub

F64.tan: ∀(:F64) F64
  F64.tan

Function.call: Π(A:*) Π(B:*) ∀(x:A) ∀(f:∀(:A) B) B
  ΛA ΛB λx λf (f x)

Function.comp: Π(A:*) Π(B:*) Π(C:∀(:B) *) ∀(g:∀(b:B) (C b)) ∀(f:∀(:A) B) ∀(x:A) (C (f x))
  ΛA ΛB ΛC λg λf λx (g (f x))

Function.const: Π(A:*) ∀(x:A) ∀(y:A) A
  ΛA λx λy x

Function.curry: Π(A:*) Π(B:*) Π(C:*) ∀(f:∀(:((Pair A) B)) C) ∀(x:A) ∀(y:B) C
  ΛA ΛB ΛC λf λx λy (f ((<<Pair.new A> B> x) y))

Function.flip: Π(A:*) Π(B:*) Π(C:*) ∀(f:∀(:A) ∀(:B) C) ∀(y:B) ∀(x:A) C
  ΛA ΛB ΛC λf λy λx ((f x) y)

Function: ∀(A:*) ∀(B:∀(:A) *) *
  λA λB ∀(x:A) (B x)

Function.id: Π(A:*) ∀(x:A) A
  ΛA λx x

Function.pipe: Π(A:*) Π(B:*) ∀(x:A) ∀(f:∀(:A) B) B
  ΛA ΛB λx λf (f x)

Function.uncurry: Π(A:*) Π(B:*) Π(C:*) ∀(f:∀(:A) ∀(:B) C) ∀(p:((Pair A) B)) C
  ΛA ΛB ΛC λf λp (<p λ C> λp.fst λp.snd ((f p.fst) p.snd))

IO.end: Π(A:*) ∀(:A) (IO A)
  ΛA λx ΛP λend λ λ (end x)

IO: ∀(:*) *
  λA Πio(P:∀(:(IO A)) *) ∀(end:∀(val:A) (P (<IO.end A> val))) ∀(log:∀(str:String) ∀(nxt:∀(:Unit) (IO A)) (P ((<IO.log A> str) nxt))) ∀(inp:∀(nxt:∀(:String) (IO A)) (P (<IO.inp A> nxt))) (P io)

IO.inp: Π(A:*) ∀(:∀(:String) (IO A)) (IO A)
  ΛA λnxt ΛP λ λ λinp (inp nxt)

IO.log: Π(A:*) ∀(:String) ∀(:∀(:Unit) (IO A)) (IO A)
  ΛA λstr λnxt ΛP λ λlog λ ((log str) nxt)

Int: *
  Πint(P:∀(:Int) *) ∀(new:∀(x:Nat) ∀(y:Nat) (P ((Int.new x) y))) (P int)

Int.new: ∀(:Nat) ∀(:Nat) Int
  λx λy ΛP λnew ((<x λx (P ((Int.new x) y))> ((new Nat.zero) y)) λx.pred ((<y λy (P ((Int.new (Nat.succ x.pred)) y))> ((new (Nat.succ x.pred)) Nat.zero)) λy.pred (<((Int.new ((Nat.sub x.pred) y.pred)) ((Nat.sub y.pred) x.pred)) P> new)))

Int.fromNat: ∀(:Nat) Int
  λn ((Int.new n) Nat.0)

Int.toNat: ∀(:Int) ((Pair Bool) Nat)
  λa (<a λ ((Pair Bool) Nat)> λa.x λa.y ((<a.y λ ((Pair Bool) Nat)> ((<<Pair.new Bool> Nat> Bool.false) a.x)) λ ((<<Pair.new Bool> Nat> Bool.true) a.y)))

Int.0: Int
  (Int.fromNat Nat.0)

Int.1: Int
  (Int.fromNat Nat.1)

Int.add: ∀(:Int) ∀(:Int) Int
  λa λb (<a λ Int> λa.x λa.y (<b λ Int> λb.x λb.y ((Int.new ((Nat.add a.x) b.x)) ((Nat.add a.y) b.y))))

Int.neg: ∀(:Int) Int
  λa (<a λ Int> λa.x λa.y ((Int.new a.y) a.x))

Int.sub: ∀(:Int) ∀(:Int) Int
  λa λb ((Int.add a) (Int.neg b))

Int.mul: ∀(:Int) ∀(:Int) Int
  λa λb (<a λ Int> λa.x λa.y (<b λ Int> λb.x λb.y ((Int.new ((Nat.add ((Nat.mul a.x) b.x)) ((Nat.mul a.y) b.y))) ((Nat.add ((Nat.mul a.x) b.y)) ((Nat.mul a.y) b.x)))))

Int.div_Nat: ∀(:Int) ∀(:Nat) Int
  λa λn (<a λ Int> λa.x λa.y ((Int.new ((Nat.div a.x) n)) ((Nat.div a.y) n)))

Int.mod_Nat: ∀(:Int) ∀(:Nat) Nat
  λa λn (<a λ Nat> λa.x λa.y $b=((Nat.mod a.y) n);$sum=((Nat.add a.x) ((Nat.sub n) b));((Nat.mod sum) n))

Int.cmp: ∀(:Int) ∀(:Int) Cmp
  λa λb (<a λ Cmp> λa.x λa.y (<b λ Cmp> λb.x λb.y ((Nat.cmp ((Nat.add a.x) b.y)) ((Nat.add b.x) a.y))))

Int.parse_decimal: ∀(:String) Int
  λstr ((<str λ Int> Int.0) λstr.head λstr.tail ((<((U16.eql str.head) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) String.nil))) λ Int> ((Int.new Nat.0) (Nat.parse_decimal str.tail))) ((Int.new (Nat.parse_decimal ((String.cons str.head) str.tail))) Nat.0)))

Int.parse_hex: ∀(:String) Int
  λstr ((<str λ Int> Int.0) λstr.head λstr.tail ((<((U16.eql str.head) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) String.nil))) λ Int> ((Int.new Nat.0) (Nat.parse_hex str.tail))) ((Int.new (Nat.parse_hex ((String.cons str.head) str.tail))) Nat.0)))

Int.to_string_decimal: ∀(:Int) String
  λa (<a λ String> λa.x λa.y ((<a.y λ String> (Nat.to_string_decimal a.x)) λ ((String.cons (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) String.nil))) (Nat.to_string_decimal a.y))))

JSON.array: ∀(:(List JSON)) JSON
  λx ΛP λ λ λ λ λarray λ (array x)

JSON.bool: ∀(:Bool) JSON
  λx ΛP λ λbool λ λ λ λ (bool x)

JSON: *
  Πjson(P:∀(:JSON) *) ∀(null:(P JSON.null)) ∀(bool:∀(x:Bool) (P (JSON.bool x))) ∀(number:∀(x:F64) (P (JSON.number x))) ∀(string:∀(x:String) (P (JSON.string x))) ∀(array:∀(x:(List JSON)) (P (JSON.array x))) ∀(object:∀(x:(List ((Pair String) JSON))) (P (JSON.object x))) (P json)

JSON.null: JSON
  ΛP λnull λ λ λ λ λ null

JSON.number: ∀(:F64) JSON
  λx ΛP λ λ λnumber λ λ λ (number x)

JSON.object: ∀(:(List ((Pair String) JSON))) JSON
  λx ΛP λ λ λ λ λ λobject (object x)

JSON.string: ∀(:String) JSON
  λx ΛP λ λ λ λstring λ λ (string x)

Lang.Cont: *
  ∀(:Core.Ctx) Core

Lang.all: (Parser ∀(:Core.Ctx) Core)
  $C=∀(:Core.Ctx) Core;((<<Parser.bind String> C> (Lang.nam Bool.true)) λself ((<<Parser.bind ((Pair Bool) ((Pair String) C))> C> (<Lang.enclose ((Pair String) C)> ((<<Parser.bind String> ((Pair String) C)> (Lang.nam Bool.true)) λn ((<<Parser.then Unit> ((Pair String) C)> Lang.space) ((<<Parser.then String> ((Pair String) C)> (Lang.symbol ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) String.nil))) ((<<Parser.bind C> ((Pair String) C)> Lang.trm) λt (<Parser.pure ((Pair String) C)> ((<<Pair.new String> C> n) t)))))))) λx (<x λ (Parser C)> λeras λp (<p λ (Parser C)> λname λbind ((<<Parser.then Unit> C> Lang.space) ((<<Parser.then String> C> (Lang.symbol ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil)))) ((<<Parser.bind C> C> Lang.trm) λbody (<Parser.pure C> λctx $tbind=(bind ctx);$tbody=:∀(:Core) ∀(:Core) Core λs λx (body (((Core.Ctx.ext name) x) (((Core.Ctx.ext self) s) ctx)));(((((Core.all eras) self) name) tbind) tbody)))))))))

Lang.ann: ∀(:∀(:Core.Ctx) Core) (Parser ∀(:Core.Ctx) Core)
  $C=∀(:Core.Ctx) Core;λexpr ((<<Parser.then Unit> C> Lang.space) ((<<Parser.then String> C> (Lang.symbol ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) String.nil)))) ((<<Parser.bind C> C> Lang.trm) λtype (<Parser.pure C> λctx (((Core.ann Bool.false) (expr ctx)) (type ctx))))))

Lang.app: ∀(:∀(:Core.Ctx) Core) (Parser ∀(:Core.Ctx) Core)
  $C=∀(:Core.Ctx) Core;λfunc ((<<Parser.bind ((Pair Bool) C)> C> (<Lang.enclose C> Lang.trm)) λx (<x λ (Parser C)> λeras λargm (<Parser.pure C> λctx (((Core.app eras) (func ctx)) (argm ctx)))))

Lang.arr: ∀(:∀(:Core.Ctx) Core) (Parser ∀(:Core.Ctx) Core)
  $C=∀(:Core.Ctx) Core;λbind ((<<Parser.then Unit> C> Lang.space) ((<<Parser.then String> C> (Lang.symbol ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil)))) ((<<Parser.bind C> C> Lang.trm) λbody (<Parser.pure C> λctx $tbind=(bind ctx);$tbody=:∀(:Core) ∀(:Core) Core λs λx (body (((Core.Ctx.ext String.nil) x) (((Core.Ctx.ext String.nil) s) ctx)));(((((Core.all Bool.false) String.nil) String.nil) tbind) tbody)))))

Lang.block_comment: (Parser Unit)
  ((<<Parser.then String> Unit> (Parser.tokens ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) String.nil))) ((<<Parser.then (List Char)> Unit> ((<<Parser.many_till Char> String> Parser.any_char) (Parser.tokens ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) String.nil)))) (<Parser.pure Unit> Unit.new)))

Lang.core: (Parser Core)
  $C=∀(:Core.Ctx) Core;((<<Parser.bind C> Core> Lang.trm) λterm (<Parser.pure Core> (term Core.Ctx.nil)))

Lang.enclose: Π(A:*) ∀(:(Parser A)) (Parser ((Pair Bool) A))
  ΛA λp ((<<Parser.bind Bool> ((Pair Bool) A)> Lang.open) λeras ((<<Parser.bind A> ((Pair Bool) A)> p) λx ((<<Parser.then String> ((Pair Bool) A)> ((<eras λ (Parser String)> (Parser.tokens ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))) (Parser.tokens ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil)))) (<Parser.pure ((Pair Bool) A)> ((<<Pair.new Bool> A> eras) x)))))

Lang.is_name: ∀(:Char) Bool
  λc $num=((Bool.and ((U16.gte c) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))) ((U16.lte c) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil))));$low=((Bool.and ((U16.gte c) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) String.nil)))) ((U16.lte c) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) String.nil))));$upp=((Bool.and ((U16.gte c) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) String.nil)))) ((U16.lte c) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) String.nil))));$und=((U16.eql c) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1)) String.nil)));((Bool.or num) ((Bool.or low) ((Bool.or upp) und)))

Lang.is_space: ∀(:Char) Bool
  λc $spc=((U16.eql c) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)));$lin=((U16.eql c) Char.newline);$tab=((U16.eql c) Char.tab);((Bool.or spc) ((Bool.or lin) tab))

Lang.lam: (Parser ∀(:Core.Ctx) Core)
  $C=∀(:Core.Ctx) Core;((<<Parser.bind ((Pair Bool) String)> C> (<Lang.enclose String> (Lang.nam Bool.true))) λx (<x λ (Parser C)> λeras λn ((<<Parser.then Unit> C> Lang.space) ((<<Parser.bind C> C> Lang.trm) λbody (<Parser.pure C> λctx $tbody=:∀(:Core) Core λx (body (((Core.Ctx.ext n) x) ctx));(((Core.lam eras) n) tbody))))))

Lang.let: (Parser ∀(:Core.Ctx) Core)
  $C=∀(:Core.Ctx) Core;((<<Parser.then String> C> (Lang.symbol ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) String.nil))))) ((<<Parser.bind String> C> (Lang.nam Bool.false)) λname ((<<Parser.then Unit> C> Lang.space) ((<<Parser.then String> C> (Lang.symbol ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1)) String.nil))) ((<<Parser.bind C> C> Lang.trm) λexpr ((<<Parser.then Unit> C> Lang.space) ((<<Parser.then (Maybe String)> C> (<Parser.optional String> (Lang.symbol ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) String.nil)))) ((<<Parser.bind C> C> Lang.trm) λbody (<Parser.pure C> λctx $tbody=:∀(:Core) Core λx (body (((Core.Ctx.ext name) x) ctx));(((Core.let name) (expr ctx)) tbody))))))))))

Lang.line_comment: (Parser Unit)
  $not_newline=:∀(:Char) Bool λc (Bool.not ((U16.eql c) Char.newline));((<<Parser.then String> Unit> (Parser.tokens ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) String.nil))) ((<<Parser.then String> Unit> (Parser.take_while not_newline)) ((<<Parser.then Char> Unit> (Parser.char Char.newline)) (<Parser.pure Unit> Unit.new))))

Lang.nam: ∀(:Bool) (Parser String)
  λallow_empty ((<allow_empty λ (Parser String)> (Parser.take_while Lang.is_name)) ((Parser.take_while1 ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) String.nil))))) Lang.is_name))

Lang.open: (Parser Bool)
  ((<Parser.plus Bool> ((<<Parser.then String> Bool> (Lang.symbol ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil))) (<Parser.pure Bool> Bool.false))) ((<<Parser.then String> Bool> (Lang.symbol ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) String.nil))) (<Parser.pure Bool> Bool.true)))

Lang.par: (Parser ∀(:Core.Ctx) Core)
  $C=∀(:Core.Ctx) Core;((<<Parser.then String> C> (Lang.symbol ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil))) ((<<Parser.bind C> C> Lang.trm) λterm ((<<Parser.then Unit> C> Lang.space) ((<<Parser.then String> C> (Parser.tokens ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil))) (<Parser.pure C> term)))))

Lang.parse: ∀(s:String) ((Parser.type Core) ((<Parser.run_default Core> Lang.core) s))
  λs ((<Parser.parse Core> Lang.core) s)

Lang.pip: ∀(:∀(:Core.Ctx) Core) (Parser ∀(:Core.Ctx) Core)
  $C=∀(:Core.Ctx) Core;λfunc ((<<Parser.then Unit> C> Lang.space) ((<<Parser.then String> C> (Lang.symbol ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) String.nil))) ((<<Parser.bind C> C> Lang.trm) λargm ((<<Parser.then Unit> C> Lang.space) ((<<Parser.then String> C> (Parser.tokens ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) String.nil))) (<Parser.pure C> λctx (((Core.app Bool.false) (func ctx)) (argm ctx))))))))

Lang.pst: ∀(:∀(:Core.Ctx) Core) (Parser ∀(:Core.Ctx) Core)
  $C=∀(:Core.Ctx) Core;λbase ((<<Parser.bind (Maybe C)> C> (<Parser.optional C> (<Parser.choice C> ((<List.cons (Parser C)> (Lang.app base)) ((<List.cons (Parser C)> (Lang.pip base)) ((<List.cons (Parser C)> (Lang.arr base)) ((<List.cons (Parser C)> (Lang.ann base)) <List.nil (Parser C)>))))))) λmaybe_term ((<maybe_term λ (Parser C)> (<Parser.pure C> base)) λpost (Lang.pst post)))

Lang.space: (Parser Unit)
  (<Parser.skip_many Unit> (<Parser.choice Unit> ((<List.cons (Parser Unit)> Lang.whitespace) ((<List.cons (Parser Unit)> Lang.line_comment) ((<List.cons (Parser Unit)> Lang.block_comment) <List.nil (Parser Unit)>)))))

Lang.symbol: ∀(:String) (Parser String)
  λstr ((<<Parser.bind String> String> (Parser.tokens str)) λx ((<<Parser.then Unit> String> Lang.space) (<Parser.pure String> x)))

Lang.test: String
  ((<((<Parser.run_either Core> Lang.core) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil))))))))))))) λ String> λe (Parser.Error.show e)) λx (Core.stringify x))

Lang.trm: (Parser ∀(:Core.Ctx) Core)
  $C=∀(:Core.Ctx) Core;((<<Parser.bind C> C> (<Parser.choice C> ((<List.cons (Parser C)> (<Parser.try C> Lang.all)) ((<List.cons (Parser C)> (<Parser.try C> Lang.lam)) ((<List.cons (Parser C)> (<Parser.try C> Lang.par)) ((<List.cons (Parser C)> Lang.let) ((<List.cons (Parser C)> Lang.typ) ((<List.cons (Parser C)> Lang.var) <List.nil (Parser C)>)))))))) λx (Lang.pst x))

Lang.typ: (Parser ∀(:Core.Ctx) Core)
  ((<<Parser.then String> ∀(:Core.Ctx) Core> (Parser.tokens ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) String.nil)))))) (<Parser.pure ∀(:Core.Ctx) Core> λctx Core.typ))

Lang.var: (Parser ∀(:Core.Ctx) Core)
  ((<<Parser.bind String> ∀(:Core.Ctx) Core> (Lang.nam Bool.false)) λname (<Parser.pure ∀(:Core.Ctx) Core> λctx $got=((<List.ifind ((Pair String) Core)> ctx) λx λi ((String.eql (<<Pair.fst String> Core> x)) name));((<got λ Core> (Core.ref name)) λx (<x λ Core> λval λ (<<Pair.snd String> Core> val)))))

Lang.whitespace: (Parser Unit)
  ((<<Parser.then String> Unit> ((Parser.take_while1 ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) String.nil))))))))))) Lang.is_space)) (<Parser.pure Unit> Unit.new))

List.all: Π(A:*) ∀(:∀(:A) Bool) ∀(:(List A)) Bool
  ΛA λcond λlist ((<list λ Bool> Bool.true) λhead λtail ((<(cond head) λ Bool> ((<List.all A> cond) tail)) Bool.false))

List.all_true: ∀(:(List Bool)) Bool
  λlist ((<List.all Bool> λx x) list)

List.any: Π(A:*) ∀(:∀(:A) Bool) ∀(:(List A)) Bool
  ΛA λcond λlist ((<list λ Bool> Bool.false) λhead λtail ((<(cond head) λ Bool> Bool.true) ((<List.any A> cond) tail)))

List.any_true: ∀(:(List Bool)) Bool
  λlist ((<List.any Bool> λx x) list)

List.append: Π(A:*) ∀(:(List A)) ∀(:A) (List A)
  ΛA λas λa ((<as λ (List A)> (<List.single A> a)) λhead λtail ((<List.cons A> head) ((<List.append A> tail) a)))

List.at: Π(A:*) ∀(:(List A)) ∀(:Nat) (Maybe A)
  ΛA λlist λindx ((<list λ (Maybe A)> <Maybe.none A>) λhead λtail ((<indx λ (Maybe A)> (<Maybe.some A> head)) λpred ((<List.at A> tail) pred)))

List.bind: Π(A:*) Π(B:*) ∀(:(List A)) ∀(:∀(:A) (List B)) (List B)
  ΛA ΛB λxs λf (<List.flatten B> ((<<List.map A> (List B)> f) xs))

List.chunk: Π(A:*) ∀(:Nat) ∀(:(List A)) (Maybe (List A))
  ΛA λn λlist ((<n λ (Maybe (List A))> (<Maybe.some (List A)> <List.nil A>)) λpred ((<list λ (Maybe (List A))> <Maybe.none (List A)>) λhead λtail ((<<Maybe.bind (List A)> (List A)> ((<List.chunk A> pred) tail)) λx (<Maybe.some (List A)> ((<List.cons A> head) x)))))

List.concat: Π(A:*) ∀(:(List A)) ∀(:(List A)) (List A)
  ΛA λas λbs ((<as λ (List A)> bs) λhead λtail ((<List.cons A> head) ((<List.concat A> tail) bs)))

List.cons: Π(A:*) ∀(head:A) ∀(tail:(List A)) (List A)
  ΛA λhead λtail ΛP λnil λcons ((cons head) tail)

List.drop: Π(A:*) ∀(:Nat) ∀(:(List A)) (List A)
  ΛA λn λlist ((<n λ (List A)> list) λpred ((<list λ (List A)> <List.nil A>) λhead λtail ((<List.drop A> pred) tail)))

List.filter: Π(A:*) ∀(:∀(:A) Bool) ∀(:(List A)) (List A)
  ΛA λcond λlist ((<list λ (List A)> <List.nil A>) λlist.head λlist.tail (((<(cond list.head) λ ∀(:(List A)) (List A)> λt t) λt ((<List.cons A> list.head) t)) ((<List.filter A> cond) list.tail)))

List.find: Π(A:*) ∀(:∀(:A) Bool) ∀(:(List A)) (Maybe A)
  ΛA λcond λxs ((<xs λ (Maybe A)> <Maybe.none A>) λhead λtail ((<(cond head) λ (Maybe A)> (<Maybe.some A> head)) ((<List.find A> cond) tail)))

List.find_last.aux: Π(A:*) ∀(:(List A)) ∀(:∀(:A) ∀(:Nat) Bool) ∀(:Nat) ∀(:(Maybe ((Pair A) Nat))) (Maybe ((Pair A) Nat))
  ΛA λlist λcond λindx λres ((<list λ (Maybe ((Pair A) Nat))> res) λhead λtail $res=((<((cond head) indx) λ (Maybe ((Pair A) Nat))> (<Maybe.some ((Pair A) Nat)> ((<<Pair.new A> Nat> head) indx))) res);((((<List.find_last.aux A> tail) cond) (Nat.succ indx)) res))

List.find_last: Π(A:*) ∀(:(List A)) ∀(:∀(:A) ∀(:Nat) Bool) (Maybe ((Pair A) Nat))
  ΛA λlist λcond ((((<List.find_last.aux A> list) cond) Nat.zero) <Maybe.none ((Pair A) Nat)>)

List.flatten: Π(A:*) ∀(:(List (List A))) (List A)
  ΛA λas ((<as λ (List A)> <List.nil A>) λhead λtail ((<List.concat A> head) (<List.flatten A> tail)))

List: ∀(A:*) *
  λA Πlist(P:∀(x:(List A)) *) ∀(nil:(P <List.nil A>)) ∀(cons:∀(head:A) ∀(tail:(List A)) (P ((<List.cons A> head) tail))) (P list)

List.fold: Π(A:*) Π(B:*) ∀(:B) ∀(:∀(:A) ∀(:B) B) ∀(:(List A)) B
  ΛA ΛB λnil λcons λlist ((<list λ B> nil) λlist.head λlist.tail ((cons list.head) (((<<List.fold A> B> nil) cons) list.tail)))

List.ifind.aux: Π(A:*) ∀(:(List A)) ∀(:∀(:A) ∀(:Nat) Bool) ∀(:Nat) (Maybe ((Pair A) Nat))
  ΛA λlist λcond λindx ((<list λ (Maybe ((Pair A) Nat))> <Maybe.none ((Pair A) Nat)>) λhead λtail ((<((cond head) indx) λ (Maybe ((Pair A) Nat))> (<Maybe.some ((Pair A) Nat)> ((<<Pair.new A> Nat> head) indx))) (((<List.ifind.aux A> tail) cond) (Nat.succ indx))))

List.ifind: Π(A:*) ∀(:(List A)) ∀(:∀(:A) ∀(:Nat) Bool) (Maybe ((Pair A) Nat))
  ΛA λlist λcond (((<List.ifind.aux A> list) cond) Nat.zero)

List.imap: Π(A:*) Π(B:*) ∀(:∀(:Nat) ∀(:A) B) ∀(:(List A)) (List B)
  ΛA ΛB λfn λlist ((<list λ (List B)> <List.nil B>) λlist.head λlist.tail ((<List.cons B> ((fn Nat.zero) list.head)) ((<<List.imap A> B> λn (fn (Nat.succ n))) list.tail)))

List.intercalate: Π(A:*) ∀(sep:A) ∀(xs:(List A)) (List A)
  ΛA λsep λxs ((<xs λ (List A)> <List.nil A>) λhead λtail ((<List.cons A> head) ((<List.cons A> sep) ((<List.intercalate A> sep) tail))))

List.is_empty: Π(A:*) ∀(:(List A)) Bool
  ΛA λlist ((<list λ Bool> Bool.true) λhead λtail Bool.false)

List.length: Π(A:*) ∀(:(List A)) Nat
  ΛA λlist ((<list λ Nat> Nat.zero) λhead λtail (Nat.succ (<List.length A> tail)))

List.map: Π(A:*) Π(B:*) ∀(:∀(:A) B) ∀(:(List A)) (List B)
  ΛA ΛB λfn λlist ((<list λ (List B)> <List.nil B>) λlist.head λlist.tail ((<List.cons B> (fn list.head)) ((<<List.map A> B> fn) list.tail)))

List.nil: Π(A:*) (List A)
  ΛA ΛP λnil λcons nil

List.push: Π(A:*) ∀(:A) ∀(:(List A)) (List A)
  ΛA λval λlist ((<list λ (List A)> ((<List.cons A> val) <List.nil A>)) λlist.head λlist.tail ((<List.cons A> list.head) ((<List.push A> val) list.tail)))

List.reverse.aux: Π(A:*) ∀(:(List A)) ∀(:(List A)) (List A)
  ΛA λas λxs ((<as λ (List A)> xs) λhead λtail ((<List.reverse.aux A> tail) ((<List.cons A> head) xs)))

List.reverse: Π(A:*) ∀(:(List A)) (List A)
  ΛA λas ((<List.reverse.aux A> as) <List.nil A>)

List.show: Π(A:*) ∀(f:∀(:A) String) ∀(xs:(List A)) String
  ΛA λf λxs ((String.concat ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) String.nil)) ((String.concat (String.flatten ((<List.intercalate String> ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) String.nil)) ((<<List.map A> String> f) xs)))) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1)) String.nil)))

List.single: Π(A:*) ∀(x:A) (List A)
  ΛA λx ((<List.cons A> x) <List.nil A>)

List.take: Π(A:*) ∀(:Nat) ∀(:(List A)) (List A)
  ΛA λn λlist ((<list λ (List A)> <List.nil A>) λhead λtail ((<n λ (List A)> <List.nil A>) λpred ((<List.cons A> head) ((<List.take A> pred) tail))))

List.to_concat: Π(A:*) ∀(xs:(List A)) (Concat A)
  ΛA λxs ((<xs λ (Concat A)> λys ys) λhead λtail λys ((<List.cons A> head) ((<List.to_concat A> tail) ys)))

List.zip_with: Π(A:*) Π(B:*) Π(C:*) ∀(:∀(:A) ∀(:B) C) ∀(:(List A)) ∀(:(List B)) (List C)
  ΛA ΛB ΛC λfn λas λbs ((<as λ (List C)> <List.nil C>) λa.head λa.tail ((<bs λ (List C)> <List.nil C>) λb.head λb.tail $head=((fn a.head) b.head);$tail=(((<<<List.zip_with A> B> C> fn) a.tail) b.tail);((<List.cons C> head) tail)))

Map: ∀(A:*) *
  λA Πmap(P:∀(:(Map A)) *) ∀(new:(P <Map.new A>)) ∀(tie:∀(val:(Maybe A)) ∀(lft:(Map A)) ∀(rgt:(Map A)) (P (((<Map.tie A> val) lft) rgt))) (P map)

Map.get: Π(A:*) ∀(:Bits) ∀(:(Map A)) (Maybe A)
  ΛA λbits λmap (((<bits λ (Maybe A)> ((<map λ (Maybe A)> <Maybe.none A>) λmap.val λmap.lft λmap.rgt map.val)) λbits.pred ((<map λ (Maybe A)> <Maybe.none A>) λmap.val λmap.lft λmap.rgt ((<Map.get A> bits.pred) map.lft))) λbits.pred ((<map λ (Maybe A)> <Maybe.none A>) λmap.val λmap.lft λmap.rgt ((<Map.get A> bits.pred) map.rgt)))

Map.lookup: Π(A:*) ∀(:Bits) ∀(:A) ∀(:(Map A)) ((Pair A) (Map A))
  ΛA λbits λval λmap (((<bits λ ((Pair A) (Map A))> ((<map λ ((Pair A) (Map A))> $map=(((<Map.tie A> (<Maybe.some A> val)) <Map.new A>) <Map.new A>);((<<Pair.new A> (Map A)> val) map)) λmap.val λmap.lft λmap.rgt $value=((<Maybe.extract A> map.val) val);$map=(((<Map.tie A> (<Maybe.some A> value)) map.lft) map.rgt);((<<Pair.new A> (Map A)> value) map))) λbits.pred ((<map λ ((Pair A) (Map A))> $p=(((<Map.lookup A> bits.pred) val) <Map.new A>);(<p λ ((Pair A) (Map A))> λp.a λp.b ((<<Pair.new A> (Map A)> p.a) (((<Map.tie A> <Maybe.none A>) p.b) <Map.new A>)))) λmap.val λmap.lft λmap.rgt $p=(((<Map.lookup A> bits.pred) val) map.lft);(<p λ ((Pair A) (Map A))> λp.a λp.b ((<<Pair.new A> (Map A)> p.a) (((<Map.tie A> map.val) p.b) map.rgt))))) λbits.pred ((<map λ ((Pair A) (Map A))> $p=(((<Map.lookup A> bits.pred) val) <Map.new A>);(<p λ ((Pair A) (Map A))> λp.a λp.b ((<<Pair.new A> (Map A)> p.a) (((<Map.tie A> <Maybe.none A>) <Map.new A>) p.b)))) λmap.val λmap.lft λmap.rgt $p=(((<Map.lookup A> bits.pred) val) map.rgt);(<p λ ((Pair A) (Map A))> λp.a λp.b ((<<Pair.new A> (Map A)> p.a) (((<Map.tie A> map.val) map.lft) p.b)))))

Map.mix: Π(A:*) ∀(:(Maybe A)) ∀(:(Map A)) ∀(:(Map A)) (Map A)
  Λ λval λlft λrgt Λ λ λmix (((mix val) lft) rgt)

Map.new: Π(A:*) (Map A)
  Λ Λ λnew λ new

query: Π(A:*) ∀(:∀(:A) ((Pair A) A)) ∀(:Bits) ∀(:(Map A)) ((Pair (Map A)) (Maybe A))
  ΛA λcpy λbits λmap $rec=<query A>;((((((<bits λ ∀(:∀(:∀(:A) ((Pair A) A)) ∀(:Bits) ∀(:(Map A)) ((Pair (Map A)) (Maybe A))) ∀(:∀(:A) ((Pair A) A)) ∀(:(Map A)) ((Pair (Map A)) (Maybe A))> λrec λcpy λmap ((<map λ ((Pair (Map A)) (Maybe A))> $map=<Map.new A>;$val=<Maybe.none A>;((<<Pair.new (Map A)> (Maybe A)> map) val)) λmap.val λmap.lft λmap.rgt $mval=map.val;((((<mval λ ∀(:(Map A)) ∀(:(Map A)) ((Pair (Map A)) (Maybe A))> λmap.lft λmap.rgt $map=(((<Map.tie A> <Maybe.none A>) map.lft) map.rgt);$val=<Maybe.none A>;((<<Pair.new (Map A)> (Maybe A)> map) val)) λmval.value λmap.lft λmap.rgt $p=(cpy mval.value);(<p λ ((Pair (Map A)) (Maybe A))> λp.fst λp.snd $map=(((<Map.tie A> (<Maybe.some A> p.fst)) map.lft) map.rgt);$val=(<Maybe.some A> p.snd);((<<Pair.new (Map A)> (Maybe A)> map) val))) map.lft) map.rgt))) λbits.pred λrec λcpy λmap ((<map λ ((Pair (Map A)) (Maybe A))> $map=<Map.new A>;$val=<Maybe.none A>;((<<Pair.new (Map A)> (Maybe A)> map) val)) λmap.val λmap.lft λmap.rgt $p=(((rec cpy) bits.pred) map.lft);(<p λ ((Pair (Map A)) (Maybe A))> λp.fst λp.snd $map=(((<Map.tie A> map.val) p.fst) map.rgt);$val=p.snd;((<<Pair.new (Map A)> (Maybe A)> map) val)))) λbits.pred λrec λcpy λmap ((<map λ ((Pair (Map A)) (Maybe A))> $map=<Map.new A>;$val=<Maybe.none A>;((<<Pair.new (Map A)> (Maybe A)> map) val)) λmap.val λmap.lft λmap.rgt $p=(((rec cpy) bits.pred) map.rgt);(<p λ ((Pair (Map A)) (Maybe A))> λp.fst λp.snd $map=(((<Map.tie A> map.val) map.lft) p.fst);$val=p.snd;((<<Pair.new (Map A)> (Maybe A)> map) val)))) rec) cpy) map)

Map.set: Π(A:*) ∀(:Bits) ∀(:A) ∀(:(Map A)) (Map A)
  ΛA λbits λval λmap (((<bits λ (Map A)> ((<map λ (Map A)> (((<Map.tie A> (<Maybe.some A> val)) <Map.new A>) <Map.new A>)) λmap.val λmap.lft λmap.rgt (((<Map.tie A> (<Maybe.some A> val)) map.lft) map.rgt))) λbits.pred ((<map λ (Map A)> (((<Map.tie A> <Maybe.none A>) (((<Map.set A> bits.pred) val) <Map.new A>)) <Map.new A>)) λmap.val λmap.lft λmap.rgt (((<Map.tie A> map.val) (((<Map.set A> bits.pred) val) map.lft)) map.rgt))) λbits.pred ((<map λ (Map A)> (((<Map.tie A> <Maybe.none A>) <Map.new A>) (((<Map.set A> bits.pred) val) <Map.new A>))) λmap.val λmap.lft λmap.rgt (((<Map.tie A> map.val) map.lft) (((<Map.set A> bits.pred) val) map.rgt))))

Map.tie: Π(A:*) ∀(:(Maybe A)) ∀(:(Map A)) ∀(:(Map A)) (Map A)
  Λ λval λlft λrgt Λ λ λtie (((tie val) lft) rgt)

Maybe.bind: Π(A:*) Π(B:*) ∀(:(Maybe A)) ∀(:∀(:A) (Maybe B)) (Maybe B)
  ΛA ΛB λm λf ((<m λ (Maybe B)> <Maybe.none B>) λm.val (f m.val))

Maybe.extract: Π(A:*) ∀(:(Maybe A)) ∀(:A) A
  ΛA λm λa ((<m λ A> a) λm.value m.value)

Maybe: ∀(:*) *
  λA Πmaybe(P:∀(:(Maybe A)) *) ∀(none:(P <Maybe.none A>)) ∀(some:∀(value:A) (P (<Maybe.some A> value))) (P maybe)

Maybe.join: Π(A:*) ∀(:(Maybe (Maybe A))) (Maybe A)
  ΛA λm ((<m λ (Maybe A)> <Maybe.none A>) λm.value m.value)

Maybe.map: Π(A:*) Π(B:*) ∀(:∀(:A) B) ∀(:(Maybe A)) (Maybe B)
  ΛA ΛB λfn λmaybe ((<maybe λ (Maybe B)> <Maybe.none B>) λvalue (<Maybe.some B> (fn value)))

Maybe.none: Π(A:*) (Maybe A)
  Λ Λ λnone λ none

Maybe.some: Π(A:*) ∀(:A) (Maybe A)
  Λ λvalue Λ λ λsome (some value)

Nat.0: Nat
  Nat.zero

Nat.1: Nat
  (Nat.succ Nat.0)

Nat.10: Nat
  (Nat.succ Nat.9)

Nat.11: Nat
  (Nat.succ Nat.10)

Nat.12: Nat
  (Nat.succ Nat.11)

Nat.13: Nat
  (Nat.succ Nat.12)

Nat.14: Nat
  (Nat.succ Nat.13)

Nat.15: Nat
  (Nat.succ Nat.14)

Nat.16: Nat
  (Nat.succ Nat.15)

Nat.17: Nat
  (Nat.succ Nat.16)

Nat.18: Nat
  (Nat.succ Nat.17)

Nat.19: Nat
  (Nat.succ Nat.18)

Nat.2: Nat
  (Nat.succ Nat.1)

Nat.20: Nat
  (Nat.succ Nat.19)

Nat.21: Nat
  (Nat.succ Nat.20)

Nat.22: Nat
  (Nat.succ Nat.21)

Nat.23: Nat
  (Nat.succ Nat.22)

Nat.24: Nat
  (Nat.succ Nat.23)

Nat.25: Nat
  (Nat.succ Nat.24)

Nat.26: Nat
  (Nat.succ Nat.25)

Nat.27: Nat
  (Nat.succ Nat.26)

Nat.28: Nat
  (Nat.succ Nat.27)

Nat.29: Nat
  (Nat.succ Nat.28)

Nat.3: Nat
  (Nat.succ Nat.2)

Nat.30: Nat
  (Nat.succ Nat.29)

Nat.31: Nat
  (Nat.succ Nat.30)

Nat.32: Nat
  (Nat.succ Nat.31)

Nat.33: Nat
  (Nat.succ Nat.32)

Nat.34: Nat
  (Nat.succ Nat.33)

Nat.35: Nat
  (Nat.succ Nat.34)

Nat.36: Nat
  (Nat.succ Nat.35)

Nat.37: Nat
  (Nat.succ Nat.36)

Nat.38: Nat
  (Nat.succ Nat.37)

Nat.39: Nat
  (Nat.succ Nat.38)

Nat.4: Nat
  (Nat.succ Nat.3)

Nat.40: Nat
  (Nat.succ Nat.39)

Nat.41: Nat
  (Nat.succ Nat.40)

Nat.42: Nat
  (Nat.succ Nat.41)

Nat.43: Nat
  (Nat.succ Nat.42)

Nat.44: Nat
  (Nat.succ Nat.43)

Nat.45: Nat
  (Nat.succ Nat.44)

Nat.46: Nat
  (Nat.succ Nat.45)

Nat.47: Nat
  (Nat.succ Nat.46)

Nat.48: Nat
  (Nat.succ Nat.47)

Nat.49: Nat
  (Nat.succ Nat.48)

Nat.5: Nat
  (Nat.succ Nat.4)

Nat.50: Nat
  (Nat.succ Nat.49)

Nat.51: Nat
  (Nat.succ Nat.50)

Nat.52: Nat
  (Nat.succ Nat.51)

Nat.53: Nat
  (Nat.succ Nat.52)

Nat.54: Nat
  (Nat.succ Nat.53)

Nat.55: Nat
  (Nat.succ Nat.54)

Nat.56: Nat
  (Nat.succ Nat.55)

Nat.57: Nat
  (Nat.succ Nat.56)

Nat.58: Nat
  (Nat.succ Nat.57)

Nat.59: Nat
  (Nat.succ Nat.58)

Nat.6: Nat
  (Nat.succ Nat.5)

Nat.60: Nat
  (Nat.succ Nat.59)

Nat.61: Nat
  (Nat.succ Nat.60)

Nat.62: Nat
  (Nat.succ Nat.61)

Nat.63: Nat
  (Nat.succ Nat.62)

Nat.64: Nat
  (Nat.succ Nat.63)

Nat.7: Nat
  (Nat.succ Nat.6)

Nat.8: Nat
  (Nat.succ Nat.7)

Nat.9: Nat
  (Nat.succ Nat.8)

Nat.add: ∀(:Nat) ∀(:Nat) Nat
  λn λm ((<n λ Nat> m) λn.pred (Nat.succ ((Nat.add n.pred) m)))

Nat.addAcc: ∀(n:Nat) ((((Acc Nat) Nat) (Nat.eql Nat.0)) n)
  (((<<Acc.foldl Nat> Nat> (Nat.eql Nat.0)) Nat.add) Nat.0)

Nat.addVar: ∀(n:Nat) (((Variadic Nat) Nat) n)
  ((<<Variadic.foldr Nat> Nat> Nat.add) Nat.0)

Nat.apply: Π(A:*) ∀(:Nat) ∀(:∀(:A) A) ∀(:A) A
  ΛA λn λf λx ((<n λ A> x) λn.pred (((<Nat.apply A> n.pred) f) (f x)))

Nat.cmp: ∀(:Nat) ∀(:Nat) Cmp
  λa λb ((<a λ Cmp> ((<b λ Cmp> Cmp.eql) λb.pred Cmp.ltn)) λa.pred ((<b λ Cmp> Cmp.gtn) λb.pred ((Nat.cmp a.pred) b.pred)))

Nat.div: ∀(:Nat) ∀(:Nat) Nat
  λn λm (<<Pair.fst Nat> Nat> ((Nat.div_mod n) m))

Nat.div_mod.aux: ∀(:Nat) ∀(:Nat) ∀(:Nat) ((Pair Nat) Nat)
  λn λm λd $p=((Nat.sub_rem n) m);((<p λ ((Pair Nat) Nat)> λp.value (((Nat.div_mod.aux p.value) m) (Nat.succ d))) λp.value ((<<Pair.new Nat> Nat> d) n))

Nat.div_mod: ∀(:Nat) ∀(:Nat) ((Pair Nat) Nat)
  λn λm (((Nat.div_mod.aux n) m) Nat.zero)

Nat.double: ∀(:Nat) Nat
  λn ((<n λ Nat> Nat.zero) λn.pred (Nat.succ (Nat.succ (Nat.double n.pred))))

Nat.eql: ∀(:Nat) ∀(:Nat) Bool
  λa λb (((<((Nat.cmp a) b) λ Bool> Bool.false) Bool.true) Bool.false)

Nat: *
  Πnat(P:∀(:Nat) *) ∀(zero:(P Nat.zero)) ∀(succ:∀(pred:Nat) (P (Nat.succ pred))) (P nat)

Nat.gte: ∀(:Nat) ∀(:Nat) Bool
  λa λb (((<((Nat.cmp a) b) λ Bool> Bool.false) Bool.true) Bool.true)

Nat.gtn: ∀(:Nat) ∀(:Nat) Bool
  λa λb (((<((Nat.cmp a) b) λ Bool> Bool.false) Bool.false) Bool.true)

Nat.induction: ∀(n:Nat) Π(P:∀(:Nat) *) ∀(z:(P Nat.zero)) ∀(s:∀(m:Nat) ∀(:(P m)) (P (Nat.succ m))) (P n)
  λk ΛP λz λs ((<k P> z) λpred ((s pred) ((<(Nat.induction pred) P> z) s)))

Nat.is_zero: ∀(:Nat) Bool
  λn ((<n λ Bool> Bool.true) λ Bool.false)

Nat.lte: ∀(:Nat) ∀(:Nat) Bool
  λa λb (((<((Nat.cmp a) b) λ Bool> Bool.true) Bool.true) Bool.false)

Nat.ltn: ∀(:Nat) ∀(:Nat) Bool
  λa λb (((<((Nat.cmp a) b) λ Bool> Bool.true) Bool.false) Bool.false)

Nat.mod: ∀(:Nat) ∀(:Nat) Nat
  λn λm (<<Pair.snd Nat> Nat> ((Nat.div_mod n) m))

Nat.mul: ∀(:Nat) ∀(:Nat) Nat
  λn λm ((<n λ Nat> Nat.zero) λn.pred ((Nat.add m) ((Nat.mul n.pred) m)))

Nat.mulAcc: ∀(n:Nat) ((((Acc Nat) Nat) (Nat.eql Nat.1)) n)
  (((<<Acc.foldl Nat> Nat> (Nat.eql Nat.1)) Nat.mul) Nat.1)

Nat.mulVar: ∀(n:Nat) (((Variadic Nat) Nat) n)
  ((<<Variadic.foldr Nat> Nat> Nat.mul) Nat.1)

Nat.parse_decimal: ∀(:String) Nat
  λstr ((Nat.parse_decimal.go str) Nat.zero)

Nat.parse_decimal.go: ∀(:String) ∀(:Nat) Nat
  λstr λres ((<str λ Nat> res) λstr.head λstr.tail $dig=((Nat.sub (U16.to_nat str.head)) Nat.48);$res=((Nat.add dig) ((Nat.mul Nat.10) res));((Nat.parse_decimal.go str.tail) res))

Nat.parse_hex: ∀(:String) Nat
  λstr ((Nat.parse_hex.go str) Nat.zero)

Nat.parse_hex.go: ∀(:String) ∀(:Nat) Nat
  λstr λres ((<str λ Nat> res) λstr.head λstr.tail ((<(Char.hex_value str.head) λ Nat> res) λdig $res=((Nat.add dig) ((Nat.mul Nat.16) res));((Nat.parse_hex.go str.tail) res)))

Nat.pow: ∀(:Nat) ∀(:Nat) Nat
  Nat.pow

Nat.pred: ∀(:Nat) Nat
  λn ((<n λ Nat> Nat.zero) λn.pred n.pred)

Nat.show.aux: ∀(:Nat) ∀(:Nat) ∀(:String) String
  λn λbase λstr (<((Nat.div_mod n) base) λ String> λd λm ((<d λ String> ((String.cons ((Nat.show.digit m) base)) str)) λpred (((Nat.show.aux d) base) ((String.cons ((Nat.show.digit m) base)) str))))

Nat.show.digit: ∀(:Nat) ∀(:Nat) Char
  λn λbase $m=((Nat.mod n) base);((<((Nat.eql m) Nat.0) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil))) ((<((Nat.eql m) Nat.1) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) String.nil))) ((<((Nat.eql m) Nat.2) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) String.nil))) ((<((Nat.eql m) Nat.3) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) String.nil))) ((<((Nat.eql m) Nat.4) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) String.nil))) ((<((Nat.eql m) Nat.5) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) String.nil))) ((<((Nat.eql m) Nat.6) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) String.nil))) ((<((Nat.eql m) Nat.7) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) String.nil))) ((<((Nat.eql m) Nat.8) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil))) ((<((Nat.eql m) Nat.9) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil))) ((<((Nat.eql m) Nat.10) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) String.nil))) ((<((Nat.eql m) Nat.11) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) String.nil))) ((<((Nat.eql m) Nat.12) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) String.nil))) ((<((Nat.eql m) Nat.13) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) String.nil))) ((<((Nat.eql m) Nat.14) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) String.nil))) ((<((Nat.eql m) Nat.15) λ Char> (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) String.nil))) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) String.nil))))))))))))))))))

Nat.show: ∀(:Nat) String
  λn (((Nat.show.aux n) Nat.10) String.nil)

Nat.show_base: ∀(:Nat) ∀(:Nat) String
  λn λbase (((Nat.show.aux n) base) String.nil)

Nat.square: ∀(:Nat) Nat
  λa ((Nat.mul a) a)

Nat.sub: ∀(:Nat) ∀(:Nat) Nat
  λn λm ((<m λ Nat> n) λm.pred ((<n λ Nat> Nat.zero) λn.pred ((Nat.sub n.pred) m.pred)))

Nat.sub_rem: ∀(:Nat) ∀(:Nat) ((Either Nat) Nat)
  λn λm ((<m λ ((Either Nat) Nat)> (<<Either.left Nat> Nat> n)) λm.pred ((<n λ ((Either Nat) Nat)> (<<Either.right Nat> Nat> (Nat.succ m.pred))) λn.pred ((Nat.sub_rem n.pred) m.pred)))

Nat.succ: ∀(:Nat) Nat
  λn ΛP λz λs (s n)

Nat.sum: ∀(:Nat) Nat
  λn ((Nat.sum.go n) Nat.zero)

Nat.sum.go: ∀(:Nat) ∀(:Nat) Nat
  λn λr ((<n λ Nat> r) λn.pred ((Nat.sum.go n.pred) ((Nat.add n) r)))

Nat.to_base: ∀(:Nat) ∀(:Nat) (List Nat)
  λbase λnat (((Nat.to_base.go base) nat) <List.nil Nat>)

Nat.to_base.go: ∀(:Nat) ∀(:Nat) ∀(:(List Nat)) (List Nat)
  λbase λnat λres (<((Nat.div_mod nat) base) λ (List Nat)> λdiv λrem $res=((<List.cons Nat> rem) res);((<div λ (List Nat)> res) λdiv.pred (((Nat.to_base.go base) div) res)))

Nat.to_bits: ∀(:Nat) Bits
  λn ((<n λ Bits> (Bits.0 Bits.nil)) λn.pred (Bits.1 (Nat.to_bits n.pred)))

Nat.to_string: ∀(:Nat) String
  λn ((<n λ String> ((String.cons (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) String.nil))) String.nil)) λn.pred ((String.cons (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) String.nil))) (Nat.to_string n.pred)))

Nat.to_string_base: ∀(:Nat) ∀(:Nat) String
  λbase λnat (((<<List.fold Nat> String> String.nil) λn λstr ((String.cons (((<Nat.apply Char> n) U16.inc) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))) str)) ((Nat.to_base base) nat))

Nat.to_string_decimal: ∀(:Nat) String
  (Nat.to_string_base Nat.10)

Nat.zero: Nat
  ΛP λz λs z

Newtype.elim: Π(A:*) Π(tag:String) ∀(n:((Newtype A) tag)) A
  ΛA Λtag λn (<n λ λ A> λx x)

Newtype: ∀(A:*) ∀(tag:String) *
  λA λtag Πnewtype(P:∀(tag:String) ∀(:((Newtype A) tag)) *) ∀(val:∀(x:A) ((P tag) (<<Newtype.val A> tag> x))) ((P tag) newtype)

Newtype.val: Π(A:*) Π(tag:String) ∀(x:A) ((Newtype A) tag)
  ΛA Λtag λx ΛP λval (val x)

NonEmpty.cons: Π(A:*) ∀(head:A) ∀(tail:(NonEmpty A)) (NonEmpty A)
  ΛA λhead λtail ΛP λend λcons ((cons head) tail)

NonEmpty.end: Π(A:*) ∀(value:A) (NonEmpty A)
  ΛA λvalue ΛP λend λcons (end value)

NonEmpty: ∀(A:*) *
  λA Πnon_empty(P:∀(x:(NonEmpty A)) *) ∀(end:∀(value:A) (P (<NonEmpty.end A> value))) ∀(cons:∀(head:A) ∀(tail:(NonEmpty A)) (P ((<NonEmpty.cons A> head) tail))) (P non_empty)

NonEmpty.to_list: Π(A:*) ∀(:(NonEmpty A)) (List A)
  ΛA λxs ((<xs λ (List A)> λvalue ((<List.cons A> value) <List.nil A>)) λhead λtail ((<List.cons A> head) (<NonEmpty.to_list A> tail)))

Not: ∀(P:*) *
  λP ∀(:P) Empty

Or: ∀(A:*) ∀(B:*) *
  λA λB ((Either A) B)

Pair: ∀(:*) ∀(:*) *
  λA λB Πpair(P:∀(:((Pair A) B)) *) ∀(new:∀(a:A) ∀(b:B) (P ((<<Pair.new A> B> a) b))) (P pair)

Pair.fst: Π(A:*) Π(B:*) ∀(:((Pair A) B)) A
  ΛA ΛB λpair (<pair λ A> λa λb a)

Pair.new: Π(A:*) Π(B:*) ∀(:A) ∀(:B) ((Pair A) B)
  ΛA ΛB λa λb ΛP λpair ((pair a) b)

Pair.snd: Π(A:*) Π(B:*) ∀(:((Pair A) B)) B
  ΛA ΛB λpair (<pair λ B> λa λb b)

Parsec.Error.Fancy.custom: Π(E:*) ∀(e:E) (Parsec.Error.Fancy E)
  ΛE λe ΛP λ λcustom (custom e)

Parsec.Error.Fancy.fail: Π(E:*) ∀(:String) (Parsec.Error.Fancy E)
  ΛE λmsg ΛP λfail λ (fail msg)

Parsec.Error.Fancy: ∀(:*) *
  λE Πparser.error.fancy(P:∀(:(Parsec.Error.Fancy E)) *) ∀(fail:∀(msg:String) (P (<Parsec.Error.Fancy.fail E> msg))) ∀(custom:∀(err:E) (P (<Parsec.Error.Fancy.custom E> err))) (P parser.error.fancy)

Parsec.Error.Item.end_of_input: Parsec.Error.Item
  ΛP λ λ λend_of_input end_of_input

Parsec.Error.Item: *
  Πparser.error.tokens(P:∀(:Parsec.Error.Item) *) ∀(tokens:∀(xs:String) (P (Parsec.Error.Item.tokens xs))) ∀(label:∀(xs:String) (P (Parsec.Error.Item.label xs))) ∀(end_of_input:(P Parsec.Error.Item.end_of_input)) (P parser.error.tokens)

Parsec.Error.Item.label: ∀(:String) Parsec.Error.Item
  λxs ΛP λ λlabel λ (label xs)

Parsec.Error.Item.show: ∀(:Parsec.Error.Item) String
  λe (((<e λ String> λxs (String.quote xs)) λxs ((String.concat ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil))))))) xs)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) String.nil)))))))))))))

Parsec.Error.Item.tokens: ∀(:String) Parsec.Error.Item
  λxs ΛP λtokens λ λ (tokens xs)

Parsec.Error: ∀(:*) *
  λE Πparser.error(P:∀(:(Parsec.Error E)) *) ∀(trivial:∀(position:Nat) ∀(unexpect:(Maybe Parsec.Error.Item)) ∀(expected:(List Parsec.Error.Item)) (P (((<Parsec.Error.make_trivial E> position) unexpect) expected))) ∀(fancy:∀(position:Nat) ∀(messages:(List (Parsec.Error.Fancy E))) (P ((<Parsec.Error.make_fancy E> position) messages))) (P parser.error)

Parsec.Error.index: Π(E:*) ∀(:(Parsec.Error E)) Nat
  ΛE λx ((<x λ Nat> λx.pos λx.unx λx.exp x.pos) λx.pos λx.msg x.pos)

Parsec.Error.make_fancy: Π(E:*) ∀(:Nat) ∀(:(List (Parsec.Error.Fancy E))) (Parsec.Error E)
  ΛE λposition λmessages ΛP λ λfancy ((fancy position) messages)

Parsec.Error.make_trivial: Π(E:*) ∀(:Nat) ∀(:(Maybe Parsec.Error.Item)) ∀(:(List Parsec.Error.Item)) (Parsec.Error E)
  ΛE λposition λunexpect λexpected ΛP λtrivial λ (((trivial position) unexpect) expected)

Parsec.Error.merge: Π(E:*) ∀(:(Parsec.Error E)) ∀(:(Parsec.Error E)) (Parsec.Error E)
  ΛE λx λy $x.index=(<Parsec.Error.index E> x);$y.index=(<Parsec.Error.index E> y);(((<((Nat.cmp x.index) y.index) λ (Parsec.Error E)> y) ((<x λ (Parsec.Error E)> λx.pos λx.unx λx.exp ((<y λ (Parsec.Error E)> λy.pos λy.unx λy.exp (((<Parsec.Error.make_trivial E> x.pos) ((<x.unx λ (Maybe Parsec.Error.Item)> y.unx) λ x.unx)) ((<List.concat Parsec.Error.Item> x.exp) y.exp))) λy.pos λy.msg y)) λx.pos λx.msg ((<y λ (Parsec.Error E)> λy.pos λy.unx λy.exp x) λy.pos λy.msg ((<Parsec.Error.make_fancy E> x.pos) ((<List.concat (Parsec.Error.Fancy E)> x.msg) y.msg))))) x)

Parsec.Error.show: Π(E:*) ∀(:∀(:E) String) ∀(:(Parsec.Error E)) String
  ΛE λf λe ((<e λ String> λposition λunexpect λexpected ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) String.nil)))))))) λposition λmessages ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil))))))

Parsec.Reply.eaten_error: Π(S:*) Π(E:*) Π(A:*) ∀(:((Parsec.State S) E)) ∀(:(Parsec.Error E)) (((Parsec.Reply S) E) A)
  ΛS ΛE ΛA λstate λerror ΛP λ λ λ λeaten_error ((eaten_error state) error)

Parsec.Reply.eaten_value: Π(S:*) Π(E:*) Π(A:*) ∀(:((Parsec.State S) E)) ∀(:A) (((Parsec.Reply S) E) A)
  ΛS ΛE ΛA λstate λvalue ΛP λ λ λeaten_value λ ((eaten_value state) value)

Parsec.Reply.empty_error: Π(S:*) Π(E:*) Π(A:*) ∀(:((Parsec.State S) E)) ∀(:(Parsec.Error E)) (((Parsec.Reply S) E) A)
  ΛS ΛE ΛA λstate λerror ΛP λ λempty_error λ λ ((empty_error state) error)

Parsec.Reply.empty_value: Π(S:*) Π(E:*) Π(A:*) ∀(:((Parsec.State S) E)) ∀(:A) (((Parsec.Reply S) E) A)
  ΛS ΛE ΛA λstate λvalue ΛP λempty_value λ λ λ ((empty_value state) value)

Parsec.Reply: ∀(:*) ∀(:*) ∀(:*) *
  λS λE λA Πparser_reply(P:∀(:(((Parsec.Reply S) E) A)) *) ∀(empty_value:∀(state:((Parsec.State S) E)) ∀(value:A) (P ((<<<Parsec.Reply.empty_value S> E> A> state) value))) ∀(empty_error:∀(state:((Parsec.State S) E)) ∀(error:(Parsec.Error E)) (P ((<<<Parsec.Reply.empty_error S> E> A> state) error))) ∀(eaten_value:∀(state:((Parsec.State S) E)) ∀(value:A) (P ((<<<Parsec.Reply.eaten_value S> E> A> state) value))) ∀(eaten_error:∀(state:((Parsec.State S) E)) ∀(error:(Parsec.Error E)) (P ((<<<Parsec.Reply.eaten_error S> E> A> state) error))) (P parser_reply)

Parsec.Reply.to_either: Π(S:*) Π(E:*) Π(A:*) ∀(:(((Parsec.Reply S) E) A)) ((Either (Parsec.Error E)) A)
  ΛS ΛE ΛA λreply ((((<reply λ ((Either (Parsec.Error E)) A)> λ λa (<<Either.right (Parsec.Error E)> A> a)) λ λe (<<Either.left (Parsec.Error E)> A> e)) λ λa (<<Either.right (Parsec.Error E)> A> a)) λ λe (<<Either.left (Parsec.Error E)> A> e))

Parsec.State.default: Π(S:*) Π(E:*) ∀(:String) ∀(:S) ((Parsec.State S) E)
  ΛS ΛE λinput λstate ΛP λmake ((((make input) Nat.zero) <List.nil (Parsec.Error E)>) state)

Parsec.State: ∀(:*) ∀(:*) *
  λS λE Πparser_state(P:∀(:((Parsec.State S) E)) *) ∀(make:∀(input:String) ∀(index:Nat) ∀(error:(List (Parsec.Error E))) ∀(state:S) (P ((((<<Parsec.State.make S> E> input) index) error) state))) (P parser_state)

Parsec.State.longest_match: Π(S:*) Π(E:*) ∀(:((Parsec.State S) E)) ∀(:((Parsec.State S) E)) ((Parsec.State S) E)
  ΛS ΛE λx λy (<x λ ((Parsec.State S) E)> λx.input λx.index λx.error λx.state (<y λ ((Parsec.State S) E)> λy.input λy.index λy.error λy.state (((<((Nat.cmp x.index) y.index) λ ((Parsec.State S) E)> y) x) x)))

Parsec.State.make: Π(S:*) Π(E:*) ∀(:String) ∀(:Nat) ∀(:(List (Parsec.Error E))) ∀(:S) ((Parsec.State S) E)
  ΛS ΛE λinput λindex λerror λstate ΛP λmake ((((make input) index) error) state)

Parsec.any_char: Π(S:*) Π(E:*) (((Parsec S) E) Char)
  ΛS ΛE ((<<<Parsec.token S> E> Char> <Maybe.some Char>) (<List.single Parsec.Error.Item> (Parsec.Error.Item.label ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) String.nil)))))))))))

Parsec.ap: Π(S:*) Π(E:*) Π(A:*) Π(B:*) ∀(:(((Parsec S) E) ∀(:A) B)) ∀(:(((Parsec S) E) A)) (((Parsec S) E) B)
  ΛS ΛE ΛA ΛB λpf λpa ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error (((((<pf X> s1) λs2 λf (((((<pa X> s2) λs3 λa ((empty_value s3) (f a))) empty_error) λs3 λa ((eaten_value s3) (f a))) eaten_error)) empty_error) λs2 λf (((((<pa X> s2) λs3 λa ((eaten_value s3) (f a))) eaten_error) λs3 λa ((eaten_value s3) (f a))) eaten_error)) eaten_error)

Parsec.bind: Π(S:*) Π(E:*) Π(A:*) Π(B:*) ∀(:(((Parsec S) E) A)) ∀(:∀(:A) (((Parsec S) E) B)) (((Parsec S) E) B)
  ΛS ΛE ΛA ΛB λpa λpf ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error (((((<pa X> s1) λs2 λa (((((<(pf a) X> s2) λs3 λb ((empty_value s3) b)) empty_error) λs3 λb ((eaten_value s3) b)) eaten_error)) empty_error) λs2 λa (((((<(pf a) X> s2) λs3 λb ((eaten_value s3) b)) eaten_error) λs3 λb ((eaten_value s3) b)) eaten_error)) eaten_error)

Parsec.char: Π(S:*) Π(E:*) ∀(:Char) (((Parsec S) E) Char)
  ΛS ΛE λc ((<<<Parsec.token S> E> Char> λx ((<((U16.eql c) x) λ (Maybe Char)> (<Maybe.some Char> c)) <Maybe.none Char>)) (<List.single Parsec.Error.Item> (Parsec.Error.Item.tokens (String.single c))))

Parsec.choice: Π(S:*) Π(E:*) Π(A:*) ∀(:(List (((Parsec S) E) A))) (((Parsec S) E) A)
  ΛS ΛE ΛA λps ((<ps λ (((Parsec S) E) A)> <<<Parsec.zero S> E> A>) λhead λtail ((<<<Parsec.plus S> E> A> head) (<<<Parsec.choice S> E> A> tail)))

Parsec.eof: Π(S:*) Π(E:*) (((Parsec S) E) Unit)
  ΛS ΛE ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error (<s1 λ X> λinput λindex λerror λstate ((<input λ X> ((empty_value s1) Unit.new)) λhead λ ((empty_error s1) (((<Parsec.Error.make_trivial E> index) (<Maybe.some Parsec.Error.Item> (Parsec.Error.Item.tokens (String.single head)))) (<List.single Parsec.Error.Item> Parsec.Error.Item.end_of_input)))))

Parsec.fail: Π(S:*) Π(E:*) Π(A:*) ∀(:String) (((Parsec S) E) A)
  ΛS ΛE ΛA λmsg ΛX λs λ λempty_error λ λ (<s λ X> λ λindex λ λ $e=(<List.single (Parsec.Error.Fancy E)> (<Parsec.Error.Fancy.fail E> msg));((empty_error s) ((<Parsec.Error.make_fancy E> index) e)))

Parsec: ∀(S:*) ∀(E:*) ∀(A:*) *
  λS λE λA Π(B:*) ∀(:((Parsec.State S) E)) ∀(:∀(:((Parsec.State S) E)) ∀(:A) B) ∀(:∀(:((Parsec.State S) E)) ∀(:(Parsec.Error E)) B) ∀(:∀(:((Parsec.State S) E)) ∀(:A) B) ∀(:∀(:((Parsec.State S) E)) ∀(:(Parsec.Error E)) B) B

Parsec.get_state: Π(S:*) Π(E:*) (((Parsec S) E) ((Parsec.State S) E))
  ΛS ΛE ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error ((empty_value s1) s1)

Parsec.label: Π(S:*) Π(E:*) Π(A:*) ∀(:String) ∀(:(((Parsec S) E) A)) (((Parsec S) E) A)
  ΛS ΛE ΛA λlabel λp ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error (((((<p X> s1) empty_value) λs2 λe ((<e λ X> λpos λus λ ((empty_error s2) $es=(<List.single Parsec.Error.Item> (Parsec.Error.Item.label label));(((<Parsec.Error.make_trivial E> pos) us) es))) λ λ ((empty_error s2) e))) eaten_value) eaten_error)

Parsec.make: Π(S:*) Π(E:*) Π(A:*) ∀(:∀(:((Parsec.State S) E)) (((Parsec.Reply S) E) A)) (((Parsec S) E) A)
  ΛS ΛE ΛA λf ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error ((((<(f s1) λ X> λs2 λa ((empty_value s2) a)) empty_error) λs2 λa ((eaten_value s2) a)) eaten_error)

Parsec.many: Π(S:*) Π(E:*) Π(A:*) ∀(:(((Parsec S) E) A)) (((Parsec S) E) (List A))
  ΛS ΛE ΛA λp ((<<<<Parsec.bind S> E> (Maybe A)> (List A)> (<<<Parsec.optional S> E> A> p)) λx ((<x λ (((Parsec S) E) (List A))> (<<<Parsec.pure S> E> (List A)> <List.nil A>)) λa ((<<<<Parsec.map S> E> (List A)> (List A)> (<List.cons A> a)) (<<<Parsec.many S> E> A> p))))

Parsec.many_till: Π(S:*) Π(E:*) Π(A:*) Π(B:*) ∀(:(((Parsec S) E) A)) ∀(:(((Parsec S) E) B)) (((Parsec S) E) (List A))
  ΛS ΛE ΛA ΛB λp λq ((<<<Parsec.plus S> E> (List A)> ((<<<<Parsec.then S> E> B> (List A)> q) (<<<Parsec.pure S> E> (List A)> <List.nil A>))) ((<<<<Parsec.bind S> E> A> (List A)> p) λx ((<<<<Parsec.bind S> E> (List A)> (List A)> ((<<<<Parsec.many_till S> E> A> B> p) q)) λxs (<<<Parsec.pure S> E> (List A)> ((<List.cons A> x) xs)))))

Parsec.map: Π(S:*) Π(E:*) Π(A:*) Π(B:*) ∀(:∀(:A) B) ∀(:(((Parsec S) E) A)) (((Parsec S) E) B)
  ΛS ΛE ΛA ΛB λf λp ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error (((((<p X> s1) λs2 λa ((empty_value s2) (f a))) empty_error) λs2 λa ((eaten_value s2) (f a))) eaten_error)

Parsec.observing: Π(S:*) Π(E:*) Π(A:*) ∀(:(((Parsec S) E) A)) (((Parsec S) E) ((Either (Parsec.Error E)) A))
  ΛS ΛE ΛA λp ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error (((((<p X> s1) λs2 λx ((empty_value s2) (<<Either.right (Parsec.Error E)> A> x))) λs2 λe ((empty_value s2) (<<Either.left (Parsec.Error E)> A> e))) λs2 λx ((eaten_value s2) (<<Either.right (Parsec.Error E)> A> x))) λs2 λe ((eaten_value s2) (<<Either.left (Parsec.Error E)> A> e)))

Parsec.optional: Π(S:*) Π(E:*) Π(A:*) ∀(:(((Parsec S) E) A)) (((Parsec S) E) (Maybe A))
  ΛS ΛE ΛA λp ((<<<Parsec.plus S> E> (Maybe A)> ((<<<<Parsec.map S> E> A> (Maybe A)> <Maybe.some A>) p)) (<<<Parsec.pure S> E> (Maybe A)> <Maybe.none A>))

Parsec.parse: Π(S:*) Π(E:*) Π(A:*) ∀(p:(((Parsec S) E) A)) ∀(s:((Parsec.State S) E)) ((((Parsec.type S) E) A) ((<<<Parsec.run S> E> A> p) s))
  ΛS ΛE ΛA λp λs ((((<((<<<Parsec.run S> E> A> p) s) λt ((((Parsec.type S) E) A) t)> λ λx x) λ λe e) λ λx x) λ λe e)

Parsec.peek: Π(S:*) Π(E:*) Π(A:*) ∀(:(((Parsec S) E) A)) (((Parsec S) E) A)
  ΛS ΛE ΛA λp ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error (((((<p X> s1) λs2 λa ((empty_value s1) a)) empty_error) λs2 λa ((empty_value s1) a)) eaten_error)

Parsec.plus: Π(S:*) Π(E:*) Π(A:*) ∀(:(((Parsec S) E) A)) ∀(:(((Parsec S) E) A)) (((Parsec S) E) A)
  ΛS ΛE ΛA λp λq ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error (((((<p X> s1) empty_value) λs2 λp.err (((((<q X> s1) empty_value) λs3 λq.err ((empty_error ((<<Parsec.State.longest_match S> E> s2) s3)) ((<Parsec.Error.merge E> p.err) q.err))) eaten_value) λs3 λq.err ((empty_error ((<<Parsec.State.longest_match S> E> s2) s3)) ((<Parsec.Error.merge E> p.err) q.err)))) eaten_value) eaten_error)

Parsec.pure: Π(S:*) Π(E:*) Π(A:*) ∀(a:A) (((Parsec S) E) A)
  ΛS ΛE ΛA λa ΛX λs λempty_value λ λ λ ((empty_value s) a)

Parsec.run: Π(S:*) Π(E:*) Π(A:*) ∀(:(((Parsec S) E) A)) ∀(:((Parsec.State S) E)) (((Parsec.Reply S) E) A)
  ΛS ΛE ΛA λp λs (((((<p (((Parsec.Reply S) E) A)> s) <<<Parsec.Reply.empty_value S> E> A>) <<<Parsec.Reply.empty_error S> E> A>) <<<Parsec.Reply.eaten_value S> E> A>) <<<Parsec.Reply.eaten_error S> E> A>)

Parsec.run_default: Π(S:*) Π(E:*) Π(A:*) ∀(:(((Parsec S) E) A)) ∀(:String) ∀(:S) ((Either (Parsec.Error E)) A)
  ΛS ΛE ΛA λp λstr λs (<<<Parsec.Reply.to_either S> E> A> ((<<<Parsec.run S> E> A> p) ((<<Parsec.State.default S> E> str) s)))

Parsec.skip_many: Π(S:*) Π(E:*) Π(A:*) ∀(:(((Parsec S) E) A)) (((Parsec S) E) Unit)
  ΛS ΛE ΛA λp ((<<<Parsec.plus S> E> Unit> ((<<<<Parsec.then S> E> A> Unit> p) (<<<Parsec.skip_many S> E> A> p))) (<<<Parsec.pure S> E> Unit> Unit.new))

Parsec.take: Π(S:*) Π(E:*) Π(A:*) ∀(:String) ∀(:Nat) (((Parsec S) E) String)
  ΛS ΛE ΛA λerr λn ΛX λs1 λempty_value λempty_error λeaten_value λ (<s1 λ X> λinput λindex λerror λstate ((<((String.take_n n) input) λ X> ((empty_error s1) (((<Parsec.Error.make_trivial E> index) (<Maybe.some Parsec.Error.Item> Parsec.Error.Item.end_of_input)) (<List.single Parsec.Error.Item> (Parsec.Error.Item.label err))))) λp (<p λ X> λtook λrest $s2=((((<<Parsec.State.make S> E> rest) ((Nat.add index) n)) error) state);((eaten_value s2) took))))

Parsec.take_while: Π(S:*) Π(E:*) ∀(:∀(:Char) Bool) (((Parsec S) E) String)
  ΛS ΛE λf ΛX λs1 λempty_value λempty_error λeaten_value λ (<s1 λ X> λinput λindex λerror λstate (<((String.take_while f) input) λ X> λtook λrest $len=(String.length took);$s2=((((<<Parsec.State.make S> E> rest) ((Nat.add index) len)) error) state);((<took λ X> ((empty_value s2) took)) λ λ ((eaten_value s2) took))))

Parsec.take_while1: Π(S:*) Π(E:*) ∀(:String) ∀(:∀(:Char) Bool) (((Parsec S) E) String)
  ΛS ΛE λerr λf ΛX λs1 λempty_value λempty_error λeaten_value λ (<s1 λ X> λinput λindex λerror λstate (<((String.take_while f) input) λ X> λtook λrest $len=(String.length took);$s2=((((<<Parsec.State.make S> E> rest) ((Nat.add index) len)) error) state);((<took λ X> ((<input λ X> ((empty_error s2) (((<Parsec.Error.make_trivial E> index) (<Maybe.some Parsec.Error.Item> Parsec.Error.Item.end_of_input)) (<List.single Parsec.Error.Item> (Parsec.Error.Item.label err))))) λhead λ ((empty_error s2) (((<Parsec.Error.make_trivial E> index) (<Maybe.some Parsec.Error.Item> (Parsec.Error.Item.tokens (String.single head)))) (<List.single Parsec.Error.Item> (Parsec.Error.Item.label err)))))) λ λ ((eaten_value s2) took))))

Parsec.test1: String
  ((<<<Parsec.parse Unit> Unit> String> (<<Parsec.tokens Unit> Unit> ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) String.nil))) ((<<Parsec.State.default Unit> Unit> ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) String.nil)) Unit.new))

Parsec.then: Π(S:*) Π(E:*) Π(A:*) Π(B:*) ∀(:(((Parsec S) E) A)) ∀(:(((Parsec S) E) B)) (((Parsec S) E) B)
  ΛS ΛE ΛA ΛB λpa λpb ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error (((((<pa X> s1) λs2 λa (((((<pb X> s2) λs3 λb ((empty_value s3) b)) empty_error) λs3 λb ((eaten_value s3) b)) eaten_error)) empty_error) λs2 λa (((((<pb X> s2) λs3 λb ((eaten_value s3) b)) eaten_error) λs3 λb ((eaten_value s3) b)) eaten_error)) eaten_error)

Parsec.throw: Π(S:*) Π(E:*) Π(A:*) ∀(:(Parsec.Error E)) (((Parsec S) E) A)
  ΛS ΛE ΛA λe ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error ((empty_error s1) e)

Parsec.token: Π(S:*) Π(E:*) Π(A:*) ∀(:∀(:Char) (Maybe A)) ∀(:(List Parsec.Error.Item)) (((Parsec S) E) A)
  ΛS ΛE ΛA λf λes ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error (<s1 λ X> λinput λindex λerror λstate ((<input λ X> $unex=(<Maybe.some Parsec.Error.Item> Parsec.Error.Item.end_of_input);((empty_error s1) (((<Parsec.Error.make_trivial E> Nat.zero) unex) es))) λc λcs ((<(f c) λ X> $item=(Parsec.Error.Item.tokens (String.single c));$unex=(<Maybe.some Parsec.Error.Item> item);((empty_error s1) (((<Parsec.Error.make_trivial E> index) unex) es))) λx $s2=((((<<Parsec.State.make S> E> cs) (Nat.succ index)) error) state);((eaten_value s2) x))))

Parsec.tokens: Π(S:*) Π(E:*) ∀(:String) (((Parsec S) E) String)
  ΛS ΛE λstr ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error (<s1 λ X> λinput λindex λerror λstate $len=(String.length str);((<((String.take_n len) input) λ X> $unex=(<Maybe.some Parsec.Error.Item> Parsec.Error.Item.end_of_input);$expe=(<List.single Parsec.Error.Item> (Parsec.Error.Item.label (String.quote str)));((empty_error s1) (((<Parsec.Error.make_trivial E> Nat.zero) unex) expe))) λp (<p λ X> λtook λrest $s2=((((<<Parsec.State.make S> E> rest) ((Nat.add index) len)) error) state);((<((String.eql str) took) λ X> ((<str λ X> ((empty_value s2) str)) λ λ ((eaten_value s2) str))) $expe_label=(Parsec.Error.Item.label (String.quote str));$unex=((<took λ (Maybe Parsec.Error.Item)> <Maybe.none Parsec.Error.Item>) λ λ (<Maybe.some Parsec.Error.Item> (Parsec.Error.Item.tokens took)));$expe=(<List.single Parsec.Error.Item> expe_label);((empty_error s1) (((<Parsec.Error.make_trivial E> index) unex) expe))))))

Parsec.try: Π(S:*) Π(E:*) Π(A:*) ∀(:(((Parsec S) E) A)) (((Parsec S) E) A)
  ΛS ΛE ΛA λp ΛX λs1 λempty_value λempty_error λeaten_value λ (((((<p X> s1) empty_value) λs2 λe ((empty_error s1) e)) eaten_value) λs2 λe ((empty_error s1) e))

Parsec.type: ∀(S:*) ∀(E:*) ∀(A:*) ∀(:(((Parsec.Reply S) E) A)) *
  λS λE λA λreply ((((<reply λ *> λ λ A) λ λe (Parsec.Error E)) λ λ A) λ λe (Parsec.Error E))

Parsec.zero: Π(S:*) Π(E:*) Π(A:*) (((Parsec S) E) A)
  ΛS ΛE ΛA ΛX λs1 λempty_value λempty_error λeaten_value λeaten_error (<s1 λ X> λ λindex λ λ $e=(((<Parsec.Error.make_trivial E> index) <Maybe.none Parsec.Error.Item>) <List.nil Parsec.Error.Item>);((empty_error s1) e))

Parser.Error: *
  (Parsec.Error Unit)

Parser.Error.show: ∀(:Parser.Error) String
  λe ((<e λ String> λposition λunexpect λexpected ((String.concat ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))) ((String.concat (Nat.show position)) ((String.concat ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) String.nil)) ((String.concat ((<unexpect λ String> String.nil) λv ((String.concat ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil))))))))))))) ((String.concat (Parsec.Error.Item.show v)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) String.nil))))) ((String.concat ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil))))))))))) ((<List.show Parsec.Error.Item> Parsec.Error.Item.show) expected))))))) λposition λmessages ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil))))))

Parser.Reply: ∀(:*) *
  λA (((Parsec.Reply Unit) Unit) A)

Parser.State.default: ∀(:String) Parser.State
  λinput ((<<Parsec.State.default Unit> Unit> input) Unit.new)

Parser.State: *
  ((Parsec.State Unit) Unit)

Parser.any_char: (Parser Char)
  <<Parsec.any_char Unit> Unit>

Parser.ap: Π(A:*) Π(B:*) ∀(:(Parser ∀(:A) B)) ∀(:(Parser A)) (Parser B)
  ΛA ΛB λpf λpa ((<<<<Parsec.ap Unit> Unit> A> B> pf) pa)

Parser.bind: Π(A:*) Π(B:*) ∀(:(Parser A)) ∀(:∀(:A) (Parser B)) (Parser B)
  ΛA ΛB λpa λpf ((<<<<Parsec.bind Unit> Unit> A> B> pa) pf)

Parser.char: ∀(:Char) (Parser Char)
  λc (<<Parsec.char Unit> Unit> c)

Parser.choice: Π(A:*) ∀(:(List (Parser A))) (Parser A)
  ΛA λps (<<<Parsec.choice Unit> Unit> A> ps)

Parser.eof: (Parser Unit)
  <<Parsec.eof Unit> Unit>

Parser.fail: Π(A:*) ∀(:String) (Parser A)
  ΛA λmsg (<<<Parsec.fail Unit> Unit> A> msg)

Parser: ∀(:*) *
  λA (((Parsec Unit) Unit) A)

Parser.label: Π(A:*) ∀(:String) ∀(:(Parser A)) (Parser A)
  ΛA λlabel λp ((<<<Parsec.label Unit> Unit> A> label) p)

Parser.many: Π(A:*) ∀(:(Parser A)) (Parser (List A))
  ΛA λp (<<<Parsec.many Unit> Unit> A> p)

Parser.many_till: Π(A:*) Π(B:*) ∀(:(Parser A)) ∀(:(Parser B)) (Parser (List A))
  ΛA ΛB λp λq ((<Parser.plus (List A)> ((<<Parser.then B> (List A)> q) (<Parser.pure (List A)> <List.nil A>))) ((<<Parser.bind A> (List A)> p) λx ((<<Parser.bind (List A)> (List A)> ((<<Parser.many_till A> B> p) q)) λxs (<Parser.pure (List A)> ((<List.cons A> x) xs)))))

Parser.observing: Π(A:*) ∀(:(Parser A)) (Parser ((Either Parser.Error) A))
  ΛA λp (<<<Parsec.observing Unit> Unit> A> p)

Parser.optional: Π(A:*) ∀(:(Parser A)) (Parser (Maybe A))
  ΛA λp (<<<Parsec.optional Unit> Unit> A> p)

Parser.parse: Π(A:*) ∀(p:(Parser A)) ∀(s:String) ((Parser.type A) ((<Parser.run A> p) (Parser.State.default s)))
  ΛA λp λs ((<<<Parsec.parse Unit> Unit> A> p) (Parser.State.default s))

Parser.plus: Π(A:*) ∀(:(Parser A)) ∀(:(Parser A)) (Parser A)
  ΛA λp λq ((<<<Parsec.plus Unit> Unit> A> p) q)

Parser.pure: Π(A:*) ∀(a:A) (Parser A)
  ΛA λa ΛX λs λempty_value λ λ λ ((empty_value s) a)

Parser.run: Π(A:*) ∀(:(Parser A)) ∀(:Parser.State) (Parser.Reply A)
  ΛA λp λs ((<<<Parsec.run Unit> Unit> A> p) s)

Parser.run_default: Π(A:*) ∀(:(Parser A)) ∀(:String) (Parser.Reply A)
  ΛA λp λs ((<<<Parsec.run Unit> Unit> A> p) (Parser.State.default s))

Parser.run_either: Π(A:*) ∀(:(Parser A)) ∀(:String) ((Either Parser.Error) A)
  ΛA λp λs $reply=((<<<Parsec.run Unit> Unit> A> p) (Parser.State.default s));((((<reply λ ((Either Parser.Error) A)> λ λx (<<Either.right Parser.Error> A> x)) λ λe (<<Either.left Parser.Error> A> e)) λ λx (<<Either.right Parser.Error> A> x)) λ λe (<<Either.left Parser.Error> A> e))

Parser.skip_many: Π(A:*) ∀(:(Parser A)) (Parser Unit)
  ΛA λp (<<<Parsec.skip_many Unit> Unit> A> p)

Parser.take: Π(A:*) ∀(:String) ∀(:Nat) (Parser String)
  ΛA λerr λn ((<<<Parsec.take Unit> Unit> A> err) n)

Parser.take_while: ∀(:∀(:Char) Bool) (Parser String)
  λf (<<Parsec.take_while Unit> Unit> f)

Parser.take_while1: ∀(:String) ∀(:∀(:Char) Bool) (Parser String)
  λerr λf ((<<Parsec.take_while1 Unit> Unit> err) f)

Parser.then: Π(A:*) Π(B:*) ∀(:(Parser A)) ∀(:(Parser B)) (Parser B)
  ΛA ΛB λpa λpb ((<<<<Parsec.then Unit> Unit> A> B> pa) pb)

Parser.token: Π(A:*) ∀(:∀(:Char) (Maybe A)) ∀(:(List Parsec.Error.Item)) (Parser A)
  ΛA λf λes ((<<<Parsec.token Unit> Unit> A> f) es)

Parser.tokens: ∀(:String) (Parser String)
  λstr (<<Parsec.tokens Unit> Unit> str)

Parser.try: Π(A:*) ∀(:(Parser A)) (Parser A)
  ΛA λp (<<<Parsec.try Unit> Unit> A> p)

Parser.type: ∀(A:*) ∀(:(Parser.Reply A)) *
  λA λreply ((((Parsec.type Unit) Unit) A) reply)

Parser.zero: Π(A:*) (Parser A)
  ΛA <<<Parsec.zero Unit> Unit> A>

Research.core_in_core: String
  $defs=(Core.parse_defs ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));$term=((Core.Defs.term defs) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil)))));$type=((Core.Defs.type defs) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil)))));((<((((Core.typecheck term) type) defs) Nat.zero) λ String> λerr err) λtyp (Core.stringify typ))

Research.Var: *
  ((Pair Char) Nat)

Research.Var.new: ∀(:Char) ∀(:Nat) Research.Var
  <<Pair.new Char> Nat>

Research.Ctx: *
  (List Research.Var)

Research.Ctx.nil: Research.Ctx
  <List.nil Research.Var>

Research.Ctx.ext: ∀(:Char) ∀(:Nat) ∀(:Research.Ctx) Research.Ctx
  λnam λx (<List.cons Research.Var> ((Research.Var.new nam) x))

Research.Ctx.get: ∀(:Char) ∀(:Research.Ctx) (Maybe Nat)
  λchr λctx ((<ctx λ (Maybe Nat)> <Maybe.none Nat>) λh λt (<h λ (Maybe Nat)> λnam λvar ((<((U16.eql nam) chr) λ (Maybe Nat)> (<Maybe.some Nat> var)) ((Research.Ctx.get chr) t))))

Research.parse_fun.filt: ∀(:String) String
  (String.filter λc ((Bool.or ((U16.eql c) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) String.nil)))) ((U16.eql c) (Char.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil)))))

Research.parse_fun.typ0: ∀(:String) ∀(:Research.Ctx) *
  λstr λctx ((<str λ *> Unit) λnam λnxt (((Research.parse_fun.typ1 nam) nxt) ctx))

Research.parse_fun.typ1: ∀(:Char) ∀(:String) ∀(:Research.Ctx) *
  λnam λnxt λctx ((<nxt λ *> Nat) λh λt ∀(x:Nat) ((Research.parse_fun.typ0 ((String.cons h) t)) (((Research.Ctx.ext nam) x) ctx)))

Research.parse_fun.term: ∀(str:String) ∀(ctx:Research.Ctx) ((Research.parse_fun.typ0 str) ctx)
  λstr λctx ((<str λstr ((Research.parse_fun.typ0 str) ctx)> Unit.new) λnam λnxt ((<nxt λstr (((Research.parse_fun.typ1 nam) str) ctx)> ((<((Research.Ctx.get nam) ctx) λ Nat> Nat.zero) λn n)) λh λt λx ((Research.parse_fun.term ((String.cons h) t)) (((Research.Ctx.ext nam) x) ctx))))

Research.fun: ∀(str:String) ((Research.parse_fun.typ0 (Research.parse_fun.filt str)) Research.Ctx.nil)
  λstr ((Research.parse_fun.term (Research.parse_fun.filt str)) Research.Ctx.nil)

Research.crazy: ∀(:Nat) ∀(:Nat) ∀(:Nat) Nat
  (Research.fun ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil)))))))))))

Research.it_works: (((Equal Nat) Nat.1) (((Research.crazy Nat.0) Nat.1) Nat.2))
  <<Equal.to Nat> Nat.1>

Research.equal_mul: (((Equal Nat) ((Nat.mul ((Nat.mul Nat.32) Nat.16)) Nat.1)) ((Nat.mul ((Nat.mul Nat.16) Nat.32)) Nat.1))
  <<Equal.to Nat> ((Nat.mul ((Nat.mul Nat.16) Nat.32)) Nat.1)>

Research.floats: F64
  $f2=(F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));$f3=(F64.parse_binary ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));((F64.div f3) f2)

Research.nat_literals: (IO Unit)
  $a=(Nat.parse_decimal ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil)))))))))))))))))))))))))))))))))))));$b=(Nat.parse_decimal ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) String.nil)))))))))))))))))))))))))))))))))))));$s=(Nat.to_string_decimal ((Nat.mul a) b));((<IO.log Unit> s) λ (<IO.end Unit> Unit.new))

Set: *
  (Map Unit)

Set.get: ∀(:Bits) ∀(:Set) Bool
  λbits λset ((<((<Map.get Unit> bits) set) λ Bool> Bool.false) λ Bool.true)

Set.new: Set
  <Map.new Unit>

Set.set: ∀(:Bits) ∀(:Set) Set
  λbits λset (((<Map.set Unit> bits) Unit.new) set)

Show: ∀(x:String) *
  λx Πshow(P:∀(x:String) ∀(:(Show x)) *) ∀(msg:∀(x:String) ((P x) (Show.msg x))) ((P x) show)

Show.msg: ∀(x:String) (Show x)
  λx ΛP λmsg (msg x)

Sigma: ∀(A:*) ∀(B:∀(:A) *) *
  λA λB Πsigma(P:∀(:((Sigma A) B)) *) ∀(new:∀(a:A) ∀(b:(B a)) (P ((<<Sigma.new A> B> a) b))) (P sigma)

Sigma.fst: Π(A:*) Π(B:∀(:A) *) ∀(sig:((Sigma A) B)) A
  ΛA ΛB λsig (<sig λ A> λx λy x)

Sigma.new: Π(A:*) Π(B:∀(:A) *) ∀(a:A) ∀(:(B a)) ((Sigma A) B)
  ΛA ΛB λa λb ΛP λsigma ((sigma a) b)

Sigma.snd: Π(A:*) Π(B:∀(:A) *) ∀(sig:((Sigma A) B)) (B (<<Sigma.fst A> B> sig))
  ΛA ΛB λsig (<sig λsig (B (<<Sigma.fst A> B> sig))> λx λy y)

String.chunk: ∀(:Nat) ∀(:String) (Maybe String)
  λn λlist ((<n λ (Maybe String)> (<Maybe.some String> String.nil)) λpred ((<list λ (Maybe String)> <Maybe.none String>) λhead λtail ((<<Maybe.bind String> String> ((String.chunk pred) tail)) λx (<Maybe.some String> ((String.cons head) x)))))

String.concat: ∀(:String) ∀(:String) String
  λas λbs ((<as λ String> bs) λhead λtail ((String.cons head) ((String.concat tail) bs)))

String.cons: ∀(:Char) ∀(:String) String
  λhead λtail ΛP λstrnil λstrcons ((strcons head) tail)

String.drop: ∀(:Nat) ∀(:String) String
  λn λlist ((<n λ String> list) λpred ((<list λ String> String.nil) λhead λtail ((String.drop pred) tail)))

String.drop_until: ∀(:∀(:Char) Bool) ∀(:String) String
  λcond (String.drop_while λc (Bool.not (cond c)))

String.drop_while: ∀(:∀(:Char) Bool) ∀(:String) String
  λcond λstr ((<str λ String> String.nil) λstr.head λstr.tail ((<(cond str.head) λ String> ((String.drop_while cond) str.tail)) str))

String.eql: ∀(:String) ∀(:String) Bool
  λa λb ((<a λ Bool> ((<b λ Bool> Bool.true) λb.head λb.tail Bool.false)) λa.head λa.tail ((<b λ Bool> Bool.false) λb.head λb.tail ((Bool.and ((U16.eql a.head) b.head)) ((String.eql a.tail) b.tail))))

String.filter: ∀(:∀(:Char) Bool) ∀(:String) String
  λcond λstr ((<str λ String> String.nil) λstr.head λstr.tail (((<(cond str.head) λ ∀(:String) String> λt t) λt ((String.cons str.head) t)) ((String.filter cond) str.tail)))

String.flatten: ∀(:(List String)) String
  λas ((<as λ String> String.nil) λhead λtail ((String.concat head) (String.flatten tail)))

String: *
  Πstring(P:∀(:String) *) ∀(strnil:(P String.nil)) ∀(strcons:∀(head:Char) ∀(tail:String) (P ((String.cons head) tail))) (P string)

String.is_empty: ∀(:String) Bool
  λstr ((<str λ Bool> Bool.true) λhead λtail Bool.false)

String.length: ∀(:String) Nat
  λstr ((<str λ Nat> Nat.zero) λhead λtail (Nat.succ (String.length tail)))

String.nil: String
  ΛP λstrnil λstrcons strnil

String.quote: ∀(:String) String
  λstr ((String.cons Char.quote) ((String.concat str) (String.single Char.quote)))

String.reverse: ∀(:String) String
  λstr ((String.reverse.go str) String.nil)

String.reverse.go: ∀(:String) ∀(:String) String
  λstr λres ((<str λ String> res) λstr.head λstr.tail ((String.reverse.go str.tail) ((String.cons str.head) res)))

String.single: ∀(x:Char) String
  λx ((String.cons x) String.nil)

String.tail: ∀(:String) String
  λstr ((<str λ String> String.nil) λstr.head λstr.tail str.tail)

String.take: ∀(:Nat) ∀(:String) String
  λn λlist ((<list λ String> String.nil) λhead λtail ((<n λ String> String.nil) λpred ((String.cons head) ((String.take pred) tail))))

String.take_n.aux: ∀(:Nat) ∀(:String) ∀(:String) (Maybe ((Pair String) String))
  λn λstr λres ((<res λ (Maybe ((Pair String) String))> ((<n λ (Maybe ((Pair String) String))> (<Maybe.some ((Pair String) String)> ((<<Pair.new String> String> str) String.nil))) λ <Maybe.none ((Pair String) String)>)) λhead λtail ((<n λ (Maybe ((Pair String) String))> (<Maybe.some ((Pair String) String)> ((<<Pair.new String> String> str) res))) λpred (((String.take_n.aux pred) ((String.cons head) str)) tail)))

String.take_n: ∀(:Nat) ∀(:String) (Maybe ((Pair String) String))
  λn λstr ((<(((String.take_n.aux n) String.nil) str) λ (Maybe ((Pair String) String))> <Maybe.none ((Pair String) String)>) λp (<p λ (Maybe ((Pair String) String))> λx λy (<Maybe.some ((Pair String) String)> ((<<Pair.new String> String> (String.reverse x)) y))))

String.take_while.aux: ∀(:∀(:Char) Bool) ∀(:String) ∀(:String) ((Pair String) String)
  λf λstr λres ((<res λ ((Pair String) String)> ((<<Pair.new String> String> str) String.nil)) λhead λtail ((<(f head) λ ((Pair String) String)> (((String.take_while.aux f) ((String.cons head) str)) tail)) ((<<Pair.new String> String> str) res)))

String.take_while: ∀(:∀(:Char) Bool) ∀(:String) ((Pair String) String)
  λf λstr (<(((String.take_while.aux f) String.nil) str) λ ((Pair String) String)> λx λy ((<<Pair.new String> String> (String.reverse x)) y))

String.to_bits: ∀(:String) Bits
  λstr ((<str λ Bits> Bits.nil) λstr.head λstr.tail ((Bits.concat (U16.to_bits str.head)) (String.to_bits str.tail)))

String.to_list: ∀(:String) (List Char)
  λstr ((<str λ (List Char)> <List.nil Char>) λstr.head λstr.tail ((<List.cons Char> str.head) (String.to_list str.tail)))

String.to_set: ∀(:String) Set
  λstr ((<str λ Set> Set.new) λstr.head λstr.tail ((Set.set (U16.to_bits str.head)) (String.to_set str.tail)))

String.to_stringifier: ∀(:String) Stringifier
  λstr ((<str λ Stringifier> λx x) λstr.head λstr.tail λx ((String.cons str.head) ((String.to_stringifier str.tail) x)))

Stringifier.concat: ∀(:Stringifier) ∀(:Stringifier) Stringifier
  λa λb λx (a (b x))

Stringifier: *
  ∀(:String) String

Stringifier.to_string: ∀(:Stringifier) String
  λstr (str String.nil)

Subset: ∀(A:*) ∀(B:∀(:A) *) *
  λA λB Πsubset(P:∀(:((Subset A) B)) *) ∀(new:∀(a:A) Π(b:(B a)) (P <(<<Subset.new A> B> a) b>)) (P subset)

Subset.new: Π(A:*) Π(B:∀(:A) *) ∀(a:A) Π(b:(B a)) ((Subset A) B)
  ΛA ΛB λa Λb ΛP λsubset <(subset a) b>

TaelinArena.Constants.POS_X_KEY: Bits
  (Bits.0 (Bits.0 (Bits.0 (Bits.1 (Bits.1 (Bits.1 (Bits.0 (Bits.1 Bits.nil))))))))

TaelinArena.Constants.POS_Y_KEY: Bits
  (Bits.0 (Bits.1 (Bits.1 (Bits.1 (Bits.0 (Bits.1 (Bits.0 (Bits.1 Bits.nil))))))))

TaelinArena.Game.ActionId: *
  F64

TaelinArena.Game.Buff: *
  Πbuff(P:∀(:TaelinArena.Game.Buff) *) ∀(shielded:∀(dur:F64) ∀(val:F64) (P ((TaelinArena.Game.Buff.shielded dur) val))) ∀(slowed:∀(dur:F64) ∀(val:F64) (P ((TaelinArena.Game.Buff.slowed dur) val))) ∀(hasted:∀(dur:F64) ∀(val:F64) (P ((TaelinArena.Game.Buff.hasted dur) val))) ∀(silenced:∀(dur:F64) (P (TaelinArena.Game.Buff.silenced dur))) ∀(rooted:∀(dur:F64) (P (TaelinArena.Game.Buff.rooted dur))) ∀(stuned:∀(dur:F64) (P (TaelinArena.Game.Buff.stuned dur))) (P buff)

TaelinArena.Game.Buff.hasted: ∀(:F64) ∀(:F64) TaelinArena.Game.Buff
  λdur λval ΛP λshielded λslowed λhasted λsilenced λrooted λstuned ((hasted dur) val)

TaelinArena.Game.Buff.rooted: ∀(:F64) TaelinArena.Game.Buff
  λdur ΛP λshielded λslowed λhasted λsilenced λrooted λstuned (rooted dur)

TaelinArena.Game.Buff.shielded: ∀(:F64) ∀(:F64) TaelinArena.Game.Buff
  λdur λval ΛP λshielded λslowed λhasted λsilenced λrooted λstuned ((shielded dur) val)

TaelinArena.Game.Buff.silenced: ∀(:F64) TaelinArena.Game.Buff
  λdur ΛP λshielded λslowed λhasted λsilenced λrooted λstuned (silenced dur)

TaelinArena.Game.Buff.slowed: ∀(:F64) ∀(:F64) TaelinArena.Game.Buff
  λdur λval ΛP λshielded λslowed λhasted λsilenced λrooted λstuned ((slowed dur) val)

TaelinArena.Game.Buff.stuned: ∀(:F64) TaelinArena.Game.Buff
  λdur ΛP λshielded λslowed λhasted λsilenced λrooted λstuned (stuned dur)

TaelinArena.Game.Command: *
  Πcommand(P:∀(:TaelinArena.Game.Command) *) ∀(new:∀(pid:TaelinArena.Game.PlayerId) ∀(inp:TaelinArena.Game.Input) (P ((TaelinArena.Game.Command.new pid) inp))) (P command)

TaelinArena.Game.Command.new: ∀(:TaelinArena.Game.PlayerId) ∀(:TaelinArena.Game.Input) TaelinArena.Game.Command
  λpid λinp ΛP λnew ((new pid) inp)

TaelinArena.Game.Effect.damage: ∀(:F64) TaelinArena.Game.Effect
  λdmg ΛP λheal λdamage λrepulse λimpulse λslow λhaste λshield λsilence λroot λstun λteleport (damage dmg)

TaelinArena.Game.Effect: *
  Πeffect(P:∀(:TaelinArena.Game.Effect) *) ∀(heal:∀(lif:F64) (P (TaelinArena.Game.Effect.heal lif))) ∀(damage:∀(dmg:F64) (P (TaelinArena.Game.Effect.damage dmg))) ∀(repulse:∀(mag:F64) (P (TaelinArena.Game.Effect.repulse mag))) ∀(impulse:∀(mag:F64) ∀(dir:F64.V3) (P ((TaelinArena.Game.Effect.impulse mag) dir))) ∀(slow:∀(dur:F64) ∀(val:F64) (P ((TaelinArena.Game.Effect.slow dur) val))) ∀(haste:∀(dur:F64) ∀(val:F64) (P ((TaelinArena.Game.Effect.haste dur) val))) ∀(shield:∀(dur:F64) ∀(val:F64) (P ((TaelinArena.Game.Effect.shield dur) val))) ∀(silence:∀(dur:F64) (P (TaelinArena.Game.Effect.silence dur))) ∀(root:∀(dur:F64) (P (TaelinArena.Game.Effect.root dur))) ∀(stun:∀(dur:F64) (P (TaelinArena.Game.Effect.stun dur))) ∀(teleport:∀(to_pos:F64.V3) ∀(all:F64) (P ((TaelinArena.Game.Effect.teleport to_pos) all))) (P effect)

TaelinArena.Game.Effect.haste: ∀(:F64) ∀(:F64) TaelinArena.Game.Effect
  λdur λval ΛP λheal λdamage λrepulse λimpulse λslow λhaste λshield λsilence λroot λstun λteleport ((haste dur) val)

TaelinArena.Game.Effect.heal: ∀(:F64) TaelinArena.Game.Effect
  λlif ΛP λheal λdamage λrepulse λimpulse λslow λhaste λshield λsilence λroot λstun λteleport (heal lif)

TaelinArena.Game.Effect.impulse: ∀(:F64) ∀(:F64.V3) TaelinArena.Game.Effect
  λmag λdir ΛP λheal λdamage λrepulse λimpulse λslow λhaste λshield λsilence λroot λstun λteleport ((impulse mag) dir)

TaelinArena.Game.Effect.repulse: ∀(:F64) TaelinArena.Game.Effect
  λmag ΛP λheal λdamage λrepulse λimpulse λslow λhaste λshield λsilence λroot λstun λteleport (repulse mag)

TaelinArena.Game.Effect.root: ∀(:F64) TaelinArena.Game.Effect
  λdur ΛP λheal λdamage λrepulse λimpulse λslow λhaste λshield λsilence λroot λstun λteleport (root dur)

TaelinArena.Game.Effect.shield: ∀(:F64) ∀(:F64) TaelinArena.Game.Effect
  λdur λval ΛP λheal λdamage λrepulse λimpulse λslow λhaste λshield λsilence λroot λstun λteleport ((shield dur) val)

TaelinArena.Game.Effect.silence: ∀(:F64) TaelinArena.Game.Effect
  λdur ΛP λheal λdamage λrepulse λimpulse λslow λhaste λshield λsilence λroot λstun λteleport (silence dur)

TaelinArena.Game.Effect.slow: ∀(:F64) ∀(:F64) TaelinArena.Game.Effect
  λdur λval ΛP λheal λdamage λrepulse λimpulse λslow λhaste λshield λsilence λroot λstun λteleport ((slow dur) val)

TaelinArena.Game.Effect.stun: ∀(:F64) TaelinArena.Game.Effect
  λdur ΛP λheal λdamage λrepulse λimpulse λslow λhaste λshield λsilence λroot λstun λteleport (stun dur)

TaelinArena.Game.Effect.teleport: ∀(:F64.V3) ∀(:F64) TaelinArena.Game.Effect
  λto_pos λall ΛP λheal λdamage λrepulse λimpulse λslow λhaste λshield λsilence λroot λstun λteleport ((teleport to_pos) all)

TaelinArena.Game.Game: *
  Πgame(P:∀(:TaelinArena.Game.Game) *) ∀(new:∀(stage:(List TaelinArena.Game.Thing)) (P (TaelinArena.Game.Game.new stage))) (P game)

TaelinArena.Game.Game.new: ∀(:(List TaelinArena.Game.Thing)) TaelinArena.Game.Game
  λstage ΛP λnew (new stage)

TaelinArena.Game.Hit: *
  Πhit(P:∀(:TaelinArena.Game.Hit) *) ∀(new:∀(eff:(List TaelinArena.Game.Effect)) ∀(pos:F64.V3) ∀(dir:F64.V3) ∀(box:TaelinArena.Game.Hitbox) (P ((((TaelinArena.Game.Hit.new eff) pos) dir) box))) (P hit)

TaelinArena.Game.Hit.new: ∀(:(List TaelinArena.Game.Effect)) ∀(:F64.V3) ∀(:F64.V3) ∀(:TaelinArena.Game.Hitbox) TaelinArena.Game.Hit
  λeff λpos λdir λbox ΛP λnew ((((new eff) pos) dir) box)

TaelinArena.Game.Hitbox.cbox: ∀(:F64) TaelinArena.Game.Hitbox
  λrad ΛP λnbox λcbox λpbox (cbox rad)

TaelinArena.Game.Hitbox: *
  Πhitbox(P:∀(:TaelinArena.Game.Hitbox) *) ∀(nbox:(P TaelinArena.Game.Hitbox.nbox)) ∀(cbox:∀(rad:F64) (P (TaelinArena.Game.Hitbox.cbox rad))) ∀(pbox:∀(pts:(List F64.V3)) (P (TaelinArena.Game.Hitbox.pbox pts))) (P hitbox)

TaelinArena.Game.Hitbox.nbox: TaelinArena.Game.Hitbox
  ΛP λnbox λcbox λpbox nbox

TaelinArena.Game.Hitbox.pbox: ∀(:(List F64.V3)) TaelinArena.Game.Hitbox
  λpts ΛP λnbox λcbox λpbox (pbox pts)

TaelinArena.Game.Input.cmsg: ∀(:String) TaelinArena.Game.Input
  λtxt ΛP λsdir λkey0 λkey1 λkey2 λkey3 λkey4 λkey5 λcmsg (cmsg txt)

TaelinArena.Game.Input: *
  Πinput(P:∀(:TaelinArena.Game.Input) *) ∀(sdir:∀(dir:F64.V3) (P (TaelinArena.Game.Input.sdir dir))) ∀(key0:∀(pos:F64.V3) (P (TaelinArena.Game.Input.key0 pos))) ∀(key1:∀(pos:F64.V3) (P (TaelinArena.Game.Input.key1 pos))) ∀(key2:∀(pos:F64.V3) (P (TaelinArena.Game.Input.key2 pos))) ∀(key3:∀(pos:F64.V3) (P (TaelinArena.Game.Input.key3 pos))) ∀(key4:∀(pos:F64.V3) (P (TaelinArena.Game.Input.key4 pos))) ∀(key5:∀(pos:F64.V3) (P (TaelinArena.Game.Input.key5 pos))) ∀(cmsg:∀(txt:String) (P (TaelinArena.Game.Input.cmsg txt))) (P input)

TaelinArena.Game.Input.key0: ∀(:F64.V3) TaelinArena.Game.Input
  λpos ΛP λsdir λkey0 λkey1 λkey2 λkey3 λkey4 λkey5 λcmsg (key0 pos)

TaelinArena.Game.Input.key1: ∀(:F64.V3) TaelinArena.Game.Input
  λpos ΛP λsdir λkey0 λkey1 λkey2 λkey3 λkey4 λkey5 λcmsg (key1 pos)

TaelinArena.Game.Input.key2: ∀(:F64.V3) TaelinArena.Game.Input
  λpos ΛP λsdir λkey0 λkey1 λkey2 λkey3 λkey4 λkey5 λcmsg (key2 pos)

TaelinArena.Game.Input.key3: ∀(:F64.V3) TaelinArena.Game.Input
  λpos ΛP λsdir λkey0 λkey1 λkey2 λkey3 λkey4 λkey5 λcmsg (key3 pos)

TaelinArena.Game.Input.key4: ∀(:F64.V3) TaelinArena.Game.Input
  λpos ΛP λsdir λkey0 λkey1 λkey2 λkey3 λkey4 λkey5 λcmsg (key4 pos)

TaelinArena.Game.Input.key5: ∀(:F64.V3) TaelinArena.Game.Input
  λpos ΛP λsdir λkey0 λkey1 λkey2 λkey3 λkey4 λkey5 λcmsg (key5 pos)

TaelinArena.Game.Input.sdir: ∀(:F64.V3) TaelinArena.Game.Input
  λdir ΛP λsdir λkey0 λkey1 λkey2 λkey3 λkey4 λkey5 λcmsg (sdir dir)

TaelinArena.Game.Light: *
  Πlight(P:∀(:TaelinArena.Game.Light) *) ∀(new:∀(pos:F64.V3) ∀(rad:F64) ∀(rng:F64) ∀(sub:F64.V3) ∀(add:F64.V3) (P (((((TaelinArena.Game.Light.new pos) rad) rng) sub) add))) (P light)

TaelinArena.Game.Light.new: ∀(:F64.V3) ∀(:F64) ∀(:F64) ∀(:F64.V3) ∀(:F64.V3) TaelinArena.Game.Light
  λpos λrad λrng λsub λadd ΛP λnew (((((new pos) rad) rng) sub) add)

TaelinArena.Game.ModelId: *
  F64

F64.Ordering.EQ: F64.Ordering
  ΛP λF64.Ordering.LT λF64.Ordering.EQ λF64.Ordering.GT F64.Ordering.EQ

F64.Ordering.GT: F64.Ordering
  ΛP λF64.Ordering.LT λF64.Ordering.EQ λF64.Ordering.GT F64.Ordering.GT

F64.Ordering.LT: F64.Ordering
  ΛP λF64.Ordering.LT λF64.Ordering.EQ λF64.Ordering.GT F64.Ordering.LT

F64.Ordering: *
  ΠF64.ordering(P:∀(:F64.Ordering) *) ∀(LT:(P F64.Ordering.LT)) ∀(EQ:(P F64.Ordering.EQ)) ∀(GT:(P F64.Ordering.GT)) (P F64.ordering)

TaelinArena.Game.PlayerId: *
  F64

TaelinArena.Game.SideId: *
  F64

TaelinArena.Game.Thing: *
  Πthing(P:∀(:TaelinArena.Game.Thing) *) ∀(new:∀(fun:TaelinArena.Game.TxFunction) ∀(pid:TaelinArena.Game.PlayerId) ∀(mid:TaelinArena.Game.ModelId) ∀(act:TaelinArena.Game.ActionId) ∀(sid:TaelinArena.Game.SideId) ∀(stt:(Map F64)) ∀(nam:String) ∀(lit:(List TaelinArena.Game.Light)) ∀(tik:F64) ∀(pos:F64.V3) ∀(mov:F64) ∀(bst:F64) ∀(pad:F64.V3) ∀(dir:F64.V3) ∀(trg:F64.V3) ∀(vel:F64.V3) ∀(box:TaelinArena.Game.Hitbox) ∀(wei:F64) ∀(mhp:F64) ∀(dmg:F64) ∀(knk:F64.V3) ∀(buf:(List TaelinArena.Game.Buff)) ∀(chi:(List TaelinArena.Game.Thing)) ∀(hit:(List TaelinArena.Game.Hit)) ∀(rst:Bool) ∀(die:Bool) (P ((((((((((((((((((((((((((TaelinArena.Game.Thing.new fun) pid) mid) act) sid) stt) nam) lit) tik) pos) mov) bst) pad) dir) trg) vel) box) wei) mhp) dmg) knk) buf) chi) hit) rst) die))) (P thing)

TaelinArena.Game.Thing.new: ∀(:TaelinArena.Game.TxFunction) ∀(:TaelinArena.Game.PlayerId) ∀(:TaelinArena.Game.ModelId) ∀(:TaelinArena.Game.ActionId) ∀(:TaelinArena.Game.SideId) ∀(:(Map F64)) ∀(:String) ∀(:(List TaelinArena.Game.Light)) ∀(:F64) ∀(:F64.V3) ∀(:F64) ∀(:F64) ∀(:F64.V3) ∀(:F64.V3) ∀(:F64.V3) ∀(:F64.V3) ∀(:TaelinArena.Game.Hitbox) ∀(:F64) ∀(:F64) ∀(:F64) ∀(:F64.V3) ∀(:(List TaelinArena.Game.Buff)) ∀(:(List TaelinArena.Game.Thing)) ∀(:(List TaelinArena.Game.Hit)) ∀(:Bool) ∀(:Bool) TaelinArena.Game.Thing
  λfun λpid λmid λact λsid λstt λnam λlit λtik λpos λmov λbst λpad λdir λtrg λvel λbox λwei λmhp λdmg λknk λbuf λchi λhit λrst λdie ΛP λnew ((((((((((((((((((((((((((new fun) pid) mid) act) sid) stt) nam) lit) tik) pos) mov) bst) pad) dir) trg) vel) box) wei) mhp) dmg) knk) buf) chi) hit) rst) die)

TaelinArena.Game.TxFunction: *
  ∀(:TaelinArena.Game.Thing) TaelinArena.Game.Thing

TaelinArena.Game.animate: ∀(self:TaelinArena.Game.Thing) ∀(boost:F64) ∀(model:F64) ∀(count:F64) ∀(durat:F64) TaelinArena.Game.Thing
  λself λboost λmodel λcount λdurat $self=((((((TaelinArena.Game.animate_between self) boost) model) count) F64.0) durat);$self=((TaelinArena.Game.reset self) ((F64.sub durat) F64.1));self

TaelinArena.Game.animate_between: ∀(self:TaelinArena.Game.Thing) ∀(boost:F64) ∀(model:F64) ∀(count:F64) ∀(from:F64) ∀(til:F64) TaelinArena.Game.Thing
  λself λboost λmodel λcount λfrom λtil $self.tik=(TaelinArena.Game.get_thing_tik self);$self.pad=(TaelinArena.Game.get_thing_pad self);$self.act=(TaelinArena.Game.get_thing_act self);$self.dir=(TaelinArena.Game.get_thing_dir self);(((<Bool.if TaelinArena.Game.Thing> (((F64.is_between from) til) self.tik)) $set_bst=((TaelinArena.Game.set_thing_bst self) boost);$set_dir=((TaelinArena.Game.set_thing_dir self) $pad_len=(F64.V3.len self.pad);(((<Bool.if F64.V3> ((Bool.and ((F64.ltn F64.0) self.act)) ((F64.eql pad_len) F64.0))) (TaelinArena.Game.targ_dir self)) (((<Bool.if F64.V3> ((F64.ltn F64.0) pad_len)) (F64.V3.norm self.pad)) self.dir)));$set_mid=((TaelinArena.Game.set_thing_mid self) $duration=((F64.sub til) from);$curr_tik=((F64.sub self.tik) from);$curr_tim=((F64.div curr_tik) duration);((F64.add model) ((F64.mod (F64.floor ((F64.mul curr_tim) count))) count)));self) self)

TaelinArena.Game.animate_die: ∀(self:TaelinArena.Game.Thing) ∀(boost:F64) ∀(model:F64) ∀(count:F64) ∀(durat:F64) TaelinArena.Game.Thing
  λself λboost λmodel λcount λdurat $self=((((((TaelinArena.Game.animate_between self) boost) model) count) F64.0) durat);$self=((TaelinArena.Game.die self) ((F64.sub durat) F64.1));self

TaelinArena.Game.animate_with_blink: ∀(self:TaelinArena.Game.Thing) ∀(boost:F64) ∀(model_atk:F64) ∀(model_idle:F64) ∀(count:F64) ∀(from:F64) ∀(til:F64) TaelinArena.Game.Thing
  λself λboost λmodel_atk λmodel_idle λcount λfrom λtil $self=((((((TaelinArena.Game.animate_between self) boost) model_atk) count) from) til);$self=((((((TaelinArena.Game.animate_between self) boost) model_idle) F64.1) til) ((F64.add til) F64.1));$self=((TaelinArena.Game.reset self) til);self

TaelinArena.Game.at_dist: ∀(:TaelinArena.Game.Thing) ∀(:F64) F64.V3
  λself λdist $dir=(TaelinArena.Game.targ_dir self);$pos=(TaelinArena.Game.get_thing_pos self);((F64.V3.add pos) ((F64.V3.scale dist) dir))

TaelinArena.Game.at_max_dist: ∀(:TaelinArena.Game.Thing) ∀(:F64) F64.V3
  λself λmax_range $self_pos=(TaelinArena.Game.get_thing_pos self);$self_trg=(TaelinArena.Game.get_thing_trg self);$dist_max=((F64.V3.dist self_pos) ((TaelinArena.Game.at_dist self) max_range));$dist_trg=((F64.V3.dist self_pos) self_trg);$less_than=((F64.ltn dist_trg) dist_max);(((<F64.if F64.V3> (F64.from_bool less_than)) ((TaelinArena.Game.at_dist self) dist_trg)) ((TaelinArena.Game.at_dist self) max_range))

TaelinArena.Game.at_min_dist: ∀(:TaelinArena.Game.Thing) ∀(:F64) F64.V3
  λself λmin_range $self_pos=(TaelinArena.Game.get_thing_pos self);$self_trg=(TaelinArena.Game.get_thing_trg self);$dist_min=((F64.V3.dist self_pos) ((TaelinArena.Game.at_dist self) min_range));$dist_trg=((F64.V3.dist self_pos) self_trg);$less_than=((F64.ltn dist_min) dist_trg);(((<F64.if F64.V3> (F64.from_bool less_than)) ((TaelinArena.Game.at_dist self) dist_trg)) ((TaelinArena.Game.at_dist self) min_range))

TaelinArena.Game.between_dist: ∀(:TaelinArena.Game.Thing) ∀(:F64) ∀(:F64) F64.V3
  λself λmin_range λmax_range $self_pos=(TaelinArena.Game.get_thing_pos self);$self_trg=(TaelinArena.Game.get_thing_trg self);$dist_trg=((F64.V3.dist self_pos) self_trg);$min=((F64.min max_range) dist_trg);$max=((F64.max min_range) min);((TaelinArena.Game.at_dist self) max)

TaelinArena.Game.blink: ∀(self:TaelinArena.Game.Thing) ∀(at_tik:F64) ∀(to_pos:F64.V3) TaelinArena.Game.Thing
  λself λat_tik λto_pos $rooted=(TaelinArena.Game.is_rooted self);$self.tik=(TaelinArena.Game.get_thing_tik self);$self.pos=(TaelinArena.Game.get_thing_pos self);((<rooted λ TaelinArena.Game.Thing> self) $new_pos=(((<Bool.if F64.V3> ((F64.eql self.tik) at_tik)) to_pos) self.pos);((TaelinArena.Game.set_thing_pos self) new_pos))

TaelinArena.Game.cast: ∀(:TaelinArena.Game.Thing) ∀(:F64) ∀(:(List TaelinArena.Game.Hit)) TaelinArena.Game.Thing
  λself λat_tik λdo_hit $curr_tik=(TaelinArena.Game.get_thing_tik self);((<((F64.eql curr_tik) at_tik) λ TaelinArena.Game.Thing> ((TaelinArena.Game.set_thing_hit self) do_hit)) self)

TaelinArena.Game.combine_mov_buffs: ∀(:TaelinArena.Game.Buff) ∀(:F64) F64
  λbuff λi ((((((<buff λ F64> λbuff.dur λbuff.val i) λbuff.dur λbuff.val ((F64.mul i) buff.val)) λbuff.dur λbuff.val ((F64.mul i) buff.val)) λbuff.dur i) λbuff.dur F64.0) λbuff.dur F64.0)

F64.compare_numbers: ∀(:F64) ∀(:F64) F64.Ordering
  λa λb (((<Bool.if F64.Ordering> ((F64.eql a) b)) F64.Ordering.EQ) (((<Bool.if F64.Ordering> ((F64.ltn b) a)) F64.Ordering.GT) F64.Ordering.LT))

TaelinArena.Game.create_at: ∀(self:TaelinArena.Game.Thing) ∀(at_tik:F64) ∀(new_thing:TaelinArena.Game.TxFunction) TaelinArena.Game.Thing
  λself λat_tik λnew_thing $self.tik=(TaelinArena.Game.get_thing_tik self);$self.pid=(TaelinArena.Game.get_thing_pid self);$self.pos=(TaelinArena.Game.get_thing_pos self);(((<Bool.if TaelinArena.Game.Thing> ((F64.eql self.tik) at_tik)) $self=((TaelinArena.Game.set_thing_fun self) new_thing);$self=((TaelinArena.Game.set_thing_pid self) self.pid);$self=((TaelinArena.Game.set_thing_pos self) self.pos);self) self)

TaelinArena.Game.dash: ∀(self:TaelinArena.Game.Thing) ∀(speed:F64) ∀(from_tik:F64) ∀(til_tik:F64) TaelinArena.Game.Thing
  λself λspeed λfrom_tik λtil_tik $rooted=(TaelinArena.Game.is_rooted self);$self.tik=(TaelinArena.Game.get_thing_tik self);(((<Bool.if TaelinArena.Game.Thing> rooted) self) $is_between_tik=(((F64.is_between from_tik) til_tik) self.tik);$new_vel=(((<Bool.if F64.V3> is_between_tik) $self.pos=(TaelinArena.Game.get_thing_pos self);$self.trg=(TaelinArena.Game.get_thing_trg self);$self.dir=(TaelinArena.Game.get_thing_dir self);((F64.V3.scale speed) (((F64.V3.look_at self.pos) self.trg) self.dir))) (((F64.V3.new F64.0) F64.0) F64.0));((TaelinArena.Game.set_thing_vel self) new_vel))

TaelinArena.Game.die: ∀(:TaelinArena.Game.Thing) ∀(:F64) TaelinArena.Game.Thing
  λself λat_tik $curr_tik=(TaelinArena.Game.get_thing_tik self);$should_die=((F64.gtn curr_tik) ((F64.sub at_tik) F64.1));((<should_die λ TaelinArena.Game.Thing> ((TaelinArena.Game.set_thing_die self) Bool.true)) self)

TaelinArena.Game.end_thing: ∀(self:TaelinArena.Game.Thing) ∀(tx:TaelinArena.Game.TxFunction) ∀(after_tiks:F64) ∀(stt_key:Bits) TaelinArena.Game.Thing
  λself λtx λafter_tiks λstt_key $self.stt=(TaelinArena.Game.get_thing_stt self);$current_tik=((<Map.get F64> stt_key) self.stt);$empty_stt=(((<Map.set F64> stt_key) after_tiks) self.stt);((<current_tik λ TaelinArena.Game.Thing> ((TaelinArena.Game.set_thing_stt self) empty_stt)) λcurrent_tik.value (((<Bool.if TaelinArena.Game.Thing> ((F64.eql current_tik.value) F64.0)) $self.pid=(TaelinArena.Game.get_thing_pid self);$self.pos=(TaelinArena.Game.get_thing_pos self);$self=((TaelinArena.Game.set_thing_fun self) tx);$self=((TaelinArena.Game.set_thing_pid self) self.pid);$self=((TaelinArena.Game.set_thing_pos self) self.pos);$self=((TaelinArena.Game.set_thing_stt self) empty_stt);self) $new_stt=(((<Map.set F64> stt_key) (((<Bool.if F64> ((F64.ltn F64.0) current_tik.value)) ((F64.sub current_tik.value) F64.1)) F64.0)) self.stt);((TaelinArena.Game.set_thing_stt self) new_stt)))

TaelinArena.Game.get_position_by_pid: ∀(:TaelinArena.Game.PlayerId) ∀(:TaelinArena.Game.Game) F64.V3
  λpid λgm ((<((TaelinArena.Game.get_thing_by_pid pid) gm) λ F64.V3> (((F64.V3.new F64.0) F64.0) F64.0)) λfound (TaelinArena.Game.get_thing_pos found))

TaelinArena.Game.get_stt_value: ∀(:TaelinArena.Game.Thing) ∀(:Bits) F64
  λself λstt_key $stt=(TaelinArena.Game.get_thing_stt self);((<((<Map.get F64> stt_key) stt) λ F64> F64.0) λresult.value result.value)

TaelinArena.Game.get_stt_value_v3: ∀(self:TaelinArena.Game.Thing) F64.V3
  λself $x=((TaelinArena.Game.get_stt_value self) TaelinArena.Constants.POS_X_KEY);$y=((TaelinArena.Game.get_stt_value self) TaelinArena.Constants.POS_Y_KEY);(((F64.V3.new x) y) F64.0)

TaelinArena.Game.get_thing_act: ∀(thi:TaelinArena.Game.Thing) TaelinArena.Game.ActionId
  λthi (<thi λ TaelinArena.Game.ActionId> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.act)

TaelinArena.Game.get_thing_box: ∀(thi:TaelinArena.Game.Thing) TaelinArena.Game.Hitbox
  λthi (<thi λ TaelinArena.Game.Hitbox> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.box)

TaelinArena.Game.get_thing_bst: ∀(thi:TaelinArena.Game.Thing) F64
  λthi (<thi λ F64> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.bst)

TaelinArena.Game.get_thing_buf: ∀(thi:TaelinArena.Game.Thing) (List TaelinArena.Game.Buff)
  λthi (<thi λ (List TaelinArena.Game.Buff)> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.buf)

TaelinArena.Game.get_thing_by_pid.cond: ∀(:TaelinArena.Game.PlayerId) ∀(:TaelinArena.Game.Thing) Bool
  λpid λthi $thi.pid=(TaelinArena.Game.get_thing_pid thi);((F64.eql pid) thi.pid)

TaelinArena.Game.get_thing_by_pid: ∀(:TaelinArena.Game.PlayerId) ∀(:TaelinArena.Game.Game) (Maybe TaelinArena.Game.Thing)
  λpid λgm (<gm λ (Maybe TaelinArena.Game.Thing)> λgm.stage ((<List.find TaelinArena.Game.Thing> (TaelinArena.Game.get_thing_by_pid.cond pid)) gm.stage))

TaelinArena.Game.get_thing_chi: ∀(thi:TaelinArena.Game.Thing) (List TaelinArena.Game.Thing)
  λthi (<thi λ (List TaelinArena.Game.Thing)> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.chi)

TaelinArena.Game.get_thing_die: ∀(thi:TaelinArena.Game.Thing) Bool
  λthi (<thi λ Bool> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.die)

TaelinArena.Game.get_thing_dir: ∀(thi:TaelinArena.Game.Thing) F64.V3
  λthi (<thi λ F64.V3> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.dir)

TaelinArena.Game.get_thing_dmg: ∀(thi:TaelinArena.Game.Thing) F64
  λthi (<thi λ F64> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.dmg)

TaelinArena.Game.get_thing_fun: ∀(thi:TaelinArena.Game.Thing) TaelinArena.Game.TxFunction
  λthi (<thi λ TaelinArena.Game.TxFunction> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.fun)

TaelinArena.Game.get_thing_hit: ∀(thi:TaelinArena.Game.Thing) (List TaelinArena.Game.Hit)
  λthi (<thi λ (List TaelinArena.Game.Hit)> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.hit)

TaelinArena.Game.get_thing_knk: ∀(thi:TaelinArena.Game.Thing) F64.V3
  λthi (<thi λ F64.V3> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.knk)

TaelinArena.Game.get_thing_lit: ∀(thi:TaelinArena.Game.Thing) (List TaelinArena.Game.Light)
  λthi (<thi λ (List TaelinArena.Game.Light)> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.lit)

TaelinArena.Game.get_thing_mhp: ∀(thi:TaelinArena.Game.Thing) F64
  λthi (<thi λ F64> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.mhp)

TaelinArena.Game.get_thing_mid: ∀(thi:TaelinArena.Game.Thing) TaelinArena.Game.ModelId
  λthi (<thi λ TaelinArena.Game.ModelId> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.mid)

TaelinArena.Game.get_thing_mov: ∀(thi:TaelinArena.Game.Thing) F64
  λthi (<thi λ F64> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.mov)

TaelinArena.Game.get_thing_nam: ∀(thi:TaelinArena.Game.Thing) String
  λthi (<thi λ String> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.nam)

TaelinArena.Game.get_thing_pad: ∀(thi:TaelinArena.Game.Thing) F64.V3
  λthi (<thi λ F64.V3> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.pad)

TaelinArena.Game.get_thing_pid: ∀(thi:TaelinArena.Game.Thing) TaelinArena.Game.PlayerId
  λthi (<thi λ TaelinArena.Game.PlayerId> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.pid)

TaelinArena.Game.get_thing_pos: ∀(thi:TaelinArena.Game.Thing) F64.V3
  λthi (<thi λ F64.V3> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.pos)

TaelinArena.Game.get_thing_rst: ∀(thi:TaelinArena.Game.Thing) Bool
  λthi (<thi λ Bool> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.rst)

TaelinArena.Game.get_thing_sid: ∀(thi:TaelinArena.Game.Thing) TaelinArena.Game.SideId
  λthi (<thi λ TaelinArena.Game.SideId> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.sid)

TaelinArena.Game.get_thing_stt: ∀(thi:TaelinArena.Game.Thing) (Map F64)
  λthi (<thi λ (Map F64)> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.stt)

TaelinArena.Game.get_thing_tik: ∀(thi:TaelinArena.Game.Thing) F64
  λthi (<thi λ F64> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.tik)

TaelinArena.Game.get_thing_trg: ∀(thi:TaelinArena.Game.Thing) F64.V3
  λthi (<thi λ F64.V3> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.trg)

TaelinArena.Game.get_thing_vel: ∀(thi:TaelinArena.Game.Thing) F64.V3
  λthi (<thi λ F64.V3> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.vel)

TaelinArena.Game.get_thing_wei: ∀(thi:TaelinArena.Game.Thing) F64
  λthi (<thi λ F64> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die thi.wei)

TaelinArena.Game.handle_shields: ∀(hit_dmg:F64) ∀(self:TaelinArena.Game.Thing) TaelinArena.Game.Thing
  λhit_dmg λself $self.buf=(TaelinArena.Game.get_thing_buf self);$self.dmg=(TaelinArena.Game.get_thing_dmg self);$init_val=((<<Pair.new F64> (List TaelinArena.Game.Buff)> hit_dmg) <List.nil TaelinArena.Game.Buff>);$res=(((<<List.fold TaelinArena.Game.Buff> ((Pair F64) (List TaelinArena.Game.Buff))> init_val) TaelinArena.Game.use_shields) self.buf);$res.fst=(<<Pair.fst F64> (List TaelinArena.Game.Buff)> res);$res.snd=(<<Pair.snd F64> (List TaelinArena.Game.Buff)> res);$remaining_dmg=((F64.add res.fst) self.dmg);$remaining_buf=res.snd;$self=((TaelinArena.Game.set_thing_dmg self) remaining_dmg);$self=((TaelinArena.Game.set_thing_buf self) remaining_buf);self

TaelinArena.Game.has_shields: ∀(:TaelinArena.Game.Thing) Bool
  λself $self.buf=(TaelinArena.Game.get_thing_buf self);$has_shields=:∀(:TaelinArena.Game.Buff) Bool λbuff ((((((<buff λ Bool> λbuff.dur λbuff.val Bool.true) λbuff.dur λbuff.val Bool.false) λbuff.dur λbuff.val Bool.false) λbuff.dur Bool.false) λbuff.dur Bool.false) λbuff.dur Bool.false);$found_buf=((<List.find TaelinArena.Game.Buff> has_shields) self.buf);((<found_buf λ Bool> Bool.false) λvalue Bool.true)

TaelinArena.Game.illumine: ∀(:TaelinArena.Game.Thing) ∀(:F64) ∀(:F64) ∀(:(List TaelinArena.Game.Light)) TaelinArena.Game.Thing
  λself λfrom_tik λto_tik λlights $curr_tik=(TaelinArena.Game.get_thing_tik self);((<(((F64.is_between from_tik) to_tik) curr_tik) λ TaelinArena.Game.Thing> ((TaelinArena.Game.set_thing_lit self) lights)) ((TaelinArena.Game.set_thing_lit self) <List.nil TaelinArena.Game.Light>))

TaelinArena.Game.init_act: ∀(self:TaelinArena.Game.Thing) ∀(new_act:F64) ∀(new_trg:F64.V3) TaelinArena.Game.Thing
  λself λnew_act λnew_trg $self.act=(TaelinArena.Game.get_thing_act self);$self.trg=(TaelinArena.Game.get_thing_trg self);$self.tik=(TaelinArena.Game.get_thing_tik self);$act_eql_0=((F64.eql self.act) F64.0);$self=((TaelinArena.Game.set_thing_act self) (((<Bool.if TaelinArena.Game.ActionId> act_eql_0) new_act) self.act));$self=((TaelinArena.Game.set_thing_trg self) (((<Bool.if F64.V3> act_eql_0) new_trg) self.trg));$self=((TaelinArena.Game.set_thing_tik self) (((<Bool.if F64> act_eql_0) F64.0) self.tik));self

TaelinArena.Game.is_rooted: ∀(self:TaelinArena.Game.Thing) Bool
  λself $self.buf=(TaelinArena.Game.get_thing_buf self);$is_rooted_buff=:∀(:TaelinArena.Game.Buff) Bool λbuff ((((((<buff λ Bool> λbuff.dur λbuff.val Bool.false) λbuff.dur λbuff.val Bool.false) λbuff.dur λbuff.val Bool.false) λbuff.dur Bool.false) λbuff.dur Bool.true) λbuff.dur Bool.true);$found_buf=((<List.find TaelinArena.Game.Buff> is_rooted_buff) self.buf);((<found_buf λ Bool> Bool.false) λvalue Bool.true)

TaelinArena.Game.is_silenced: ∀(:TaelinArena.Game.Thing) Bool
  λself $self.buf=(TaelinArena.Game.get_thing_buf self);$is_silenced=:∀(:TaelinArena.Game.Buff) Bool λbuff ((((((<buff λ Bool> λbuff.dur λbuff.val Bool.false) λbuff.dur λbuff.val Bool.false) λbuff.dur λbuff.val Bool.false) λbuff.dur Bool.true) λbuff.dur Bool.false) λbuff.dur Bool.true);$found_buf=((<List.find TaelinArena.Game.Buff> is_silenced) self.buf);((<found_buf λ Bool> Bool.false) λvalue Bool.true)

TaelinArena.Game.is_stunned: ∀(:TaelinArena.Game.Thing) Bool
  λself $self.buf=(TaelinArena.Game.get_thing_buf self);$is_stunned=:∀(:TaelinArena.Game.Buff) Bool λbuff ((((((<buff λ Bool> λbuff.dur λbuff.val Bool.false) λbuff.dur λbuff.val Bool.false) λbuff.dur λbuff.val Bool.false) λbuff.dur Bool.false) λbuff.dur Bool.false) λbuff.dur Bool.true);$found_buf=((<List.find TaelinArena.Game.Buff> is_stunned) self.buf);((<found_buf λ Bool> Bool.false) λvalue Bool.true)

TaelinArena.Game.is_using_buff: ∀(:TaelinArena.Game.Thing) ∀(:Bits) Bool
  λself λstt_key $stt=(TaelinArena.Game.get_thing_stt self);((<((<Map.get F64> stt_key) stt) λ Bool> Bool.false) λcurrent_tik ((<((F64.eql current_tik) F64.0) λ Bool> Bool.false) Bool.true))

TaelinArena.Game.is_walking: ∀(:TaelinArena.Game.Thing) F64
  λthis $this.pad=(TaelinArena.Game.get_thing_pad this);(F64.from_bool ((F64.ltn F64.0) (F64.V3.len this.pad)))

TaelinArena.Game.map_stage: ∀(:∀(:TaelinArena.Game.Thing) TaelinArena.Game.Thing) ∀(:TaelinArena.Game.Game) TaelinArena.Game.Game
  λfn λgm (<gm λ TaelinArena.Game.Game> λgm.stage $new_stage=((<<List.map TaelinArena.Game.Thing> TaelinArena.Game.Thing> fn) gm.stage);(TaelinArena.Game.Game.new new_stage))

TaelinArena.Game.map_stt_key: ∀(:TaelinArena.Game.Thing) ∀(:Bits) ∀(:∀(:F64) F64) TaelinArena.Game.Thing
  λself λstt_key λfunc $stt=(TaelinArena.Game.get_thing_stt self);((<((<Map.get F64> stt_key) stt) λ TaelinArena.Game.Thing> ((TaelinArena.Game.set_thing_stt self) (((<Map.set F64> stt_key) F64.0) stt))) λresult.value ((TaelinArena.Game.set_thing_stt self) (((<Map.set F64> stt_key) (func result.value)) stt)))

TaelinArena.Game.move.fmc: ∀(:TaelinArena.Game.Thing) ∀(:F64.V3) TaelinArena.Game.Thing
  λself λto_pos ((TaelinArena.Game.set_thing_pos self) to_pos)

TaelinArena.Game.reset: ∀(:TaelinArena.Game.Thing) ∀(:F64) TaelinArena.Game.Thing
  λself λat_tik $curr_tik=(TaelinArena.Game.get_thing_tik self);$should_reset=((F64.gtn curr_tik) ((F64.sub at_tik) F64.1));((<should_reset λ TaelinArena.Game.Thing> ((TaelinArena.Game.set_thing_rst self) Bool.true)) self)

TaelinArena.Game.set_stt_value_v3: ∀(self:TaelinArena.Game.Thing) ∀(v3:F64.V3) TaelinArena.Game.Thing
  λself λv3 $self.stt=(TaelinArena.Game.get_thing_stt self);(<v3 λ TaelinArena.Game.Thing> λv3.x λv3.y λv3.z $insert_x=(((<Map.set F64> TaelinArena.Constants.POS_X_KEY) v3.x) self.stt);$insert_y=(((<Map.set F64> TaelinArena.Constants.POS_Y_KEY) v3.y) self.stt);$self=((TaelinArena.Game.set_thing_stt self) insert_x);$self=((TaelinArena.Game.set_thing_stt self) insert_y);self)

TaelinArena.Game.set_thing_act: ∀(thi:TaelinArena.Game.Thing) ∀(new_act:TaelinArena.Game.ActionId) TaelinArena.Game.Thing
  λthi λnew_act (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) new_act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_box: ∀(thi:TaelinArena.Game.Thing) ∀(new_box:TaelinArena.Game.Hitbox) TaelinArena.Game.Thing
  λthi λnew_box (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) new_box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_bst: ∀(thi:TaelinArena.Game.Thing) ∀(new_bst:F64) TaelinArena.Game.Thing
  λthi λnew_bst (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) new_bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_buf: ∀(thi:TaelinArena.Game.Thing) ∀(new_buf:(List TaelinArena.Game.Buff)) TaelinArena.Game.Thing
  λthi λnew_buf (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) new_buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_chi: ∀(thi:TaelinArena.Game.Thing) ∀(new_chi:(List TaelinArena.Game.Thing)) TaelinArena.Game.Thing
  λthi λnew_chi (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) new_chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_die: ∀(thi:TaelinArena.Game.Thing) ∀(new_die:Bool) TaelinArena.Game.Thing
  λthi λnew_die (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) new_die))

TaelinArena.Game.set_thing_dir: ∀(thi:TaelinArena.Game.Thing) ∀(new_dir:F64.V3) TaelinArena.Game.Thing
  λthi λnew_dir (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) new_dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_dmg: ∀(thi:TaelinArena.Game.Thing) ∀(new_dmg:F64) TaelinArena.Game.Thing
  λthi λnew_dmg (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) new_dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_fun: ∀(thi:TaelinArena.Game.Thing) ∀(new_fun:TaelinArena.Game.TxFunction) TaelinArena.Game.Thing
  λthi λnew_fun (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new new_fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_hit: ∀(thi:TaelinArena.Game.Thing) ∀(new_hit:(List TaelinArena.Game.Hit)) TaelinArena.Game.Thing
  λthi λnew_hit (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) new_hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_knk: ∀(thi:TaelinArena.Game.Thing) ∀(new_knk:F64.V3) TaelinArena.Game.Thing
  λthi λnew_knk (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) new_knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_lit: ∀(thi:TaelinArena.Game.Thing) ∀(new_lit:(List TaelinArena.Game.Light)) TaelinArena.Game.Thing
  λthi λnew_lit (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) new_lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_mhp: ∀(thi:TaelinArena.Game.Thing) ∀(new_mhp:F64) TaelinArena.Game.Thing
  λthi λnew_mhp (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) new_mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_mid: ∀(thi:TaelinArena.Game.Thing) ∀(new_mid:TaelinArena.Game.ModelId) TaelinArena.Game.Thing
  λthi λnew_mid (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) new_mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_mov: ∀(thi:TaelinArena.Game.Thing) ∀(new_mov:F64) TaelinArena.Game.Thing
  λthi λnew_mov (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) new_mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_nam: ∀(thi:TaelinArena.Game.Thing) ∀(new_nam:String) TaelinArena.Game.Thing
  λthi λnew_nam (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) new_nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_pad: ∀(thi:TaelinArena.Game.Thing) ∀(new_pad:F64.V3) TaelinArena.Game.Thing
  λthi λnew_pad (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) new_pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_pid: ∀(thi:TaelinArena.Game.Thing) ∀(new_pid:TaelinArena.Game.PlayerId) TaelinArena.Game.Thing
  λthi λnew_pid (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) new_pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_pos: ∀(thi:TaelinArena.Game.Thing) ∀(new_pos:F64.V3) TaelinArena.Game.Thing
  λthi λnew_pos (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) new_pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_rst: ∀(thi:TaelinArena.Game.Thing) ∀(new_rst:Bool) TaelinArena.Game.Thing
  λthi λnew_rst (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) new_rst) thi.die))

TaelinArena.Game.set_thing_sid: ∀(thi:TaelinArena.Game.Thing) ∀(new_sid:TaelinArena.Game.SideId) TaelinArena.Game.Thing
  λthi λnew_sid (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) new_sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_stt: ∀(thi:TaelinArena.Game.Thing) ∀(new_stt:(Map F64)) TaelinArena.Game.Thing
  λthi λnew_stt (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) new_stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_tik: ∀(thi:TaelinArena.Game.Thing) ∀(new_tik:F64) TaelinArena.Game.Thing
  λthi λnew_tik (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) new_tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_trg: ∀(thi:TaelinArena.Game.Thing) ∀(new_trg:F64.V3) TaelinArena.Game.Thing
  λthi λnew_trg (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) new_trg) thi.vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_vel: ∀(thi:TaelinArena.Game.Thing) ∀(new_vel:F64.V3) TaelinArena.Game.Thing
  λthi λnew_vel (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) new_vel) thi.box) thi.wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.set_thing_wei: ∀(thi:TaelinArena.Game.Thing) ∀(new_wei:F64) TaelinArena.Game.Thing
  λthi λnew_wei (<thi λ TaelinArena.Game.Thing> λthi.fun λthi.pid λthi.mid λthi.act λthi.sid λthi.stt λthi.nam λthi.lit λthi.tik λthi.pos λthi.mov λthi.bst λthi.pad λthi.dir λthi.trg λthi.vel λthi.box λthi.wei λthi.mhp λthi.dmg λthi.knk λthi.buf λthi.chi λthi.hit λthi.rst λthi.die ((((((((((((((((((((((((((TaelinArena.Game.Thing.new thi.fun) thi.pid) thi.mid) thi.act) thi.sid) thi.stt) thi.nam) thi.lit) thi.tik) thi.pos) thi.mov) thi.bst) thi.pad) thi.dir) thi.trg) thi.vel) thi.box) new_wei) thi.mhp) thi.dmg) thi.knk) thi.buf) thi.chi) thi.hit) thi.rst) thi.die))

TaelinArena.Game.spawn: ∀(:TaelinArena.Game.Thing) ∀(:F64) ∀(:(List TaelinArena.Game.Thing)) TaelinArena.Game.Thing
  λself λat_tik λchildren $curr_tik=(TaelinArena.Game.get_thing_tik self);((<((F64.eql curr_tik) at_tik) λ TaelinArena.Game.Thing> ((TaelinArena.Game.set_thing_chi self) children)) self)

TaelinArena.Game.speed_multiplier_of: ∀(:TaelinArena.Game.Thing) F64
  λself $bst=(TaelinArena.Game.get_thing_bst self);$buf=(TaelinArena.Game.get_thing_buf self);(((<<List.fold TaelinArena.Game.Buff> F64> bst) TaelinArena.Game.combine_mov_buffs) buf)

TaelinArena.Game.targ_dir: ∀(:TaelinArena.Game.Thing) F64.V3
  λself $pos=(TaelinArena.Game.get_thing_pos self);$trg=(TaelinArena.Game.get_thing_trg self);$dir=(TaelinArena.Game.get_thing_dir self);(((F64.V3.look_at pos) trg) dir)

TaelinArena.Game.update_buff: ∀(:TaelinArena.Game.Thing) ∀(:Bits) TaelinArena.Game.Thing
  λself λstt_key $stt=(TaelinArena.Game.get_thing_stt self);$curr_tik=((<Map.get F64> stt_key) stt);((<curr_tik λ TaelinArena.Game.Thing> self) λcurr_tik.value ((<((F64.eql curr_tik.value) F64.0) λ TaelinArena.Game.Thing> self) ((<((F64.gtn curr_tik.value) F64.0) λ TaelinArena.Game.Thing> $new_tik=((F64.sub curr_tik.value) F64.1);$new_stt=(((<Map.set F64> stt_key) new_tik) stt);((TaelinArena.Game.set_thing_stt self) new_stt)) self)))

TaelinArena.Game.update_buff_dur: ∀(self:TaelinArena.Game.Thing) TaelinArena.Game.Thing
  λself $self.buf=(TaelinArena.Game.get_thing_buf self);$fn=:∀(:TaelinArena.Game.Buff) ∀(:(List TaelinArena.Game.Buff)) (List TaelinArena.Game.Buff) λbuff λacc ((((((<buff λ (List TaelinArena.Game.Buff)> λbuff.dur λbuff.val (((<Bool.if (List TaelinArena.Game.Buff)> ((F64.eql buff.dur) F64.0)) acc) ((<List.cons TaelinArena.Game.Buff> ((TaelinArena.Game.Buff.shielded ((F64.sub buff.dur) F64.1)) buff.val)) acc))) λbuff.dur λbuff.val (((<Bool.if (List TaelinArena.Game.Buff)> ((F64.eql buff.dur) F64.0)) acc) ((<List.cons TaelinArena.Game.Buff> ((TaelinArena.Game.Buff.slowed ((F64.sub buff.dur) F64.1)) buff.val)) acc))) λbuff.dur λbuff.val (((<Bool.if (List TaelinArena.Game.Buff)> ((F64.eql buff.dur) F64.0)) acc) ((<List.cons TaelinArena.Game.Buff> ((TaelinArena.Game.Buff.hasted ((F64.sub buff.dur) F64.1)) buff.val)) acc))) λbuff.dur (((<Bool.if (List TaelinArena.Game.Buff)> ((F64.eql buff.dur) F64.0)) acc) ((<List.cons TaelinArena.Game.Buff> (TaelinArena.Game.Buff.silenced ((F64.sub buff.dur) F64.1))) acc))) λbuff.dur (((<Bool.if (List TaelinArena.Game.Buff)> ((F64.eql buff.dur) F64.0)) acc) ((<List.cons TaelinArena.Game.Buff> (TaelinArena.Game.Buff.rooted ((F64.sub buff.dur) F64.1))) acc))) λbuff.dur (((<Bool.if (List TaelinArena.Game.Buff)> ((F64.eql buff.dur) F64.0)) acc) ((<List.cons TaelinArena.Game.Buff> (TaelinArena.Game.Buff.stuned ((F64.sub buff.dur) F64.1))) acc)));$new_buf=(((<<List.fold TaelinArena.Game.Buff> (List TaelinArena.Game.Buff)> <List.nil TaelinArena.Game.Buff>) fn) self.buf);((TaelinArena.Game.set_thing_buf self) new_buf)

TaelinArena.Game.use_shields: ∀(buff:TaelinArena.Game.Buff) ∀(acc:((Pair F64) (List TaelinArena.Game.Buff))) ((Pair F64) (List TaelinArena.Game.Buff))
  λbuff λacc (<acc λ ((Pair F64) (List TaelinArena.Game.Buff))> λacc.fst λacc.snd ((((((<buff λ ((Pair F64) (List TaelinArena.Game.Buff))> λbuff.dur λbuff.val (((<Bool.if ((Pair F64) (List TaelinArena.Game.Buff))> ((F64.eql acc.fst) F64.0)) acc) $compare=((F64.compare_numbers acc.fst) buff.val);(((<compare λ ((Pair F64) (List TaelinArena.Game.Buff))> $remaining_shield_val=((F64.sub buff.val) acc.fst);$remaining_buf=((<List.cons TaelinArena.Game.Buff> ((TaelinArena.Game.Buff.shielded buff.dur) remaining_shield_val)) acc.snd);((<<Pair.new F64> (List TaelinArena.Game.Buff)> F64.0) remaining_buf)) ((<<Pair.new F64> (List TaelinArena.Game.Buff)> F64.0) acc.snd)) $remaining_dmg=((F64.sub acc.fst) buff.val);((<<Pair.new F64> (List TaelinArena.Game.Buff)> remaining_dmg) acc.snd)))) λbuff.dur λbuff.val ((<<Pair.new F64> (List TaelinArena.Game.Buff)> acc.fst) ((<List.cons TaelinArena.Game.Buff> buff) acc.snd))) λbuff.dur λbuff.val ((<<Pair.new F64> (List TaelinArena.Game.Buff)> acc.fst) ((<List.cons TaelinArena.Game.Buff> buff) acc.snd))) λbuff.dur ((<<Pair.new F64> (List TaelinArena.Game.Buff)> acc.fst) ((<List.cons TaelinArena.Game.Buff> buff) acc.snd))) λbuff.dur ((<<Pair.new F64> (List TaelinArena.Game.Buff)> acc.fst) ((<List.cons TaelinArena.Game.Buff> buff) acc.snd))) λbuff.dur ((<<Pair.new F64> (List TaelinArena.Game.Buff)> acc.fst) ((<List.cons TaelinArena.Game.Buff> buff) acc.snd))))

TaelinArena.Game.with_thing.effect: ∀(:TaelinArena.Game.PlayerId) ∀(:∀(:TaelinArena.Game.Thing) TaelinArena.Game.Thing) ∀(:TaelinArena.Game.Thing) TaelinArena.Game.Thing
  λpid λfn λthi $thi.pid=(TaelinArena.Game.get_thing_pid thi);((<((F64.eql pid) thi.pid) λ TaelinArena.Game.Thing> (fn thi)) thi)

TaelinArena.Game.with_thing: ∀(:TaelinArena.Game.PlayerId) ∀(:∀(:TaelinArena.Game.Thing) TaelinArena.Game.Thing) ∀(:TaelinArena.Game.Game) TaelinArena.Game.Game
  λpid λfn λgm ((TaelinArena.Game.map_stage ((TaelinArena.Game.with_thing.effect pid) fn)) gm)

TaelinArena.collide_with: ∀(a_pos:F64.V3) ∀(a_dir:F64.V3) ∀(a_box:TaelinArena.Game.Hitbox) ∀(b_pos:F64.V3) ∀(b_dir:F64.V3) ∀(b_box:TaelinArena.Game.Hitbox) (Maybe F64.V3)
  λa_pos λa_dir λa_box λb_pos λb_dir λb_box $none=<Maybe.none F64.V3>;(((<a_box λ (Maybe F64.V3)> none) λa_box.rad (((<b_box λ (Maybe F64.V3)> none) λb_box.rad $dst=((F64.V3.dist a_pos) b_pos);$rad=((F64.add a_box.rad) b_box.rad);$if_condition=((Bool.and ((F64.ltn F64.0) dst)) ((F64.ltn dst) rad));(((<Bool.if (Maybe F64.V3)> if_condition) $out_dir=(F64.V3.norm ((F64.V3.sub a_pos) b_pos));$out_vec=((F64.V3.scale ((F64.sub rad) dst)) out_dir);(<Maybe.some F64.V3> out_vec)) none)) λb_box.pts $cons=:∀(:F64.Segment) ∀(:(Maybe F64.V3)) (Maybe F64.V3) λsegment λresult ((<result λ (Maybe F64.V3)> (<segment λ (Maybe F64.V3)> λsegment.a λsegment.b $dst=((F64.V3.point_segment_dist a_pos) segment);$rad=a_box.rad;(((<Bool.if (Maybe F64.V3)> ((F64.ltn dst) rad)) $out_dir=(F64.V3.rot_90 (F64.V3.norm ((F64.V3.sub segment.a) segment.b)));$out_vec=((F64.V3.scale ((F64.sub rad) dst)) out_dir);(<Maybe.some F64.V3> out_vec)) none))) λresult.value (<Maybe.some F64.V3> result.value));$segs=(((F64.V3.polygon_to_segments b_pos) b_dir) b_box.pts);(((<<List.fold F64.Segment> (Maybe F64.V3)> none) cons) segs))) λa_box.pts none)

TaelinArena.exec_command: ∀(:TaelinArena.Game.Command) ∀(:TaelinArena.Game.Game) TaelinArena.Game.Game
  λcmd λgm (<cmd λ TaelinArena.Game.Game> λcmd.pid λcmd.inp $fn=:∀(:TaelinArena.Game.Thing) TaelinArena.Game.Thing λthis $inp=cmd.inp;$is_silenced=(TaelinArena.Game.is_silenced this);$is_stunned=(TaelinArena.Game.is_stunned this);((<is_stunned λ TaelinArena.Game.Thing> ((((((((<inp λ TaelinArena.Game.Thing> λsdir.dir (((TaelinArena.Game.init_act this) F64.0) sdir.dir)) λkey0.pos this) λkey1.pos this) λkey2.pos this) λkey3.pos this) λkey4.pos this) λkey5.pos this) λcmsg.txt this)) ((<is_silenced λ TaelinArena.Game.Thing> ((((((((<inp λ TaelinArena.Game.Thing> λsdir.dir ((TaelinArena.Game.set_thing_pad this) sdir.dir)) λkey0.pos this) λkey1.pos this) λkey2.pos this) λkey3.pos this) λkey4.pos this) λkey5.pos this) λcmsg.txt this)) ((((((((<inp λ TaelinArena.Game.Thing> λsdir.dir ((TaelinArena.Game.set_thing_pad this) sdir.dir)) λkey0.pos (((TaelinArena.Game.init_act this) F64.1) key0.pos)) λkey1.pos (((TaelinArena.Game.init_act this) F64.2) key1.pos)) λkey2.pos (((TaelinArena.Game.init_act this) F64.3) key2.pos)) λkey3.pos (((TaelinArena.Game.init_act this) F64.4) key3.pos)) λkey4.pos (((TaelinArena.Game.init_act this) F64.5) key4.pos)) λkey5.pos (((TaelinArena.Game.init_act this) F64.6) key5.pos)) λcmsg.txt this)));(((TaelinArena.Game.with_thing cmd.pid) fn) gm))

TaelinArena.exec_turn: ∀(:TaelinArena.Game.Game) TaelinArena.Game.Game
  λgm $intr=:∀(:TaelinArena.Game.Thing) ∀(:TaelinArena.Game.Thing) TaelinArena.Game.Thing λthat λthis ((TaelinArena.interact_with this) that);$tick=:∀(:TaelinArena.Game.Thing) ∀(:(List TaelinArena.Game.Thing)) ∀(:(List TaelinArena.Game.Thing)) (List TaelinArena.Game.Thing) λthis λothers λres $this=((TaelinArena.Game.set_thing_hit this) <List.nil TaelinArena.Game.Hit>);$rst=(TaelinArena.Game.get_thing_rst this);$this=((<rst λ TaelinArena.Game.Thing> $new_vel=(((F64.V3.new F64.0) F64.0) F64.0);$new_bst=F64.1;$new_box=(TaelinArena.Game.Hitbox.cbox ((F64.mul F64.3) F64.4));$new_act=F64.0;$new_tik=F64.0;$new_lit=<List.nil TaelinArena.Game.Light>;$new_rst=Bool.false;$this=((TaelinArena.Game.set_thing_vel this) new_vel);$this=((TaelinArena.Game.set_thing_bst this) new_bst);$this=((TaelinArena.Game.set_thing_box this) new_box);$this=((TaelinArena.Game.set_thing_act this) new_act);$this=((TaelinArena.Game.set_thing_tik this) new_tik);$this=((TaelinArena.Game.set_thing_lit this) new_lit);$this=((TaelinArena.Game.set_thing_rst this) new_rst);this) this);$boost=(TaelinArena.Game.speed_multiplier_of this);$pos=(TaelinArena.Game.get_thing_pos this);$mov=(TaelinArena.Game.get_thing_mov this);$pad=(TaelinArena.Game.get_thing_pad this);$this=((TaelinArena.Game.set_thing_pos this) ((F64.V3.add pos) ((F64.V3.scale ((F64.mul mov) boost)) pad)));$this=(TaelinArena.Game.update_buff_dur this);$pos=(TaelinArena.Game.get_thing_pos this);$knk=(TaelinArena.Game.get_thing_knk this);$wei=(TaelinArena.Game.get_thing_wei this);$new_pos=((F64.V3.add pos) knk);$knk_len=(F64.V3.len knk);$new_knk=((<((F64.gtn knk_len) F64.0) λ F64.V3> $force=((F64.max ((F64.sub knk_len) wei)) F64.0);((F64.V3.scale force) (F64.V3.norm knk))) knk);$this=((TaelinArena.Game.set_thing_pos this) new_pos);$this=((TaelinArena.Game.set_thing_knk this) new_knk);$fun=(TaelinArena.Game.get_thing_fun this);$this=(fun this);$this=(((<<List.fold TaelinArena.Game.Thing> TaelinArena.Game.Thing> this) intr) others);$tik=(TaelinArena.Game.get_thing_tik this);$this=((TaelinArena.Game.set_thing_tik this) ((F64.add tik) F64.1));$this_chi=(TaelinArena.Game.get_thing_chi this);$chi_init=:∀(:TaelinArena.Game.Thing) TaelinArena.Game.Thing λchi ((TaelinArena.Game.get_thing_fun chi) chi);$chi_list=((<<List.map TaelinArena.Game.Thing> TaelinArena.Game.Thing> chi_init) this_chi);$this=((TaelinArena.Game.set_thing_chi this) <List.nil TaelinArena.Game.Thing>);$this_pos=(TaelinArena.Game.get_thing_pos this);$pos_x=(F64.V3.get_z this_pos);$pos_y=(F64.V3.get_y this_pos);$pos_z=(F64.V3.get_z this_pos);$new_x=((F64.min ((F64.max F64._256) pos_x)) F64.256);$new_y=((F64.min ((F64.max F64._160) pos_y)) F64.160);$new_z=((F64.min ((F64.max F64.0) pos_z)) F64.256);$this=((TaelinArena.Game.set_thing_pos this) (((F64.V3.new new_x) new_y) new_z));$dmg=(TaelinArena.Game.get_thing_dmg this);$mhp=(TaelinArena.Game.get_thing_mhp this);$new_dmg=((F64.max F64.0) ((F64.min mhp) dmg));$this=((TaelinArena.Game.set_thing_dmg this) new_dmg);$sid=(TaelinArena.Game.get_thing_sid this);$dmg=(TaelinArena.Game.get_thing_dmg this);$mhp=(TaelinArena.Game.get_thing_mhp this);$no_hp=Bool.false;$die=(TaelinArena.Game.get_thing_die this);$xs=((<((Bool.or die) no_hp) λ (List TaelinArena.Game.Thing)> res) ((<List.cons TaelinArena.Game.Thing> this) res));((<List.concat TaelinArena.Game.Thing> chi_list) xs);$things_id=:∀(:(List TaelinArena.Game.Thing)) (List TaelinArena.Game.Thing) λx x;$stage=(<gm λ (List TaelinArena.Game.Thing)> λstage stage);$stage_nil=<List.nil TaelinArena.Game.Thing>;$new_stage=((((<<TaelinArena.fold_with_context TaelinArena.Game.Thing> (List TaelinArena.Game.Thing)> stage_nil) tick) stage) things_id);(TaelinArena.Game.Game.new new_stage)

TaelinArena.fold_with_context: Π(A:*) Π(B:*) ∀(i:B) ∀(f:∀(:A) ∀(:(List A)) ∀(:B) B) ∀(xs:(List A)) ∀(ys:∀(:(List A)) (List A)) B
  ΛA ΛB λi λf λxs λys ((<xs λ B> i) λxs.head λxs.tail $ys2=:∀(:(List A)) (List A) λx (ys ((<List.cons A> xs.head) xs));$rest=((((<<TaelinArena.fold_with_context A> B> i) f) xs.tail) ys2);(((f xs.head) (ys xs.tail)) rest))

TaelinArena.interact_with: ∀(this:TaelinArena.Game.Thing) ∀(that:TaelinArena.Game.Thing) TaelinArena.Game.Thing
  λthis λthat $this.pos=(TaelinArena.Game.get_thing_pos this);$this.dir=(TaelinArena.Game.get_thing_dir this);$this.box=(TaelinArena.Game.get_thing_box this);$this.buf=(TaelinArena.Game.get_thing_buf this);$this.sid=(TaelinArena.Game.get_thing_sid this);$that.pos=(TaelinArena.Game.get_thing_pos that);$that.dir=(TaelinArena.Game.get_thing_dir that);$that.box=(TaelinArena.Game.get_thing_box that);$that.hit=(TaelinArena.Game.get_thing_hit that);$that.sid=(TaelinArena.Game.get_thing_sid this);$out_vec=((((((TaelinArena.collide_with this.pos) this.dir) this.box) that.pos) that.dir) that.box);$this=((<out_vec λ TaelinArena.Game.Thing> this) λout_vec.value $new_pos=((F64.V3.add this.pos) out_vec.value);((TaelinArena.Game.set_thing_pos this) new_pos));$this=$apply_hit=:∀(:TaelinArena.Game.Hit) ∀(:TaelinArena.Game.Thing) TaelinArena.Game.Thing λhit λthis (<hit λ TaelinArena.Game.Thing> λhit.eff λhit.pos λhit.dir λhit.box $out_vec=((((((TaelinArena.collide_with this.pos) this.dir) this.box) hit.pos) hit.dir) hit.box);((<out_vec λ TaelinArena.Game.Thing> this) λout_vec.value $compare_sid=((F64.eql this.sid) that.sid);$apply_eff=:∀(:TaelinArena.Game.Effect) ∀(:TaelinArena.Game.Thing) TaelinArena.Game.Thing λeff λthis (((((((((((<eff λ TaelinArena.Game.Thing> λeff.lif $this.dmg=(TaelinArena.Game.get_thing_dmg this);(((<Bool.if TaelinArena.Game.Thing> compare_sid) this) ((TaelinArena.Game.set_thing_dmg this) ((F64.sub this.dmg) eff.lif)))) λeff.dmg (((<Bool.if TaelinArena.Game.Thing> compare_sid) this) ((TaelinArena.Game.handle_shields eff.dmg) this))) λeff.mag (((<Bool.if TaelinArena.Game.Thing> compare_sid) this) $v3=(((F64.V3.new F64.1) F64.0) F64.0);$dir=(((F64.V3.look_at hit.pos) this.pos) v3);$vec=((F64.V3.scale eff.mag) dir);((TaelinArena.Game.set_thing_knk this) vec))) λeff.mag λeff.dir (((<Bool.if TaelinArena.Game.Thing> compare_sid) this) $vec=((F64.V3.scale eff.mag) eff.dir);((TaelinArena.Game.set_thing_knk this) vec))) λeff.dur λeff.val (((<Bool.if TaelinArena.Game.Thing> compare_sid) this) $updated_buffs=((<List.cons TaelinArena.Game.Buff> ((TaelinArena.Game.Buff.slowed eff.dur) eff.val)) this.buf);((TaelinArena.Game.set_thing_buf this) updated_buffs))) λeff.dur λeff.val (((<Bool.if TaelinArena.Game.Thing> compare_sid) this) $updated_buffs=((<List.cons TaelinArena.Game.Buff> ((TaelinArena.Game.Buff.hasted eff.dur) eff.val)) this.buf);((TaelinArena.Game.set_thing_buf this) updated_buffs))) λeff.dur λeff.val (((<Bool.if TaelinArena.Game.Thing> compare_sid) this) $updated_buffs=((<List.cons TaelinArena.Game.Buff> ((TaelinArena.Game.Buff.shielded eff.dur) eff.val)) this.buf);((TaelinArena.Game.set_thing_buf this) updated_buffs))) λeff.dur (((<Bool.if TaelinArena.Game.Thing> compare_sid) this) $updated_buffs=((<List.cons TaelinArena.Game.Buff> (TaelinArena.Game.Buff.silenced eff.dur)) this.buf);((TaelinArena.Game.set_thing_buf this) updated_buffs))) λeff.dur (((<Bool.if TaelinArena.Game.Thing> compare_sid) this) $updated_buffs=((<List.cons TaelinArena.Game.Buff> (TaelinArena.Game.Buff.rooted eff.dur)) this.buf);((TaelinArena.Game.set_thing_buf this) updated_buffs))) λeff.dur (((<Bool.if TaelinArena.Game.Thing> compare_sid) this) $updated_buffs=((<List.cons TaelinArena.Game.Buff> (TaelinArena.Game.Buff.stuned eff.dur)) this.buf);((TaelinArena.Game.set_thing_buf this) updated_buffs))) λeff.to_pos λeff.all (((<Bool.if TaelinArena.Game.Thing> ((F64.eql eff.all) F64.1)) ((TaelinArena.Game.set_thing_pos this) eff.to_pos)) this));(((<<List.fold TaelinArena.Game.Effect> TaelinArena.Game.Thing> this) apply_eff) hit.eff)));(((<<List.fold TaelinArena.Game.Hit> TaelinArena.Game.Thing> this) apply_hit) that.hit);this

Text: *
  String

The: ∀(A:*) ∀(x:A) *
  λA λx Πthe(P:∀(x:A) ∀(:((The A) x)) *) ∀(term:∀(x:A) ((P x) (<The.term A> x))) ((P x) the)

The.term: Π(A:*) ∀(x:A) ((The A) x)
  ΛA λx ΛP λterm (term x)

U16.add: ∀(:U16) ∀(:U16) U16
  λa λb (<a λ U16> λa_val (<b λ U16> λb_val (U16.new ((<Word.add Nat.16> a_val) b_val))))

U16.and: ∀(:U16) ∀(:U16) U16
  λa λb (<a λ U16> λa_val (<b λ U16> λb_val (U16.new ((<Word.and Nat.16> a_val) b_val))))

U16.div: ∀(:U16) ∀(:U16) U16
  λa λb (<a λ U16> λa_val (<b λ U16> λb_val (U16.new ((<Word.div Nat.16> a_val) b_val))))

U16.eql: ∀(:U16) ∀(:U16) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.eql Nat.16> a_val) b_val)))

U16: *
  Πu16(P:∀(:U16) *) ∀(new:∀(a:(Word Nat.16)) (P (U16.new a))) (P u16)

U16.gte: ∀(:U16) ∀(:U16) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.gte Nat.16> a_val) b_val)))

U16.gtn: ∀(:U16) ∀(:U16) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.gtn Nat.16> a_val) b_val)))

U16.inc: ∀(:U16) U16
  λa (<a λ U16> λa_val (U16.new (<Word.inc Nat.16> a_val)))

U16.lte: ∀(:U16) ∀(:U16) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.lte Nat.16> a_val) b_val)))

U16.ltn: ∀(:U16) ∀(:U16) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.ltn Nat.16> a_val) b_val)))

U16.mod: ∀(:U16) ∀(:U16) U16
  λa λb (<a λ U16> λa_val (<b λ U16> λb_val (U16.new ((<Word.mod Nat.16> a_val) b_val))))

U16.mul: ∀(:U16) ∀(:U16) U16
  λa λb (<a λ U16> λa_val (<b λ U16> λb_val (U16.new ((<Word.mul Nat.16> a_val) b_val))))

U16.new: ∀(:(Word Nat.16)) U16
  λa Λ λu16 (u16 a)

U16.or: ∀(:U16) ∀(:U16) U16
  λa λb (<a λ U16> λa_val (<b λ U16> λb_val (U16.new ((<Word.or Nat.16> a_val) b_val))))

U16.parse_hex: ∀(:String) U16
  λstr (U16.new ((Word.from_bits Nat.16) (Bits.parse_hex str)))

U16.pow: ∀(:U16) ∀(:U16) U16
  λa λb (<a λ U16> λa_val (<b λ U16> λb_val (U16.new ((<Word.pow Nat.16> a_val) b_val))))

U16.shl: ∀(:Nat) ∀(:U16) U16
  λn λa (<a λ U16> λa_val (U16.new ((<Word.shift_left Nat.16> n) a_val)))

U16.shr: ∀(:Nat) ∀(:U16) U16
  λn λa (<a λ U16> λa_val (U16.new ((<Word.shift_right Nat.16> n) a_val)))

U16.sub: ∀(:U16) ∀(:U16) U16
  λa λb (<a λ U16> λa_val (<b λ U16> λb_val (U16.new ((<Word.sub Nat.16> a_val) b_val))))

U16.to_bits: ∀(:U16) Bits
  λa (<a λ Bits> λa_val (<Word.to_bits Nat.16> a_val))

U16.to_nat: ∀(:U16) Nat
  λa (<a λ Nat> λa_val (<Word.to_nat Nat.16> a_val))

U16.xor: ∀(:U16) ∀(:U16) U16
  λa λb (<a λ U16> λa_val (<b λ U16> λb_val (U16.new ((<Word.xor Nat.16> a_val) b_val))))

U32.0: U32
  (U32.new (<Word.0 Nat.31> (<Word.0 Nat.30> (<Word.0 Nat.29> (<Word.0 Nat.28> (<Word.0 Nat.27> (<Word.0 Nat.26> (<Word.0 Nat.25> (<Word.0 Nat.24> (<Word.0 Nat.23> (<Word.0 Nat.22> (<Word.0 Nat.21> (<Word.0 Nat.20> (<Word.0 Nat.19> (<Word.0 Nat.18> (<Word.0 Nat.17> (<Word.0 Nat.16> (<Word.0 Nat.15> (<Word.0 Nat.14> (<Word.0 Nat.13> (<Word.0 Nat.12> (<Word.0 Nat.11> (<Word.0 Nat.10> (<Word.0 Nat.9> (<Word.0 Nat.8> (<Word.0 Nat.7> (<Word.0 Nat.6> (<Word.0 Nat.5> (<Word.0 Nat.4> (<Word.0 Nat.3> (<Word.0 Nat.2> (<Word.0 Nat.1> (<Word.0 Nat.0> Word.nil)))))))))))))))))))))))))))))))))

U32.add: ∀(:U32) ∀(:U32) U32
  λa λb (<a λ U32> λa_val (<b λ U32> λb_val (U32.new ((<Word.add Nat.32> a_val) b_val))))

U32.and: ∀(:U32) ∀(:U32) U32
  λa λb (<a λ U32> λa_val (<b λ U32> λb_val (U32.new ((<Word.and Nat.32> a_val) b_val))))

U32.concat: ∀(:U32) ∀(:U32) U64
  λa λb (<a λ U64> λa_val (<b λ U64> λb_val (U64.new ((<<Word.concat Nat.32> Nat.32> a_val) b_val))))

U32.div: ∀(:U32) ∀(:U32) U32
  λa λb (<a λ U32> λa_val (<b λ U32> λb_val (U32.new ((<Word.div Nat.32> a_val) b_val))))

U32.eql: ∀(:U32) ∀(:U32) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.eql Nat.32> a_val) b_val)))

U32: *
  Πu32(P:∀(:U32) *) ∀(new:∀(a:(Word Nat.32)) (P (U32.new a))) (P u32)

U32.gte: ∀(:U32) ∀(:U32) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.gte Nat.32> a_val) b_val)))

U32.gtn: ∀(:U32) ∀(:U32) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.gtn Nat.32> a_val) b_val)))

U32.hash2: ∀(:U32) ∀(:U32) U32
  λa λb (<(U64.mix ((U32.concat a) b)) λ U32> λw64 (U32.new ((<Word.drop Nat.32> Nat.32) w64)))

U32.inc: ∀(:U32) U32
  λa (<a λ U32> λa_val (U32.new (<Word.inc Nat.32> a_val)))

U32.lte: ∀(:U32) ∀(:U32) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.lte Nat.32> a_val) b_val)))

U32.ltn: ∀(:U32) ∀(:U32) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.ltn Nat.32> a_val) b_val)))

U32.mod: ∀(:U32) ∀(:U32) U32
  λa λb (<a λ U32> λa_val (<b λ U32> λb_val (U32.new ((<Word.mod Nat.32> a_val) b_val))))

U32.mul: ∀(:U32) ∀(:U32) U32
  λa λb (<a λ U32> λa_val (<b λ U32> λb_val (U32.new ((<Word.mul Nat.32> a_val) b_val))))

U32.new: ∀(:(Word Nat.32)) U32
  λa ΛP λu32 (u32 a)

U32.or: ∀(:U32) ∀(:U32) U32
  λa λb (<a λ U32> λa_val (<b λ U32> λb_val (U32.new ((<Word.or Nat.32> a_val) b_val))))

U32.parse_hex: ∀(:String) U32
  λstr (U32.new ((Word.from_bits Nat.32) (Bits.parse_hex str)))

U32.pow: ∀(:U32) ∀(:U32) U32
  λa λb (<a λ U32> λa_val (<b λ U32> λb_val (U32.new ((<Word.pow Nat.32> a_val) b_val))))

U32.shl: ∀(:Nat) ∀(:U32) U32
  λn λa (<a λ U32> λa_val (U32.new ((<Word.shift_left Nat.32> n) a_val)))

U32.shr: ∀(:Nat) ∀(:U32) U32
  λn λa (<a λ U32> λa_val (U32.new ((<Word.shift_right Nat.32> n) a_val)))

U32.sub: ∀(:U32) ∀(:U32) U32
  λa λb (<a λ U32> λa_val (<b λ U32> λb_val (U32.new ((<Word.sub Nat.32> a_val) b_val))))

U32.to_bits: ∀(:U32) Bits
  λa (<a λ Bits> λa_val (<Word.to_bits Nat.32> a_val))

U32.to_nat: ∀(:U32) Nat
  λa (<a λ Nat> λa_val (<Word.to_nat Nat.32> a_val))

U32.xor: ∀(:U32) ∀(:U32) U32
  λa λb (<a λ U32> λa_val (<b λ U32> λb_val (U32.new ((<Word.xor Nat.32> a_val) b_val))))

U64.0: U64
  (U64.parse_hex ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil)))))))))))))))))

U64.add: ∀(:U64) ∀(:U64) U64
  λa λb (<a λ U64> λa_val (<b λ U64> λb_val (U64.new ((<Word.add Nat.64> a_val) b_val))))

U64.and: ∀(:U64) ∀(:U64) U64
  λa λb (<a λ U64> λa_val (<b λ U64> λb_val (U64.new ((<Word.and Nat.64> a_val) b_val))))

U64.div: ∀(:U64) ∀(:U64) U64
  λa λb (<a λ U64> λa_val (<b λ U64> λb_val (U64.new ((<Word.div Nat.64> a_val) b_val))))

U64.eql: ∀(:U64) ∀(:U64) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.eql Nat.64> a_val) b_val)))

U64: *
  Πu64(P:∀(:U64) *) ∀(new:∀(a:(Word Nat.64)) (P (U64.new a))) (P u64)

U64.gte: ∀(:U64) ∀(:U64) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.gte Nat.64> a_val) b_val)))

U64.gtn: ∀(:U64) ∀(:U64) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.gtn Nat.64> a_val) b_val)))

U64.inc: ∀(:U64) U64
  λa (<a λ U64> λa_val (U64.new (<Word.inc Nat.64> a_val)))

U64.lte: ∀(:U64) ∀(:U64) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.lte Nat.64> a_val) b_val)))

U64.ltn: ∀(:U64) ∀(:U64) Bool
  λa λb (<a λ Bool> λa_val (<b λ Bool> λb_val ((<Word.ltn Nat.64> a_val) b_val)))

U64.mix.const0: U64
  (U64.parse_hex ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0)) String.nil)))))))))))))))))

U64.mix.const1: U64
  (U64.parse_hex ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) String.nil)))))))))))))))))

U64.mix: ∀(:U64) U64
  λh $h=((U64.xor h) ((U64.shr Nat.33) h));$h=((U64.mul h) U64.mix.const0);$h=((U64.xor h) ((U64.shr Nat.33) h));$h=((U64.mul h) U64.mix.const1);$h=((U64.xor h) ((U64.shr Nat.33) h));h

U64.mod: ∀(:U64) ∀(:U64) U64
  λa λb (<a λ U64> λa_val (<b λ U64> λb_val (U64.new ((<Word.mod Nat.64> a_val) b_val))))

U64.mul: ∀(:U64) ∀(:U64) U64
  λa λb (<a λ U64> λa_val (<b λ U64> λb_val (U64.new ((<Word.mul Nat.64> a_val) b_val))))

U64.new: ∀(:(Word Nat.64)) U64
  λa ΛP λu64 (u64 a)

U64.or: ∀(:U64) ∀(:U64) U64
  λa λb (<a λ U64> λa_val (<b λ U64> λb_val (U64.new ((<Word.or Nat.64> a_val) b_val))))

U64.parse_hex: ∀(:String) U64
  λstr (U64.new ((Word.from_bits Nat.64) (Bits.parse_hex str)))

U64.pow: ∀(:U64) ∀(:U64) U64
  λa λb (<a λ U64> λa_val (<b λ U64> λb_val (U64.new ((<Word.pow Nat.64> a_val) b_val))))

U64.shl: ∀(:Nat) ∀(:U64) U64
  λn λa (<a λ U64> λa_val (U64.new ((<Word.shift_left Nat.64> n) a_val)))

U64.shr: ∀(:Nat) ∀(:U64) U64
  λn λa (<a λ U64> λa_val (U64.new ((<Word.shift_right Nat.64> n) a_val)))

U64.sub: ∀(:U64) ∀(:U64) U64
  λa λb (<a λ U64> λa_val (<b λ U64> λb_val (U64.new ((<Word.sub Nat.64> a_val) b_val))))

U64.to_bits: ∀(:U64) Bits
  λa (<a λ Bits> λa_val (<Word.to_bits Nat.64> a_val))

U64.to_nat: ∀(:U64) Nat
  λa (<a λ Nat> λa_val (<Word.to_nat Nat.64> a_val))

U64.xor: ∀(:U64) ∀(:U64) U64
  λa λb (<a λ U64> λa_val (<b λ U64> λb_val (U64.new ((<Word.xor Nat.64> a_val) b_val))))

UFind.new: UFind
  <Map.new UNode>

UFind.equivalent: ∀(:UFind) ∀(:Bits) ∀(:Bits) Bool
  λuf λpath1 λpath2 (((<UFind.find Bool> uf) path1) λuf λroot1 λrank1 (((<UFind.find Bool> uf) path2) λuf λroot2 λrank2 ((Bits.eql root1) root2)))

UFind.find: Π(B:*) ∀(:UFind) ∀(:Bits) ∀(:∀(:UFind) ∀(:Bits) ∀(:Nat) B) B
  ΛB λuf λpath λk $found=(((<Map.lookup UNode> path) (UNode.root Nat.zero)) uf);(<found λ B> λnode λuf ((<node λ B> λnode.rank (((k uf) path) node.rank)) λnode.parent (((<UFind.find B> uf) node.parent) λuf λroot λrank $uf=(((<Map.set UNode> path) (UNode.link root)) uf);(((k uf) root) rank))))

UFind: *
  (Map UNode)

UFind.new_node: ∀(:UFind) ∀(:Bits) UFind
  λuf λpath (((<Map.set UNode> path) (UNode.root Nat.zero)) uf)

UFind.union: ∀(:UFind) ∀(:Bits) ∀(:Bits) UFind
  λuf λpath1 λpath2 (((<UFind.find UFind> uf) path1) λuf λroot_path1 λrank1 (((<UFind.find UFind> uf) path2) λuf λroot_path2 λrank2 ((<((Bits.eql root_path1) root_path2) λ UFind> uf) (((<((Nat.cmp rank1) rank2) λ UFind> $uf=(((<Map.set UNode> root_path1) (UNode.link root_path2)) uf);uf) $uf=(((<Map.set UNode> root_path1) (UNode.link root_path2)) uf);$uf=(((<Map.set UNode> root_path2) (UNode.root (Nat.succ rank2))) uf);uf) $uf=(((<Map.set UNode> root_path1) (UNode.root rank2)) uf);$uf=(((<Map.set UNode> root_path2) (UNode.link root_path1)) uf);uf))))

UNode: *
  Πunode_value(P:∀(x:UNode) *) ∀(root:∀(rank:Nat) (P (UNode.root rank))) ∀(link:∀(parent:Bits) (P (UNode.link parent))) (P unode_value)

UNode.link: ∀(:Bits) UNode
  λparent Λ λ λlink (link parent)

UNode.root: ∀(:Nat) UNode
  λrank Λ λroot λ (root rank)

Unit: *
  Πunit(P:∀(:Unit) *) ∀(new:(P Unit.new)) (P unit)

Unit.new: Unit
  ΛP λunit unit

Unit.show: ∀(:Unit) String
  λu ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1)) String.nil))))))))

Variadic: ∀(:*) ∀(:*) ∀(:Nat) *
  λA λB λn ((<n λ *> B) λn.pred ∀(:A) (((Variadic A) B) n.pred))

Variadic.foldr: Π(A:*) Π(B:*) ∀(acc:∀(:A) ∀(:B) B) ∀(b:B) ∀(n:Nat) (((Variadic A) B) n)
  ΛA ΛB λacc λb (((<<Variadic.foldr.go A> B> acc) b) λr r)

Variadic.foldr.go: Π(A:*) Π(B:*) ∀(acc:∀(:A) ∀(:B) B) ∀(b:B) ∀(k:∀(:B) B) ∀(n:Nat) (((Variadic A) B) n)
  ΛA ΛB λacc λb λk λn ((<n λn (((Variadic A) B) n)> (k b)) λn.pred λa ((((<<Variadic.foldr.go A> B> acc) b) λr (k ((acc a) r))) n.pred))

Word.0: Π(size:Nat) ∀(:(Word size)) (Word (Nat.succ size))
  Λsize λwo ΛP λwe λw0 λw1 (<w0 size> wo)

Word.1: Π(size:Nat) ∀(:(Word size)) (Word (Nat.succ size))
  Λsize λwo ΛP λwe λw0 λw1 (<w1 size> wo)

Word.add.aux: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) ∀(:Bool) (Word size)
  Λsize λa λb λc ((((<a λa.size λ ∀(:(Word a.size)) (Word a.size)> λb Word.nil) Λa.size λa.pred λb ((((<b λb.size λ ∀(:(Word (Nat.pred b.size))) (Word b.size)> λa.pred Word.nil) Λb.size λb.pred λa.pred (((<c λ ∀(:Unit) (Word (Nat.succ b.size))> λ (<Word.1 b.size> (((<Word.add.aux b.size> a.pred) b.pred) Bool.false))) λ (<Word.0 b.size> (((<Word.add.aux b.size> a.pred) b.pred) Bool.false))) Unit.new)) Λb.size λb.pred λa.pred (((<c λ ∀(:Unit) (Word (Nat.succ b.size))> λ (<Word.0 b.size> (((<Word.add.aux b.size> a.pred) b.pred) Bool.true))) λ (<Word.1 b.size> (((<Word.add.aux b.size> a.pred) b.pred) Bool.false))) Unit.new)) a.pred)) Λa.size λa.pred λb ((((<b λb.size λ ∀(:(Word (Nat.pred b.size))) (Word b.size)> λa.pred Word.nil) Λb.size λb.pred λa.pred (((<c λ ∀(:Unit) (Word (Nat.succ b.size))> λ (<Word.0 b.size> (((<Word.add.aux b.size> a.pred) b.pred) Bool.true))) λ (<Word.1 b.size> (((<Word.add.aux b.size> a.pred) b.pred) Bool.false))) Unit.new)) Λb.size λb.pred λa.pred (((<c λ ∀(:Unit) (Word (Nat.succ b.size))> λ (<Word.1 b.size> (((<Word.add.aux b.size> a.pred) b.pred) Bool.true))) λ (<Word.0 b.size> (((<Word.add.aux b.size> a.pred) b.pred) Bool.true))) Unit.new)) a.pred)) b)

Word.add: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) (Word size)
  Λsize λa λb (((<Word.add.aux size> a) b) Bool.false)

Word.and: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) (Word size)
  Word.and

Word.cmp.aux: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) ∀(:Cmp) Cmp
  Λsize λa λb λc ((((<a λa.size λ ∀(:(Word a.size)) Cmp> λb c) Λa.size λa.pred λb ((((<b λb.size λ ∀(:(Word (Nat.pred b.size))) Cmp> λa.pred c) Λb.size λb.pred λa.pred (((<Word.cmp.aux b.size> a.pred) b.pred) c)) Λb.size λb.pred λa.pred (((<Word.cmp.aux b.size> a.pred) b.pred) Cmp.ltn)) a.pred)) Λa.size λa.pred λb ((((<b λb.size λ ∀(:(Word (Nat.pred b.size))) Cmp> λa.pred c) Λb.size λb.pred λa.pred (((<Word.cmp.aux b.size> a.pred) b.pred) Cmp.gtn)) Λb.size λb.pred λa.pred (((<Word.cmp.aux b.size> a.pred) b.pred) c)) a.pred)) b)

Word.cmp: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) Cmp
  Λsize λa λb (((<Word.cmp.aux size> a) b) Cmp.eql)

Word.concat: Π(a_size:Nat) Π(b_size:Nat) ∀(:(Word a_size)) ∀(:(Word b_size)) (Word ((Nat.add a_size) b_size))
  Λa_size Λb_size λa λb (((<a λa_size λ (Word ((Nat.add a_size) b_size))> b) Λa.size λa.pred $rest=((<<Word.concat a.size> b_size> a.pred) b);(<Word.0 ((Nat.add a.size) b_size)> rest)) Λa.size λa.pred $rest=((<<Word.concat a.size> b_size> a.pred) b);(<Word.1 ((Nat.add a.size) b_size)> rest))

Word.div: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) (Word size)
  Word.div

Word.drop: Π(size:Nat) ∀(n:Nat) ∀(:(Word ((Nat.add n) size))) (Word size)
  Λsize λn λword (((<n λn ∀(:(Word ((Nat.add n) size))) (Word size)> λword word) λn.pred λword $word.pred=(<Word.pred ((Nat.add n.pred) size)> word);((<Word.drop size> n.pred) word.pred)) word)

Word.eql: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) Bool
  Λsize λa λb (((<((<Word.cmp size> a) b) λ Bool> Bool.false) Bool.true) Bool.false)

Word: ∀(:Nat) *
  λsize Πword(P:∀(size:Nat) ∀(:(Word size)) *) ∀(we:((P Nat.zero) Word.nil)) ∀(w0:Π(size:Nat) ∀(pred:(Word size)) ((P (Nat.succ size)) (<Word.0 size> pred))) ∀(w1:Π(size:Nat) ∀(pred:(Word size)) ((P (Nat.succ size)) (<Word.1 size> pred))) ((P size) word)

Word.from_bits: ∀(size:Nat) ∀(:Bits) (Word size)
  λsize λbits ((<size λsize (Word size)> Word.nil) λsize.pred (((<bits λ (Word (Nat.succ size.pred))> (<Word.0 size.pred> ((Word.from_bits size.pred) Bits.nil))) λbits.pred (<Word.0 size.pred> ((Word.from_bits size.pred) bits.pred))) λbits.pred (<Word.1 size.pred> ((Word.from_bits size.pred) bits.pred))))

Word.gte: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) Bool
  Λsize λa λb (((<((<Word.cmp size> a) b) λ Bool> Bool.false) Bool.true) Bool.true)

Word.gtn: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) Bool
  Λsize λa λb (((<((<Word.cmp size> a) b) λ Bool> Bool.false) Bool.false) Bool.true)

Word.inc: Π(size:Nat) ∀(:(Word size)) (Word size)
  Λsize λword (((<word λsize λ (Word size)> Word.nil) Λsize λpred (<Word.1 size> pred)) Λsize λpred (<Word.0 size> (<Word.inc size> pred)))

Word.lte: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) Bool
  Λsize λa λb (((<((<Word.cmp size> a) b) λ Bool> Bool.true) Bool.true) Bool.false)

Word.ltn: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) Bool
  Λsize λa λb (((<((<Word.cmp size> a) b) λ Bool> Bool.true) Bool.false) Bool.false)

Word.mod: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) (Word size)
  Word.mod

Word.mul: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) (Word size)
  Word.mul

Word.neg.aux: Π(size:Nat) ∀(:(Word size)) ∀(:Bool) (Word size)
  Λsize λword λinc (((<word λsize λ (Word size)> Word.nil) Λsize λpred ((<inc λ (Word (Nat.succ size))> (<Word.0 size> ((<Word.neg.aux size> pred) Bool.true))) (<Word.1 size> ((<Word.neg.aux size> pred) Bool.false)))) Λsize λpred ((<inc λ (Word (Nat.succ size))> (<Word.1 size> ((<Word.neg.aux size> pred) Bool.false))) (<Word.0 size> ((<Word.neg.aux size> pred) Bool.false))))

Word.neg: Π(size:Nat) ∀(:(Word size)) (Word size)
  Λsize λword (((<word λsize λ (Word size)> Word.nil) Λsize λpred (<Word.0 size> ((<Word.neg.aux size> pred) Bool.true))) Λsize λpred (<Word.1 size> ((<Word.neg.aux size> pred) Bool.false)))

Word.nil: (Word Nat.zero)
  ΛP λwe λw0 λw1 we

Word.or: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) (Word size)
  Word.or

Word.parse_hex: ∀(size:Nat) ∀(:String) (Word size)
  λsize λstr ((Word.from_bits size) (Bits.parse_hex str))

Word.pow: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) (Word size)
  Word.pow

Word.pred: Π(size:Nat) ∀(:(Word (Nat.succ size))) (Word size)
  Λsize λword (((<word λsize λ (Word (Nat.pred size))> Word.nil) Λword.size λword.pred word.pred) Λword.size λword.pred word.pred)

Word.shift_left: Π(size:Nat) ∀(:Nat) ∀(:(Word size)) (Word size)
  Word.shift_left

Word.shift_right: Π(size:Nat) ∀(:Nat) ∀(:(Word size)) (Word size)
  Word.shift_right

Word.sub: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) (Word size)
  Λsize λa λb ((<Word.add size> a) (<Word.neg size> b))

Word.to_bits: Π(size:Nat) ∀(:(Word size)) Bits
  Λsize λa (((<a λ λ Bits> Bits.nil) Λsize λpred (Bits.0 (<Word.to_bits size> pred))) Λsize λpred (Bits.1 (<Word.to_bits size> pred)))

Word.to_nat: Π(size:Nat) ∀(:(Word size)) Nat
  Λsize λword ((<Word.to_nat.go size> word) Nat.1)

Word.to_nat.go: Π(size:Nat) ∀(:(Word size)) ∀(:Nat) Nat
  Λsize λword λadd (((<word λ λ Nat> Nat.zero) Λsize λword.pred ((<Word.to_nat.go size> word.pred) ((Nat.mul add) Nat.2))) Λsize λword.pred ((Nat.add add) ((<Word.to_nat.go size> word.pred) ((Nat.mul add) Nat.2))))

Word.xor: Π(size:Nat) ∀(:(Word size)) ∀(:(Word size)) (Word size)
  Word.xor

hello: (IO Unit)
  $uname=((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) String.nil))))))))));$greet=(String.concat ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0)) String.nil))))))));((<IO.log Unit> uname) λ (<IO.inp Unit> λname ((<IO.log Unit> (greet name)) λ (<IO.end Unit> Unit.new))))

