Core.Read.all: (Core.Read Core.Bind)
  ((<<Core.Read.seek Text> Core.Bind> Core.Read.nam) λself ((<<Core.Read.bind Bool> Core.Bind> ((Core.Read.one ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.0)) String.nil)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0) Bit.0)) String.nil))) λeras ((<<Core.Read.seek Text> Core.Bind> Core.Read.nam) λname ((<<Core.Read.seek Unit> Core.Bind> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0)) String.nil))) λskip ((<<Core.Read.bind Core.Bind> Core.Bind> Core.Read.trm) λbind ((<<Core.Read.seek Bool> Core.Bind> ((Core.Read.one ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0) Bit.1)) String.nil)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil))) λskip ((<<Core.Read.seek Unit> Core.Bind> (Core.Read.txt ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.1) Bit.1) Bit.1) Bit.0)) String.nil)))) λskip ((<<Core.Read.bind Core.Bind> Core.Bind> Core.Read.trm) λbody (<Core.Read.done Core.Bind> λctx (((((Core.all eras) self) name) (bind ctx)) λs λx (body (((Core.Ctx.ext name) x) (((Core.Ctx.ext self) s) ctx)))))))))))))

