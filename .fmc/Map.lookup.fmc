Map.lookup: ∀(A:*) Π(:Bits) Π(:A) Π(:(Map A)) ((Pair A) (Map A))
  ΛA λbits λval λmap (((<bits λ ((Pair A) (Map A))> ((<map λ ((Pair A) (Map A))> @map=(((<Map.tie A> (<Maybe.some A> val)) <Map.new A>) <Map.new A>);((<<Pair.new A> (Map A)> val) map)) λmap.val λmap.lft λmap.rgt @value=((<Maybe.extract A> map.val) val);@map=(((<Map.tie A> (<Maybe.some A> value)) map.lft) map.rgt);((<<Pair.new A> (Map A)> value) map))) λbits.pred ((<map λ ((Pair A) (Map A))> @p=(((<Map.lookup A> bits.pred) val) <Map.new A>);(<p λ ((Pair A) (Map A))> λp.a λp.b ((<<Pair.new A> (Map A)> p.a) (((<Map.tie A> <Maybe.none A>) p.b) <Map.new A>)))) λmap.val λmap.lft λmap.rgt @p=(((<Map.lookup A> bits.pred) val) map.lft);(<p λ ((Pair A) (Map A))> λp.a λp.b ((<<Pair.new A> (Map A)> p.a) (((<Map.tie A> map.val) p.b) map.rgt))))) λbits.pred ((<map λ ((Pair A) (Map A))> @p=(((<Map.lookup A> bits.pred) val) <Map.new A>);(<p λ ((Pair A) (Map A))> λp.a λp.b ((<<Pair.new A> (Map A)> p.a) (((<Map.tie A> <Maybe.none A>) <Map.new A>) p.b)))) λmap.val λmap.lft λmap.rgt @p=(((<Map.lookup A> bits.pred) val) map.rgt);(<p λ ((Pair A) (Map A))> λp.a λp.b ((<<Pair.new A> (Map A)> p.a) (((<Map.tie A> map.val) map.lft) p.b)))))

