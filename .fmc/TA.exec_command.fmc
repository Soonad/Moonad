TA.exec_command: Π(:TA.Game.Command) Π(:TA.Game.Game) TA.Game.Game
  λcmd λgm (<cmd λ TA.Game.Game> λcmd.pid λcmd.inp @fn=:Π(:TA.Thing) TA.Thing λthis @inp=cmd.inp;@is_silenced=(TA.Thing.is_silenced this);@is_stunned=(TA.Thing.is_stunned this);((<is_stunned λ TA.Thing> ((((((((<inp λ TA.Thing> λsdir.dir (((TA.Game.init_act this) F64.0) sdir.dir)) λkey0.pos this) λkey1.pos this) λkey2.pos this) λkey3.pos this) λkey4.pos this) λkey5.pos this) λcmsg.txt this)) ((<is_silenced λ TA.Thing> ((((((((<inp λ TA.Thing> λsdir.dir ((TA.Thing.set_pad this) sdir.dir)) λkey0.pos this) λkey1.pos this) λkey2.pos this) λkey3.pos this) λkey4.pos this) λkey5.pos this) λcmsg.txt this)) ((((((((<inp λ TA.Thing> λsdir.dir ((TA.Thing.set_pad this) sdir.dir)) λkey0.pos (((TA.Game.init_act this) F64.1) key0.pos)) λkey1.pos (((TA.Game.init_act this) F64.2) key1.pos)) λkey2.pos (((TA.Game.init_act this) (F64.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.0) Bit.1) Bit.1)) String.nil))) key2.pos)) λkey3.pos (((TA.Game.init_act this) (F64.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.0)) String.nil))) key3.pos)) λkey4.pos (((TA.Game.init_act this) (F64.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.0) Bit.1)) String.nil))) key4.pos)) λkey5.pos (((TA.Game.init_act this) (F64.parse ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0)) String.nil))) key5.pos)) λcmsg.txt this)));(((TA.Game.with_thing cmd.pid) fn) gm))

