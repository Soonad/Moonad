Core.reduce: Π(:Core) Π(:Core.Defs) Core
  λterm λdefs ((((((((<term λ Core> λindx λname λflip (((Core.var indx) name) flip)) λname ((<((Core.Defs.get_term defs) name) λ Core> (Core.ref name)) λterm ((Core.reduce term) defs))) Core.typ) λeras λself λname λbind λbody (((((Core.all eras) self) name) bind) body)) λeras λname λbody ((<eras λ Core> ((Core.reduce (body (Core.ref ((String.cons ((((((((((((((((Char.new Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.0) Bit.1) Bit.0) Bit.1) Bit.1) Bit.0) Bit.1)) String.nil)))) defs)) (((Core.lam eras) name) body))) λeras λfunc λargm ((<eras λ Core> ((Core.reduce func) defs)) (((((((((<((Core.reduce func) defs) λ Π(:Core) Core> λfindx λfname λfflip ((Core.app eras) (((Core.var findx) fname) fflip))) λfname ((Core.app eras) (Core.ref fname))) ((Core.app eras) Core.typ)) λferas λfself λfname λfbind λfbody ((Core.app eras) (((((Core.all feras) fself) fname) fbind) fbody))) λferas λfname λfbody λterm.argm ((Core.reduce (fbody term.argm)) defs)) λferas λffunc λfargm ((Core.app eras) (((Core.app feras) ffunc) fargm))) λfname λfexpr λfbody ((Core.app eras) (((Core.let fname) fexpr) fbody))) λfdone λfexpr λftype ((Core.app eras) (((Core.ann fdone) fexpr) ftype))) argm))) λname λexpr λbody ((Core.reduce (body expr)) defs)) λdone λexpr λtype ((Core.reduce expr) defs))

