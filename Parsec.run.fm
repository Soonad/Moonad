// Running a parser is applying it to a Parsec.State and
// the four possible Parsec.Reply constructors
// This sets `B` from the `Parsec` definition as Parsec.Reply
// which terminates the chain of continuations

Parsec.run :
  <S : Type> ->
  <E : Type> ->
  <A: Type> ->
  Parsec(S)(E)(A) ->
  Parsec.State(S)(E) ->
  Parsec.Reply(S)(E)(A)

  <S> <E> <A> (p) (s)
  p<Parsec.Reply(S)(E)(A)>(s)
  | Parsec.Reply.empty_value<S><E><A>;
  | Parsec.Reply.empty_error<S><E><A>;
  | Parsec.Reply.eaten_value<S><E><A>;
  | Parsec.Reply.eaten_error<S><E><A>;

